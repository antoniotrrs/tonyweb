{"ast":null,"code":"import { Fragment as _Fragment, createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\"; // Styles\n\nimport \"./VNavigationDrawer.css\"; // Components\n\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.js\";\nimport { VImg } from \"../VImg/index.js\"; // Composables\n\nimport { useSticky } from \"./sticky.js\";\nimport { useTouch } from \"./touch.js\";\nimport { useRtl } from \"../../composables/index.js\";\nimport { makeBorderProps, useBorder } from \"../../composables/border.js\";\nimport { useBackgroundColor } from \"../../composables/color.js\";\nimport { makeComponentProps } from \"../../composables/component.js\";\nimport { provideDefaults } from \"../../composables/defaults.js\";\nimport { makeDelayProps, useDelay } from \"../../composables/delay.js\";\nimport { makeDisplayProps, useDisplay } from \"../../composables/display.js\";\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.js\";\nimport { makeLayoutItemProps, useLayoutItem } from \"../../composables/layout.js\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.js\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.js\";\nimport { useRouter } from \"../../composables/router.js\";\nimport { useScopeId } from \"../../composables/scopeId.js\";\nimport { useSsrBoot } from \"../../composables/ssrBoot.js\";\nimport { makeTagProps } from \"../../composables/tag.js\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.js\";\nimport { useToggleScope } from \"../../composables/toggleScope.js\"; // Utilities\n\nimport { computed, nextTick, readonly, ref, shallowRef, toRef, Transition, watch } from 'vue';\nimport { genericComponent, propsFactory, toPhysical, useRender } from \"../../util/index.js\"; // Types\n\nconst locations = ['start', 'end', 'left', 'right', 'top', 'bottom'];\nexport const makeVNavigationDrawerProps = propsFactory({\n  color: String,\n  disableResizeWatcher: Boolean,\n  disableRouteWatcher: Boolean,\n  expandOnHover: Boolean,\n  floating: Boolean,\n  modelValue: {\n    type: Boolean,\n    default: null\n  },\n  permanent: Boolean,\n  rail: {\n    type: Boolean,\n    default: null\n  },\n  railWidth: {\n    type: [Number, String],\n    default: 56\n  },\n  scrim: {\n    type: [Boolean, String],\n    default: true\n  },\n  image: String,\n  temporary: Boolean,\n  persistent: Boolean,\n  touchless: Boolean,\n  width: {\n    type: [Number, String],\n    default: 256\n  },\n  location: {\n    type: String,\n    default: 'start',\n    validator: value => locations.includes(value)\n  },\n  sticky: Boolean,\n  ...makeBorderProps(),\n  ...makeComponentProps(),\n  ...makeDelayProps(),\n  ...makeDisplayProps({\n    mobile: null\n  }),\n  ...makeElevationProps(),\n  ...makeLayoutItemProps(),\n  ...makeRoundedProps(),\n  ...makeTagProps({\n    tag: 'nav'\n  }),\n  ...makeThemeProps()\n}, 'VNavigationDrawer');\nexport const VNavigationDrawer = genericComponent()({\n  name: 'VNavigationDrawer',\n  props: makeVNavigationDrawerProps(),\n  emits: {\n    'update:modelValue': val => true,\n    'update:rail': val => true\n  },\n\n  setup(props, _ref) {\n    let {\n      attrs,\n      emit,\n      slots\n    } = _ref;\n    const {\n      isRtl\n    } = useRtl();\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      borderClasses\n    } = useBorder(props);\n    const {\n      backgroundColorClasses,\n      backgroundColorStyles\n    } = useBackgroundColor(toRef(props, 'color'));\n    const {\n      elevationClasses\n    } = useElevation(props);\n    const {\n      displayClasses,\n      mobile\n    } = useDisplay(props);\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const router = useRouter();\n    const isActive = useProxiedModel(props, 'modelValue', null, v => !!v);\n    const {\n      ssrBootStyles\n    } = useSsrBoot();\n    const {\n      scopeId\n    } = useScopeId();\n    const rootEl = ref();\n    const isHovering = shallowRef(false);\n    const {\n      runOpenDelay,\n      runCloseDelay\n    } = useDelay(props, value => {\n      isHovering.value = value;\n    });\n    const width = computed(() => {\n      return props.rail && props.expandOnHover && isHovering.value ? Number(props.width) : Number(props.rail ? props.railWidth : props.width);\n    });\n    const location = computed(() => {\n      return toPhysical(props.location, isRtl.value);\n    });\n    const isPersistent = computed(() => props.persistent);\n    const isTemporary = computed(() => !props.permanent && (mobile.value || props.temporary));\n    const isSticky = computed(() => props.sticky && !isTemporary.value && location.value !== 'bottom');\n    useToggleScope(() => props.expandOnHover && props.rail != null, () => {\n      watch(isHovering, val => emit('update:rail', !val));\n    });\n    useToggleScope(() => !props.disableResizeWatcher, () => {\n      watch(isTemporary, val => !props.permanent && nextTick(() => isActive.value = !val));\n    });\n    useToggleScope(() => !props.disableRouteWatcher && !!router, () => {\n      watch(router.currentRoute, () => isTemporary.value && (isActive.value = false));\n    });\n    watch(() => props.permanent, val => {\n      if (val) isActive.value = true;\n    });\n\n    if (props.modelValue == null && !isTemporary.value) {\n      isActive.value = props.permanent || !mobile.value;\n    }\n\n    const {\n      isDragging,\n      dragProgress\n    } = useTouch({\n      el: rootEl,\n      isActive,\n      isTemporary,\n      width,\n      touchless: toRef(props, 'touchless'),\n      position: location\n    });\n    const layoutSize = computed(() => {\n      const size = isTemporary.value ? 0 : props.rail && props.expandOnHover ? Number(props.railWidth) : width.value;\n      return isDragging.value ? size * dragProgress.value : size;\n    });\n    const {\n      layoutItemStyles,\n      layoutItemScrimStyles\n    } = useLayoutItem({\n      id: props.name,\n      order: computed(() => parseInt(props.order, 10)),\n      position: location,\n      layoutSize,\n      elementSize: width,\n      active: readonly(isActive),\n      disableTransitions: computed(() => isDragging.value),\n      absolute: computed(() => // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      props.absolute || isSticky.value && typeof isStuck.value !== 'string')\n    });\n    const {\n      isStuck,\n      stickyStyles\n    } = useSticky({\n      rootEl,\n      isSticky,\n      layoutItemStyles\n    });\n    const scrimColor = useBackgroundColor(computed(() => {\n      return typeof props.scrim === 'string' ? props.scrim : null;\n    }));\n    const scrimStyles = computed(() => ({ ...(isDragging.value ? {\n        opacity: dragProgress.value * 0.2,\n        transition: 'none'\n      } : undefined),\n      ...layoutItemScrimStyles.value\n    }));\n    provideDefaults({\n      VList: {\n        bgColor: 'transparent'\n      }\n    });\n    useRender(() => {\n      const hasImage = slots.image || props.image;\n      return _createVNode(_Fragment, null, [_createVNode(props.tag, _mergeProps({\n        \"ref\": rootEl,\n        \"onMouseenter\": runOpenDelay,\n        \"onMouseleave\": runCloseDelay,\n        \"class\": ['v-navigation-drawer', `v-navigation-drawer--${location.value}`, {\n          'v-navigation-drawer--expand-on-hover': props.expandOnHover,\n          'v-navigation-drawer--floating': props.floating,\n          'v-navigation-drawer--is-hovering': isHovering.value,\n          'v-navigation-drawer--rail': props.rail,\n          'v-navigation-drawer--temporary': isTemporary.value,\n          'v-navigation-drawer--persistent': isPersistent.value,\n          'v-navigation-drawer--active': isActive.value,\n          'v-navigation-drawer--sticky': isSticky.value\n        }, themeClasses.value, backgroundColorClasses.value, borderClasses.value, displayClasses.value, elevationClasses.value, roundedClasses.value, props.class],\n        \"style\": [backgroundColorStyles.value, layoutItemStyles.value, ssrBootStyles.value, stickyStyles.value, props.style]\n      }, scopeId, attrs), {\n        default: () => [hasImage && _createVNode(\"div\", {\n          \"key\": \"image\",\n          \"class\": \"v-navigation-drawer__img\"\n        }, [!slots.image ? _createVNode(VImg, {\n          \"key\": \"image-img\",\n          \"alt\": \"\",\n          \"cover\": true,\n          \"height\": \"inherit\",\n          \"src\": props.image\n        }, null) : _createVNode(VDefaultsProvider, {\n          \"key\": \"image-defaults\",\n          \"disabled\": !props.image,\n          \"defaults\": {\n            VImg: {\n              alt: '',\n              cover: true,\n              height: 'inherit',\n              src: props.image\n            }\n          }\n        }, slots.image)]), slots.prepend && _createVNode(\"div\", {\n          \"class\": \"v-navigation-drawer__prepend\"\n        }, [slots.prepend?.()]), _createVNode(\"div\", {\n          \"class\": \"v-navigation-drawer__content\"\n        }, [slots.default?.()]), slots.append && _createVNode(\"div\", {\n          \"class\": \"v-navigation-drawer__append\"\n        }, [slots.append?.()])]\n      }), _createVNode(Transition, {\n        \"name\": \"fade-transition\"\n      }, {\n        default: () => [isTemporary.value && (isDragging.value || isActive.value) && !!props.scrim && _createVNode(\"div\", _mergeProps({\n          \"class\": ['v-navigation-drawer__scrim', scrimColor.backgroundColorClasses.value],\n          \"style\": [scrimStyles.value, scrimColor.backgroundColorStyles.value],\n          \"onClick\": () => {\n            if (isPersistent.value) return;\n            isActive.value = false;\n          }\n        }, scopeId), null)]\n      })]);\n    });\n    return {\n      isStuck\n    };\n  }\n\n});","map":{"version":3,"mappings":"qGAAA;;AACA,iC,CAEA;;AAAA,SACSA,iBADT,QAC0B,+BAD1B;AAC0B,SACjBC,IADiB,QACb,kBADa,C,CAG1B;;AAAA,SACSC,SADT,QACkB,aADlB;AACkB,SACTC,QADS,QACD,YADC;AACD,SACRC,MADQ,QACF,4BADE;AACF,SACNC,eADM,EACWC,SADX,QACoB,6BADpB;AACoB,SAC1BC,kBAD0B,QACR,4BADQ;AACR,SAClBC,kBADkB,QACA,gCADA;AACA,SAClBC,eADkB,QACH,+BADG;AACH,SACfC,cADe,EACCC,QADD,QACS,4BADT;AACS,SACxBC,gBADwB,EACNC,UADM,QACI,8BADJ;AACI,SAC5BC,kBAD4B,EACRC,YADQ,QACI,gCADJ;AACI,SAChCC,mBADgC,EACXC,aADW,QACE,6BADF;AACE,SAClCC,eADkC,QACnB,mCADmB;AACnB,SACfC,gBADe,EACGC,UADH,QACa,8BADb;AACa,SAC5BC,SAD4B,QACnB,6BADmB;AACnB,SACTC,UADS,QACC,8BADD;AACC,SACVC,UADU,QACA,8BADA;AACA,SACVC,YADU,QACE,0BADF;AACE,SACZC,cADY,EACIC,YADJ,QACgB,4BADhB;AACgB,SAC5BC,cAD4B,QACd,kCADc,C,CAGrC;;AACA,SAASC,QAAT,EAAmBC,QAAnB,EAA6BC,QAA7B,EAAuCC,GAAvC,EAA4CC,UAA5C,EAAwDC,KAAxD,EAA+DC,UAA/D,EAA2EC,KAA3E,QAAwF,KAAxF;AAA6F,SACpFC,gBADoF,EAClEC,YADkE,EACpDC,UADoD,EACxCC,SADwC,QAC/B,qBAD+B,C,CAG7F;;AAcA,MAAMC,SAAS,GAAG,CAAC,OAAD,EAAU,KAAV,EAAiB,MAAjB,EAAyB,OAAzB,EAAkC,KAAlC,EAAyC,QAAzC,CAAlB;AAEA,OAAO,MAAMC,0BAA0B,GAAGJ,YAAY,CAAC;AACrDK,OAAK,EAAEC,MAD8C;AAErDC,sBAAoB,EAAEC,OAF+B;AAGrDC,qBAAmB,EAAED,OAHgC;AAIrDE,eAAa,EAAEF,OAJsC;AAKrDG,UAAQ,EAAEH,OAL2C;AAMrDI,YAAU,EAAE;AACVC,QAAI,EAAEL,OADI;AAEVM,WAAO,EAAE;AAFC,GANyC;AAUrDC,WAAS,EAAEP,OAV0C;AAWrDQ,MAAI,EAAE;AACJH,QAAI,EAAEL,OADF;AAEJM,WAAO,EAAE;AAFL,GAX+C;AAerDG,WAAS,EAAE;AACTJ,QAAI,EAAE,CAACK,MAAD,EAASZ,MAAT,CADG;AAETQ,WAAO,EAAE;AAFA,GAf0C;AAmBrDK,OAAK,EAAE;AACLN,QAAI,EAAE,CAACL,OAAD,EAAUF,MAAV,CADD;AAELQ,WAAO,EAAE;AAFJ,GAnB8C;AAuBrDM,OAAK,EAAEd,MAvB8C;AAwBrDe,WAAS,EAAEb,OAxB0C;AAyBrDc,YAAU,EAAEd,OAzByC;AA0BrDe,WAAS,EAAEf,OA1B0C;AA2BrDgB,OAAK,EAAE;AACLX,QAAI,EAAE,CAACK,MAAD,EAASZ,MAAT,CADD;AAELQ,WAAO,EAAE;AAFJ,GA3B8C;AA+BrDW,UAAQ,EAAE;AACRZ,QAAI,EAAEP,MADE;AAERQ,WAAO,EAAE,OAFD;AAGRY,aAAS,EAAGC,KAAU,IAAKxB,SAAS,CAACyB,QAAVzB,CAAmBwB,KAAnBxB;AAHnB,GA/B2C;AAoCrD0B,QAAM,EAAErB,OApC6C;AAsCrD,KAAGxC,eAAe,EAtCmC;AAuCrD,KAAGG,kBAAkB,EAvCgC;AAwCrD,KAAGE,cAAc,EAxCoC;AAyCrD,KAAGE,gBAAgB,CAAC;AAAEuD,UAAM,EAAE;AAAV,GAAD,CAzCkC;AA0CrD,KAAGrD,kBAAkB,EA1CgC;AA2CrD,KAAGE,mBAAmB,EA3C+B;AA4CrD,KAAGG,gBAAgB,EA5CkC;AA6CrD,KAAGK,YAAY,CAAC;AAAE4C,OAAG,EAAE;AAAP,GAAD,CA7CsC;AA8CrD,KAAG3C,cAAc;AA9CoC,CAAD,EA+CnD,mBA/CmD,CAA/C;AAiDP,OAAO,MAAM4C,iBAAiB,GAAGjC,gBAAgB,GAA2B;AAC1EkC,MAAI,EAAE,mBADoE;AAG1EC,OAAK,EAAE9B,0BAA0B,EAHyC;AAK1E+B,OAAK,EAAE;AACL,yBAAsBC,GAAY,IAAK,IADlC;AAEL,mBAAgBA,GAAY,IAAK;AAF5B,GALmE;;AAU1EC,OAAKA,CAAEH,KAAFG,EAAOC,IAAPD,EAAiC;AAAA,QAAxB;AAAEE,WAAF;AAASC,UAAT;AAAeC;AAAf,QAAsBH,IAAE;AACpC,UAAM;AAAEI;AAAF,QAAY3E,MAAM,EAAxB;AACA,UAAM;AAAE4E;AAAF,QAAmBtD,YAAY,CAAC6C,KAAD,CAArC;AACA,UAAM;AAAEU;AAAF,QAAoB3E,SAAS,CAACiE,KAAD,CAAnC;AACA,UAAM;AAAEW,4BAAF;AAA0BC;AAA1B,QAAoD5E,kBAAkB,CAAC0B,KAAK,CAACsC,KAAD,EAAQ,OAAR,CAAN,CAA5E;AACA,UAAM;AAAEa;AAAF,QAAuBrE,YAAY,CAACwD,KAAD,CAAzC;AACA,UAAM;AAAEc,oBAAF;AAAkBlB;AAAlB,QAA6BtD,UAAU,CAAC0D,KAAD,CAA7C;AACA,UAAM;AAAEe;AAAF,QAAqBlE,UAAU,CAACmD,KAAD,CAArC;AACA,UAAMgB,MAAM,GAAGlE,SAAS,EAAxB;AACA,UAAMmE,QAAQ,GAAGtE,eAAe,CAACqD,KAAD,EAAQ,YAAR,EAAsB,IAAtB,EAA4BkB,CAAC,IAAI,CAAC,CAACA,CAAnC,CAAhC;AACA,UAAM;AAAEC;AAAF,QAAoBnE,UAAU,EAApC;AACA,UAAM;AAAEoE;AAAF,QAAcrE,UAAU,EAA9B;AAEA,UAAMsE,MAAM,GAAG7D,GAAG,EAAlB;AACA,UAAM8D,UAAU,GAAG7D,UAAU,CAAC,KAAD,CAA7B;AAEA,UAAM;AAAE8D,kBAAF;AAAgBC;AAAhB,QAAkCpF,QAAQ,CAAC4D,KAAD,EAAQP,KAAK,IAAI;AAC/D6B,gBAAU,CAAC7B,KAAX6B,GAAmB7B,KAAnB6B;AACD,KAF+C,CAAhD;AAIA,UAAMhC,KAAK,GAAGjC,QAAQ,CAAC,MAAM;AAC3B,aAAQ2C,KAAK,CAAClB,IAANkB,IAAcA,KAAK,CAACxB,aAApBwB,IAAqCsB,UAAU,CAAC7B,KAAhDO,GACJhB,MAAM,CAACgB,KAAK,CAACV,KAAP,CADFU,GAEJhB,MAAM,CAACgB,KAAK,CAAClB,IAANkB,GAAaA,KAAK,CAACjB,SAAnBiB,GAA+BA,KAAK,CAACV,KAAtC,CAFV;AAGD,KAJqB,CAAtB;AAKA,UAAMC,QAAQ,GAAGlC,QAAQ,CAAC,MAAM;AAC9B,aAAOU,UAAU,CAACiC,KAAK,CAACT,QAAP,EAAiBiB,KAAK,CAACf,KAAvB,CAAjB;AACD,KAFwB,CAAzB;AAGA,UAAMgC,YAAY,GAAGpE,QAAQ,CAAC,MAAM2C,KAAK,CAACZ,UAAb,CAA7B;AACA,UAAMsC,WAAW,GAAGrE,QAAQ,CAAC,MAAM,CAAC2C,KAAK,CAACnB,SAAP,KAAqBe,MAAM,CAACH,KAAPG,IAAgBI,KAAK,CAACb,SAA3C,CAAP,CAA5B;AACA,UAAMwC,QAAQ,GAAGtE,QAAQ,CAAC,MACxB2C,KAAK,CAACL,MAANK,IACA,CAAC0B,WAAW,CAACjC,KADbO,IAEAT,QAAQ,CAACE,KAATF,KAAmB,QAHI,CAAzB;AAMAnC,kBAAc,CAAC,MAAM4C,KAAK,CAACxB,aAANwB,IAAuBA,KAAK,CAAClB,IAANkB,IAAc,IAA5C,EAAkD,MAAM;AACpEpC,WAAK,CAAC0D,UAAD,EAAapB,GAAG,IAAII,IAAI,CAAC,aAAD,EAAgB,CAACJ,GAAjB,CAAxB,CAALtC;AACD,KAFa,CAAdR;AAIAA,kBAAc,CAAC,MAAM,CAAC4C,KAAK,CAAC3B,oBAAd,EAAoC,MAAM;AACtDT,WAAK,CAAC8D,WAAD,EAAcxB,GAAG,IAAI,CAACF,KAAK,CAACnB,SAAP,IAAqBvB,QAAQ,CAAC,MAAM2D,QAAQ,CAACxB,KAATwB,GAAiB,CAACf,GAAzB,CAAlD,CAALtC;AACD,KAFa,CAAdR;AAIAA,kBAAc,CAAC,MAAM,CAAC4C,KAAK,CAACzB,mBAAP,IAA8B,CAAC,CAACyC,MAAvC,EAA+C,MAAM;AACjEpD,WAAK,CAACoD,MAAM,CAAEY,YAAT,EAAuB,MAAMF,WAAW,CAACjC,KAAZiC,KAAsBT,QAAQ,CAACxB,KAATwB,GAAiB,KAAvCS,CAA7B,CAAL9D;AACD,KAFa,CAAdR;AAIAQ,SAAK,CAAC,MAAMoC,KAAK,CAACnB,SAAb,EAAwBqB,GAAG,IAAI;AAClC,UAAIA,GAAJ,EAASe,QAAQ,CAACxB,KAATwB,GAAiB,IAAjBA;AACV,KAFI,CAALrD;;AAIA,QAAIoC,KAAK,CAACtB,UAANsB,IAAoB,IAApBA,IAA4B,CAAC0B,WAAW,CAACjC,KAA7C,EAAoD;AAClDwB,cAAQ,CAACxB,KAATwB,GAAiBjB,KAAK,CAACnB,SAANmB,IAAmB,CAACJ,MAAM,CAACH,KAA5CwB;AACF;;AAEA,UAAM;AAAEY,gBAAF;AAAcC;AAAd,QAA+BlG,QAAQ,CAAC;AAC5CmG,QAAE,EAAEV,MADwC;AAE5CJ,cAF4C;AAG5CS,iBAH4C;AAI5CpC,WAJ4C;AAK5CD,eAAS,EAAE3B,KAAK,CAACsC,KAAD,EAAQ,WAAR,CAL4B;AAM5CgC,cAAQ,EAAEzC;AANkC,KAAD,CAA7C;AASA,UAAM0C,UAAU,GAAG5E,QAAQ,CAAC,MAAM;AAChC,YAAM6E,IAAI,GAAGR,WAAW,CAACjC,KAAZiC,GAAoB,CAApBA,GACT1B,KAAK,CAAClB,IAANkB,IAAcA,KAAK,CAACxB,aAApBwB,GAAoChB,MAAM,CAACgB,KAAK,CAACjB,SAAP,CAA1CiB,GACAV,KAAK,CAACG,KAFV;AAIA,aAAOoC,UAAU,CAACpC,KAAXoC,GAAmBK,IAAI,GAAGJ,YAAY,CAACrC,KAAvCoC,GAA+CK,IAAtD;AACD,KAN0B,CAA3B;AAOA,UAAM;AAAEC,sBAAF;AAAoBC;AAApB,QAA8C1F,aAAa,CAAC;AAChE2F,QAAE,EAAErC,KAAK,CAACD,IADsD;AAEhEuC,WAAK,EAAEjF,QAAQ,CAAC,MAAMkF,QAAQ,CAACvC,KAAK,CAACsC,KAAP,EAAc,EAAd,CAAf,CAFiD;AAGhEN,cAAQ,EAAEzC,QAHsD;AAIhE0C,gBAJgE;AAKhEO,iBAAW,EAAElD,KALmD;AAMhEmD,YAAM,EAAElF,QAAQ,CAAC0D,QAAD,CANgD;AAOhEyB,wBAAkB,EAAErF,QAAQ,CAAC,MAAMwE,UAAU,CAACpC,KAAlB,CAPoC;AAQhEkD,cAAQ,EAAEtF,QAAQ,CAAC,MACjB;AACA2C,WAAK,CAAC2C,QAAN3C,IAAmB2B,QAAQ,CAAClC,KAATkC,IAAkB,OAAOiB,OAAO,CAACnD,KAAf,KAAyB,QAF9C;AAR8C,KAAD,CAAjE;AAcA,UAAM;AAAEmD,aAAF;AAAWC;AAAX,QAA4BlH,SAAS,CAAC;AAAE0F,YAAF;AAAUM,cAAV;AAAoBQ;AAApB,KAAD,CAA3C;AAEA,UAAMW,UAAU,GAAG9G,kBAAkB,CAACqB,QAAQ,CAAC,MAAM;AACnD,aAAO,OAAO2C,KAAK,CAACf,KAAb,KAAuB,QAAvB,GAAkCe,KAAK,CAACf,KAAxC,GAAgD,IAAvD;AACD,KAF6C,CAAT,CAArC;AAGA,UAAM8D,WAAW,GAAG1F,QAAQ,CAAC,OAAO,EAClC,IAAGwE,UAAU,CAACpC,KAAXoC,GAAmB;AACpBmB,eAAO,EAAElB,YAAY,CAACrC,KAAbqC,GAAqB,GADV;AAEpBmB,kBAAU,EAAE;AAFQ,OAAnBpB,GAGCqB,SAHJ,CADkC;AAKlC,SAAGd,qBAAqB,CAAC3C;AALS,KAAP,CAAD,CAA5B;AAQAvD,mBAAe,CAAC;AACdiH,WAAK,EAAE;AACLC,eAAO,EAAE;AADJ;AADO,KAAD,CAAflH;AAMA8B,aAAS,CAAC,MAAM;AACd,YAAMqF,QAAQ,GAAI9C,KAAK,CAACrB,KAANqB,IAAeP,KAAK,CAACd,KAAvC;AAEA;AAAA,eAGYmC,MAHZ;AAGkB,wBACGE,YAJrB;AAIiC,wBACZC,aALrB;AAKkC,iBACrB,CACL,qBADK,EAEL,wBAAwBjC,QAAQ,CAACE,KAAK,EAFjC,EAGL;AACE,kDAAwCO,KAAK,CAACxB,aADhD;AAEE,2CAAiCwB,KAAK,CAACvB,QAFzC;AAGE,8CAAoC6C,UAAU,CAAC7B,KAHjD;AAIE,uCAA6BO,KAAK,CAAClB,IAJrC;AAKE,4CAAkC4C,WAAW,CAACjC,KALhD;AAME,6CAAmCgC,YAAY,CAAChC,KANlD;AAOE,yCAA+BwB,QAAQ,CAACxB,KAP1C;AAQE,yCAA+BkC,QAAQ,CAAClC;AAR1C,SAHK,EAaLgB,YAAY,CAAChB,KAbR,EAcLkB,sBAAsB,CAAClB,KAdlB,EAeLiB,aAAa,CAACjB,KAfT,EAgBLqB,cAAc,CAACrB,KAhBV,EAiBLoB,gBAAgB,CAACpB,KAjBZ,EAkBLsB,cAAc,CAACtB,KAlBV,EAmBLO,KAAK,CAACsD,KAnBD,CANb;AA0BO,iBACM,CACL1C,qBAAqB,CAACnB,KADjB,EAEL0C,gBAAgB,CAAC1C,KAFZ,EAGL0B,aAAa,CAAC1B,KAHT,EAILoD,YAAY,CAACpD,KAJR,EAKLO,KAAK,CAACuD,KALD;AA3Bb,SAkCWnC,OAlCX,EAmCWf,KAnCX,GAmCgB;AAAAzB,wBAERyE,QAAQ;AAAA;AAAA;AAAA,YAEJ,CAAC9C,KAAK,CAACrB,KAAP,GAAYsE;AAAA;AAAA;AAAA;AAAA;AAAA,iBAMJxD,KAAK,CAACd;AANF,WAMO,IANP,CAAZ,GAMmBsE;AAAA;AAAA,sBAKN,CAACxD,KAAK,CAACd,KALD;AAKM,sBACb;AACRxD,gBAAI,EAAE;AACJ+H,iBAAG,EAAE,EADD;AAEJC,mBAAK,EAAE,IAFH;AAGJC,oBAAM,EAAE,SAHJ;AAIJC,iBAAG,EAAE5D,KAAK,CAACd;AAJP;AADE;AANO,WAcCqB,KAAK,CAACrB,KAdP,CARf,EAFA,EA8BRqB,KAAK,CAACsD,OAANtD,IAAaiD;AAAA;AAAA,YAETjD,KAAK,CAACsD,OAANtD,IAFS,EA9BL,EAkCTiD;AAAA;AAAA,YAGGjD,KAAK,CAAC3B,OAAN2B,IAHH,EAlCS,EAwCRA,KAAK,CAACuD,MAANvD,IAAYiD;AAAA;AAAA,YAERjD,KAAK,CAACuD,MAANvD,IAFQ,EAxCJ;AAAA,OAnChB,GA+EOiD;AAAA;AAAA;AAAA5E,wBAIC8C,WAAW,CAACjC,KAAZiC,KAAsBG,UAAU,CAACpC,KAAXoC,IAAoBZ,QAAQ,CAACxB,KAAnDiC,KAA6D,CAAC,CAAC1B,KAAK,CAACf,KAArEyC,IAA0E8B;AAAA,mBAEjE,CAAC,4BAAD,EAA+BV,UAAU,CAACnC,sBAAXmC,CAAkCrD,KAAjE,CAFiE;AAEM,mBACvE,CAACsD,WAAW,CAACtD,KAAb,EAAoBqD,UAAU,CAAClC,qBAAXkC,CAAiCrD,KAArD,CAHiE;AAGN,qBACxDsE,MAAM;AACd,gBAAItC,YAAY,CAAChC,KAAjB,EAAwB;AACxBwB,oBAAQ,CAACxB,KAATwB,GAAiB,KAAjBA;AACF;AAPwE,WAQnEG,OARmE,GAQ5D,IAR4D,CAJ3E;AAAA,QA/EP;AAiGD,KApGQ,CAATpD;AAsGA,WAAO;AACL4E;AADK,KAAP;AAGF;;AA5N0E,CAA3B,CAA1C","names":["VDefaultsProvider","VImg","useSticky","useTouch","useRtl","makeBorderProps","useBorder","useBackgroundColor","makeComponentProps","provideDefaults","makeDelayProps","useDelay","makeDisplayProps","useDisplay","makeElevationProps","useElevation","makeLayoutItemProps","useLayoutItem","useProxiedModel","makeRoundedProps","useRounded","useRouter","useScopeId","useSsrBoot","makeTagProps","makeThemeProps","provideTheme","useToggleScope","computed","nextTick","readonly","ref","shallowRef","toRef","Transition","watch","genericComponent","propsFactory","toPhysical","useRender","locations","makeVNavigationDrawerProps","color","String","disableResizeWatcher","Boolean","disableRouteWatcher","expandOnHover","floating","modelValue","type","default","permanent","rail","railWidth","Number","scrim","image","temporary","persistent","touchless","width","location","validator","value","includes","sticky","mobile","tag","VNavigationDrawer","name","props","emits","val","setup","_ref","attrs","emit","slots","isRtl","themeClasses","borderClasses","backgroundColorClasses","backgroundColorStyles","elevationClasses","displayClasses","roundedClasses","router","isActive","v","ssrBootStyles","scopeId","rootEl","isHovering","runOpenDelay","runCloseDelay","isPersistent","isTemporary","isSticky","currentRoute","isDragging","dragProgress","el","position","layoutSize","size","layoutItemStyles","layoutItemScrimStyles","id","order","parseInt","elementSize","active","disableTransitions","absolute","isStuck","stickyStyles","scrimColor","scrimStyles","opacity","transition","undefined","VList","bgColor","hasImage","class","style","_createVNode","alt","cover","height","src","prepend","append","onClick"],"sources":["../../../src/components/VNavigationDrawer/VNavigationDrawer.tsx"],"sourcesContent":["// Styles\nimport './VNavigationDrawer.sass'\n\n// Components\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VImg } from '@/components/VImg'\n\n// Composables\nimport { useSticky } from './sticky'\nimport { useTouch } from './touch'\nimport { useRtl } from '@/composables'\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { useBackgroundColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { provideDefaults } from '@/composables/defaults'\nimport { makeDelayProps, useDelay } from '@/composables/delay'\nimport { makeDisplayProps, useDisplay } from '@/composables/display'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeLayoutItemProps, useLayoutItem } from '@/composables/layout'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { useRouter } from '@/composables/router'\nimport { useScopeId } from '@/composables/scopeId'\nimport { useSsrBoot } from '@/composables/ssrBoot'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { useToggleScope } from '@/composables/toggleScope'\n\n// Utilities\nimport { computed, nextTick, readonly, ref, shallowRef, toRef, Transition, watch } from 'vue'\nimport { genericComponent, propsFactory, toPhysical, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\nexport type VNavigationDrawerImageSlot = {\n  image: string | undefined\n}\n\nexport type VNavigationDrawerSlots = {\n  default: never\n  prepend: never\n  append: never\n  image: VNavigationDrawerImageSlot\n}\n\nconst locations = ['start', 'end', 'left', 'right', 'top', 'bottom'] as const\n\nexport const makeVNavigationDrawerProps = propsFactory({\n  color: String,\n  disableResizeWatcher: Boolean,\n  disableRouteWatcher: Boolean,\n  expandOnHover: Boolean,\n  floating: Boolean,\n  modelValue: {\n    type: Boolean as PropType<boolean | null>,\n    default: null,\n  },\n  permanent: Boolean,\n  rail: {\n    type: Boolean as PropType<boolean | null>,\n    default: null,\n  },\n  railWidth: {\n    type: [Number, String],\n    default: 56,\n  },\n  scrim: {\n    type: [Boolean, String],\n    default: true,\n  },\n  image: String,\n  temporary: Boolean,\n  persistent: Boolean,\n  touchless: Boolean,\n  width: {\n    type: [Number, String],\n    default: 256,\n  },\n  location: {\n    type: String as PropType<typeof locations[number]>,\n    default: 'start',\n    validator: (value: any) => locations.includes(value),\n  },\n  sticky: Boolean,\n\n  ...makeBorderProps(),\n  ...makeComponentProps(),\n  ...makeDelayProps(),\n  ...makeDisplayProps({ mobile: null }),\n  ...makeElevationProps(),\n  ...makeLayoutItemProps(),\n  ...makeRoundedProps(),\n  ...makeTagProps({ tag: 'nav' }),\n  ...makeThemeProps(),\n}, 'VNavigationDrawer')\n\nexport const VNavigationDrawer = genericComponent<VNavigationDrawerSlots>()({\n  name: 'VNavigationDrawer',\n\n  props: makeVNavigationDrawerProps(),\n\n  emits: {\n    'update:modelValue': (val: boolean) => true,\n    'update:rail': (val: boolean) => true,\n  },\n\n  setup (props, { attrs, emit, slots }) {\n    const { isRtl } = useRtl()\n    const { themeClasses } = provideTheme(props)\n    const { borderClasses } = useBorder(props)\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'color'))\n    const { elevationClasses } = useElevation(props)\n    const { displayClasses, mobile } = useDisplay(props)\n    const { roundedClasses } = useRounded(props)\n    const router = useRouter()\n    const isActive = useProxiedModel(props, 'modelValue', null, v => !!v)\n    const { ssrBootStyles } = useSsrBoot()\n    const { scopeId } = useScopeId()\n\n    const rootEl = ref<HTMLElement>()\n    const isHovering = shallowRef(false)\n\n    const { runOpenDelay, runCloseDelay } = useDelay(props, value => {\n      isHovering.value = value\n    })\n\n    const width = computed(() => {\n      return (props.rail && props.expandOnHover && isHovering.value)\n        ? Number(props.width)\n        : Number(props.rail ? props.railWidth : props.width)\n    })\n    const location = computed(() => {\n      return toPhysical(props.location, isRtl.value) as 'left' | 'right' | 'bottom'\n    })\n    const isPersistent = computed(() => props.persistent)\n    const isTemporary = computed(() => !props.permanent && (mobile.value || props.temporary))\n    const isSticky = computed(() =>\n      props.sticky &&\n      !isTemporary.value &&\n      location.value !== 'bottom'\n    )\n\n    useToggleScope(() => props.expandOnHover && props.rail != null, () => {\n      watch(isHovering, val => emit('update:rail', !val))\n    })\n\n    useToggleScope(() => !props.disableResizeWatcher, () => {\n      watch(isTemporary, val => !props.permanent && (nextTick(() => isActive.value = !val)))\n    })\n\n    useToggleScope(() => !props.disableRouteWatcher && !!router, () => {\n      watch(router!.currentRoute, () => isTemporary.value && (isActive.value = false))\n    })\n\n    watch(() => props.permanent, val => {\n      if (val) isActive.value = true\n    })\n\n    if (props.modelValue == null && !isTemporary.value) {\n      isActive.value = props.permanent || !mobile.value\n    }\n\n    const { isDragging, dragProgress } = useTouch({\n      el: rootEl,\n      isActive,\n      isTemporary,\n      width,\n      touchless: toRef(props, 'touchless'),\n      position: location,\n    })\n\n    const layoutSize = computed(() => {\n      const size = isTemporary.value ? 0\n        : props.rail && props.expandOnHover ? Number(props.railWidth)\n        : width.value\n\n      return isDragging.value ? size * dragProgress.value : size\n    })\n    const { layoutItemStyles, layoutItemScrimStyles } = useLayoutItem({\n      id: props.name,\n      order: computed(() => parseInt(props.order, 10)),\n      position: location,\n      layoutSize,\n      elementSize: width,\n      active: readonly(isActive),\n      disableTransitions: computed(() => isDragging.value),\n      absolute: computed(() =>\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        props.absolute || (isSticky.value && typeof isStuck.value !== 'string')\n      ),\n    })\n\n    const { isStuck, stickyStyles } = useSticky({ rootEl, isSticky, layoutItemStyles })\n\n    const scrimColor = useBackgroundColor(computed(() => {\n      return typeof props.scrim === 'string' ? props.scrim : null\n    }))\n    const scrimStyles = computed(() => ({\n      ...isDragging.value ? {\n        opacity: dragProgress.value * 0.2,\n        transition: 'none',\n      } : undefined,\n      ...layoutItemScrimStyles.value,\n    }))\n\n    provideDefaults({\n      VList: {\n        bgColor: 'transparent',\n      },\n    })\n\n    useRender(() => {\n      const hasImage = (slots.image || props.image)\n\n      return (\n        <>\n          <props.tag\n            ref={ rootEl }\n            onMouseenter={ runOpenDelay }\n            onMouseleave={ runCloseDelay }\n            class={[\n              'v-navigation-drawer',\n              `v-navigation-drawer--${location.value}`,\n              {\n                'v-navigation-drawer--expand-on-hover': props.expandOnHover,\n                'v-navigation-drawer--floating': props.floating,\n                'v-navigation-drawer--is-hovering': isHovering.value,\n                'v-navigation-drawer--rail': props.rail,\n                'v-navigation-drawer--temporary': isTemporary.value,\n                'v-navigation-drawer--persistent': isPersistent.value,\n                'v-navigation-drawer--active': isActive.value,\n                'v-navigation-drawer--sticky': isSticky.value,\n              },\n              themeClasses.value,\n              backgroundColorClasses.value,\n              borderClasses.value,\n              displayClasses.value,\n              elevationClasses.value,\n              roundedClasses.value,\n              props.class,\n            ]}\n            style={[\n              backgroundColorStyles.value,\n              layoutItemStyles.value,\n              ssrBootStyles.value,\n              stickyStyles.value,\n              props.style,\n            ]}\n            { ...scopeId }\n            { ...attrs }\n          >\n            { hasImage && (\n              <div key=\"image\" class=\"v-navigation-drawer__img\">\n                { !slots.image ? (\n                  <VImg\n                    key=\"image-img\"\n                    alt=\"\"\n                    cover\n                    height=\"inherit\"\n                    src={ props.image }\n                  />\n                ) : (\n                  <VDefaultsProvider\n                    key=\"image-defaults\"\n                    disabled={ !props.image }\n                    defaults={{\n                      VImg: {\n                        alt: '',\n                        cover: true,\n                        height: 'inherit',\n                        src: props.image,\n                      },\n                    }}\n                    v-slots:default={ slots.image }\n                  />\n                )}\n              </div>\n            )}\n\n            { slots.prepend && (\n              <div class=\"v-navigation-drawer__prepend\">\n                { slots.prepend?.() }\n              </div>\n            )}\n\n            <div class=\"v-navigation-drawer__content\">\n              { slots.default?.() }\n            </div>\n\n            { slots.append && (\n              <div class=\"v-navigation-drawer__append\">\n                { slots.append?.() }\n              </div>\n            )}\n          </props.tag>\n\n          <Transition name=\"fade-transition\">\n            { isTemporary.value && (isDragging.value || isActive.value) && !!props.scrim && (\n              <div\n                class={['v-navigation-drawer__scrim', scrimColor.backgroundColorClasses.value]}\n                style={[scrimStyles.value, scrimColor.backgroundColorStyles.value]}\n                onClick={ () => {\n                  if (isPersistent.value) return\n                  isActive.value = false\n                }}\n                { ...scopeId }\n              />\n            )}\n          </Transition>\n        </>\n      )\n    })\n\n    return {\n      isStuck,\n    }\n  },\n})\n\nexport type VNavigationDrawer = InstanceType<typeof VNavigationDrawer>\n"]},"metadata":{},"sourceType":"module"}
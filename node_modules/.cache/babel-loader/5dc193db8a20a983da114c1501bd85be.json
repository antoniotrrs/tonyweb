{"ast":null,"code":"import { createVNode as _createVNode, resolveDirective as _resolveDirective, withDirectives as _withDirectives } from \"vue\"; // Styles\n\nimport \"./VWindow.css\"; // Components\n\nimport { VBtn } from \"../VBtn/index.js\"; // Composables\n\nimport { makeComponentProps } from \"../../composables/component.js\";\nimport { useGroup } from \"../../composables/group.js\";\nimport { useLocale, useRtl } from \"../../composables/locale.js\";\nimport { makeTagProps } from \"../../composables/tag.js\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.js\"; // Directives\n\nimport { Touch } from \"../../directives/touch/index.js\"; // Utilities\n\nimport { computed, provide, ref, shallowRef, watch } from 'vue';\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.js\"; // Types\n\nexport const VWindowSymbol = Symbol.for('vuetify:v-window');\nexport const VWindowGroupSymbol = Symbol.for('vuetify:v-window-group');\nexport const makeVWindowProps = propsFactory({\n  continuous: Boolean,\n  nextIcon: {\n    type: [Boolean, String, Function, Object],\n    default: '$next'\n  },\n  prevIcon: {\n    type: [Boolean, String, Function, Object],\n    default: '$prev'\n  },\n  reverse: Boolean,\n  showArrows: {\n    type: [Boolean, String],\n    validator: v => typeof v === 'boolean' || v === 'hover'\n  },\n  touch: {\n    type: [Object, Boolean],\n    default: undefined\n  },\n  direction: {\n    type: String,\n    default: 'horizontal'\n  },\n  modelValue: null,\n  disabled: Boolean,\n  selectedClass: {\n    type: String,\n    default: 'v-window-item--active'\n  },\n  // TODO: mandatory should probably not be exposed but do this for now\n  mandatory: {\n    type: [Boolean, String],\n    default: 'force'\n  },\n  ...makeComponentProps(),\n  ...makeTagProps(),\n  ...makeThemeProps()\n}, 'VWindow');\nexport const VWindow = genericComponent()({\n  name: 'VWindow',\n  directives: {\n    Touch\n  },\n  props: makeVWindowProps(),\n  emits: {\n    'update:modelValue': value => true\n  },\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      isRtl\n    } = useRtl();\n    const {\n      t\n    } = useLocale();\n    const group = useGroup(props, VWindowGroupSymbol);\n    const rootRef = ref();\n    const isRtlReverse = computed(() => isRtl.value ? !props.reverse : props.reverse);\n    const isReversed = shallowRef(false);\n    const transition = computed(() => {\n      const axis = props.direction === 'vertical' ? 'y' : 'x';\n      const reverse = isRtlReverse.value ? !isReversed.value : isReversed.value;\n      const direction = reverse ? '-reverse' : '';\n      return `v-window-${axis}${direction}-transition`;\n    });\n    const transitionCount = shallowRef(0);\n    const transitionHeight = ref(undefined);\n    const activeIndex = computed(() => {\n      return group.items.value.findIndex(item => group.selected.value.includes(item.id));\n    });\n    watch(activeIndex, (newVal, oldVal) => {\n      const itemsLength = group.items.value.length;\n      const lastIndex = itemsLength - 1;\n\n      if (itemsLength <= 2) {\n        isReversed.value = newVal < oldVal;\n      } else if (newVal === lastIndex && oldVal === 0) {\n        isReversed.value = true;\n      } else if (newVal === 0 && oldVal === lastIndex) {\n        isReversed.value = false;\n      } else {\n        isReversed.value = newVal < oldVal;\n      }\n    });\n    provide(VWindowSymbol, {\n      transition,\n      isReversed,\n      transitionCount,\n      transitionHeight,\n      rootRef\n    });\n    const canMoveBack = computed(() => props.continuous || activeIndex.value !== 0);\n    const canMoveForward = computed(() => props.continuous || activeIndex.value !== group.items.value.length - 1);\n\n    function prev() {\n      canMoveBack.value && group.prev();\n    }\n\n    function next() {\n      canMoveForward.value && group.next();\n    }\n\n    const arrows = computed(() => {\n      const arrows = [];\n      const prevProps = {\n        icon: isRtl.value ? props.nextIcon : props.prevIcon,\n        class: `v-window__${isRtlReverse.value ? 'right' : 'left'}`,\n        onClick: group.prev,\n        'aria-label': t('$vuetify.carousel.prev')\n      };\n      arrows.push(canMoveBack.value ? slots.prev ? slots.prev({\n        props: prevProps\n      }) : _createVNode(VBtn, prevProps, null) : _createVNode(\"div\", null, null));\n      const nextProps = {\n        icon: isRtl.value ? props.prevIcon : props.nextIcon,\n        class: `v-window__${isRtlReverse.value ? 'left' : 'right'}`,\n        onClick: group.next,\n        'aria-label': t('$vuetify.carousel.next')\n      };\n      arrows.push(canMoveForward.value ? slots.next ? slots.next({\n        props: nextProps\n      }) : _createVNode(VBtn, nextProps, null) : _createVNode(\"div\", null, null));\n      return arrows;\n    });\n    const touchOptions = computed(() => {\n      if (props.touch === false) return props.touch;\n      const options = {\n        left: () => {\n          isRtlReverse.value ? prev() : next();\n        },\n        right: () => {\n          isRtlReverse.value ? next() : prev();\n        },\n        start: _ref2 => {\n          let {\n            originalEvent\n          } = _ref2;\n          originalEvent.stopPropagation();\n        }\n      };\n      return { ...options,\n        ...(props.touch === true ? {} : props.touch)\n      };\n    });\n    useRender(() => _withDirectives(_createVNode(props.tag, {\n      \"ref\": rootRef,\n      \"class\": ['v-window', {\n        'v-window--show-arrows-on-hover': props.showArrows === 'hover'\n      }, themeClasses.value, props.class],\n      \"style\": props.style\n    }, {\n      default: () => [_createVNode(\"div\", {\n        \"class\": \"v-window__container\",\n        \"style\": {\n          height: transitionHeight.value\n        }\n      }, [slots.default?.({\n        group\n      }), props.showArrows !== false && _createVNode(\"div\", {\n        \"class\": \"v-window__controls\"\n      }, [arrows.value])]), slots.additional?.({\n        group\n      })]\n    }), [[_resolveDirective(\"touch\"), touchOptions.value]]));\n    return {\n      group\n    };\n  }\n\n});","map":{"version":3,"mappings":"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","names":["VBtn","makeComponentProps","useGroup","useLocale","useRtl","makeTagProps","makeThemeProps","provideTheme","Touch","computed","provide","ref","shallowRef","watch","genericComponent","propsFactory","useRender","VWindowSymbol","Symbol","for","VWindowGroupSymbol","makeVWindowProps","continuous","Boolean","nextIcon","type","String","Function","Object","default","prevIcon","reverse","showArrows","validator","v","touch","undefined","direction","modelValue","disabled","selectedClass","mandatory","VWindow","name","directives","props","emits","value","setup","_ref","slots","themeClasses","isRtl","t","group","rootRef","isRtlReverse","isReversed","transition","axis","transitionCount","transitionHeight","activeIndex","items","findIndex","item","selected","includes","id","newVal","oldVal","itemsLength","length","lastIndex","canMoveBack","canMoveForward","prev","next","arrows","prevProps","icon","class","onClick","push","_createVNode","nextProps","touchOptions","options","left","right","start","_ref2","originalEvent","stopPropagation","style","height","additional"],"sources":["../../../src/components/VWindow/VWindow.tsx"],"sourcesContent":["// Styles\nimport './VWindow.sass'\n\n// Components\nimport { VBtn } from '@/components/VBtn'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { useGroup } from '@/composables/group'\nimport { useLocale, useRtl } from '@/composables/locale'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\n\n// Directives\nimport { Touch } from '@/directives/touch'\n\n// Utilities\nimport { computed, provide, ref, shallowRef, watch } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { ComputedRef, InjectionKey, PropType, Ref } from 'vue'\nimport type { GroupItemProvide, GroupProvide } from '@/composables/group'\nimport type { IconValue } from '@/composables/icons'\nimport type { TouchHandlers } from '@/directives/touch'\nimport type { GenericProps } from '@/util'\n\nexport type VWindowSlots = {\n  default: { group: GroupProvide }\n  additional: { group: GroupProvide }\n  prev: { props: ControlProps }\n  next: { props: ControlProps }\n}\n\ntype WindowProvide = {\n  transition: ComputedRef<undefined | string>\n  transitionCount: Ref<number>\n  transitionHeight: Ref<undefined | string>\n  isReversed: Ref<boolean>\n  rootRef: Ref<HTMLElement | undefined>\n}\n\ntype ControlProps = {\n  icon: IconValue\n  class: string\n  onClick: () => void\n  'aria-label': string\n}\n\nexport const VWindowSymbol: InjectionKey<WindowProvide> = Symbol.for('vuetify:v-window')\nexport const VWindowGroupSymbol: InjectionKey<GroupItemProvide> = Symbol.for('vuetify:v-window-group')\n\nexport const makeVWindowProps = propsFactory({\n  continuous: Boolean,\n  nextIcon: {\n    type: [Boolean, String, Function, Object] as PropType<IconValue>,\n    default: '$next',\n  },\n  prevIcon: {\n    type: [Boolean, String, Function, Object] as PropType<IconValue>,\n    default: '$prev',\n  },\n  reverse: Boolean,\n  showArrows: {\n    type: [Boolean, String],\n    validator: (v: any) => typeof v === 'boolean' || v === 'hover',\n  },\n  touch: {\n    type: [Object, Boolean] as PropType<boolean | TouchHandlers>,\n    default: undefined,\n  },\n  direction: {\n    type: String as PropType<'horizontal' | 'vertical'>,\n    default: 'horizontal',\n  },\n\n  modelValue: null,\n  disabled: Boolean,\n  selectedClass: {\n    type: String,\n    default: 'v-window-item--active',\n  },\n  // TODO: mandatory should probably not be exposed but do this for now\n  mandatory: {\n    type: [Boolean, String] as PropType<boolean | 'force'>,\n    default: 'force' as const,\n  },\n\n  ...makeComponentProps(),\n  ...makeTagProps(),\n  ...makeThemeProps(),\n}, 'VWindow')\n\nexport const VWindow = genericComponent<new <T>(\n  props: {\n    modelValue?: T\n    'onUpdate:modelValue'?: (value: T) => void\n  },\n  slots: VWindowSlots,\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VWindow',\n\n  directives: {\n    Touch,\n  },\n\n  props: makeVWindowProps(),\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { isRtl } = useRtl()\n    const { t } = useLocale()\n\n    const group = useGroup(props, VWindowGroupSymbol)\n\n    const rootRef = ref()\n    const isRtlReverse = computed(() => isRtl.value ? !props.reverse : props.reverse)\n    const isReversed = shallowRef(false)\n    const transition = computed(() => {\n      const axis = props.direction === 'vertical' ? 'y' : 'x'\n      const reverse = isRtlReverse.value ? !isReversed.value : isReversed.value\n      const direction = reverse ? '-reverse' : ''\n\n      return `v-window-${axis}${direction}-transition`\n    })\n    const transitionCount = shallowRef(0)\n    const transitionHeight = ref<undefined | string>(undefined)\n\n    const activeIndex = computed(() => {\n      return group.items.value.findIndex(item => group.selected.value.includes(item.id))\n    })\n\n    watch(activeIndex, (newVal, oldVal) => {\n      const itemsLength = group.items.value.length\n      const lastIndex = itemsLength - 1\n\n      if (itemsLength <= 2) {\n        isReversed.value = newVal < oldVal\n      } else if (newVal === lastIndex && oldVal === 0) {\n        isReversed.value = true\n      } else if (newVal === 0 && oldVal === lastIndex) {\n        isReversed.value = false\n      } else {\n        isReversed.value = newVal < oldVal\n      }\n    })\n\n    provide(VWindowSymbol, {\n      transition,\n      isReversed,\n      transitionCount,\n      transitionHeight,\n      rootRef,\n    })\n\n    const canMoveBack = computed(() => props.continuous || activeIndex.value !== 0)\n    const canMoveForward = computed(() => props.continuous || activeIndex.value !== group.items.value.length - 1)\n\n    function prev () {\n      canMoveBack.value && group.prev()\n    }\n\n    function next () {\n      canMoveForward.value && group.next()\n    }\n\n    const arrows = computed(() => {\n      const arrows = []\n\n      const prevProps = {\n        icon: isRtl.value ? props.nextIcon : props.prevIcon,\n        class: `v-window__${isRtlReverse.value ? 'right' : 'left'}`,\n        onClick: group.prev,\n        'aria-label': t('$vuetify.carousel.prev'),\n      }\n\n      arrows.push(canMoveBack.value\n        ? slots.prev\n          ? slots.prev({ props: prevProps })\n          : <VBtn { ...prevProps } />\n        : <div />\n      )\n\n      const nextProps = {\n        icon: isRtl.value ? props.prevIcon : props.nextIcon,\n        class: `v-window__${isRtlReverse.value ? 'left' : 'right'}`,\n        onClick: group.next,\n        'aria-label': t('$vuetify.carousel.next'),\n      }\n\n      arrows.push(canMoveForward.value\n        ? slots.next\n          ? slots.next({ props: nextProps })\n          : <VBtn { ...nextProps } />\n        : <div />\n      )\n\n      return arrows\n    })\n\n    const touchOptions = computed(() => {\n      if (props.touch === false) return props.touch\n\n      const options: TouchHandlers = {\n        left: () => {\n          isRtlReverse.value ? prev() : next()\n        },\n        right: () => {\n          isRtlReverse.value ? next() : prev()\n        },\n        start: ({ originalEvent }) => {\n          originalEvent.stopPropagation()\n        },\n      }\n\n      return {\n        ...options,\n        ...(props.touch === true ? {} : props.touch),\n      }\n    })\n\n    useRender(() => (\n      <props.tag\n        ref={ rootRef }\n        class={[\n          'v-window',\n          {\n            'v-window--show-arrows-on-hover': props.showArrows === 'hover',\n          },\n          themeClasses.value,\n          props.class,\n        ]}\n        style={ props.style }\n        v-touch={ touchOptions.value }\n      >\n        <div\n          class=\"v-window__container\"\n          style={{\n            height: transitionHeight.value,\n          }}\n        >\n          { slots.default?.({ group }) }\n\n          { props.showArrows !== false && (\n            <div class=\"v-window__controls\">\n              { arrows.value }\n            </div>\n          )}\n        </div>\n\n        { slots.additional?.({ group }) }\n      </props.tag>\n    ))\n\n    return {\n      group,\n    }\n  },\n})\n\nexport type VWindow = InstanceType<typeof VWindow>\n"]},"metadata":{},"sourceType":"module"}
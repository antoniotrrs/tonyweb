{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\"; // Styles\n\nimport \"./VColorPickerPreview.css\"; // Components\n\nimport { VBtn } from \"../VBtn/index.js\";\nimport { VSlider } from \"../VSlider/index.js\"; // Composables\n\nimport { makeComponentProps } from \"../../composables/component.js\"; // Utilities\n\nimport { onUnmounted } from 'vue';\nimport { nullColor } from \"./util/index.js\";\nimport { defineComponent, HSVtoCSS, parseColor, propsFactory, RGBtoHSV, SUPPORTS_EYE_DROPPER, useRender } from \"../../util/index.js\"; // Types\n\nexport const makeVColorPickerPreviewProps = propsFactory({\n  color: {\n    type: Object\n  },\n  disabled: Boolean,\n  hideAlpha: Boolean,\n  ...makeComponentProps()\n}, 'VColorPickerPreview');\nexport const VColorPickerPreview = defineComponent({\n  name: 'VColorPickerPreview',\n  props: makeVColorPickerPreviewProps(),\n  emits: {\n    'update:color': color => true\n  },\n\n  setup(props, _ref) {\n    let {\n      emit\n    } = _ref;\n    const abortController = new AbortController();\n    onUnmounted(() => abortController.abort());\n\n    async function openEyeDropper() {\n      if (!SUPPORTS_EYE_DROPPER || props.disabled) return;\n      const eyeDropper = new window.EyeDropper();\n\n      try {\n        const result = await eyeDropper.open({\n          signal: abortController.signal\n        });\n        const colorHexValue = RGBtoHSV(parseColor(result.sRGBHex));\n        emit('update:color', { ...(props.color ?? nullColor),\n          ...colorHexValue\n        });\n      } catch (e) {}\n    }\n\n    useRender(() => _createVNode(\"div\", {\n      \"class\": ['v-color-picker-preview', {\n        'v-color-picker-preview--hide-alpha': props.hideAlpha\n      }, props.class],\n      \"style\": props.style\n    }, [SUPPORTS_EYE_DROPPER && _createVNode(\"div\", {\n      \"class\": \"v-color-picker-preview__eye-dropper\",\n      \"key\": \"eyeDropper\"\n    }, [_createVNode(VBtn, {\n      \"density\": \"comfortable\",\n      \"disabled\": props.disabled,\n      \"icon\": \"$eyeDropper\",\n      \"variant\": \"plain\",\n      \"onClick\": openEyeDropper\n    }, null)]), _createVNode(\"div\", {\n      \"class\": \"v-color-picker-preview__dot\"\n    }, [_createVNode(\"div\", {\n      \"style\": {\n        background: HSVtoCSS(props.color ?? nullColor)\n      }\n    }, null)]), _createVNode(\"div\", {\n      \"class\": \"v-color-picker-preview__sliders\"\n    }, [_createVNode(VSlider, {\n      \"class\": \"v-color-picker-preview__track v-color-picker-preview__hue\",\n      \"modelValue\": props.color?.h,\n      \"onUpdate:modelValue\": h => emit('update:color', { ...(props.color ?? nullColor),\n        h\n      }),\n      \"step\": 0,\n      \"min\": 0,\n      \"max\": 360,\n      \"disabled\": props.disabled,\n      \"thumbSize\": 14,\n      \"trackSize\": 8,\n      \"trackFillColor\": \"white\",\n      \"hideDetails\": true\n    }, null), !props.hideAlpha && _createVNode(VSlider, {\n      \"class\": \"v-color-picker-preview__track v-color-picker-preview__alpha\",\n      \"modelValue\": props.color?.a ?? 1,\n      \"onUpdate:modelValue\": a => emit('update:color', { ...(props.color ?? nullColor),\n        a\n      }),\n      \"step\": 1 / 256,\n      \"min\": 0,\n      \"max\": 1,\n      \"disabled\": props.disabled,\n      \"thumbSize\": 14,\n      \"trackSize\": 8,\n      \"trackFillColor\": \"white\",\n      \"hideDetails\": true\n    }, null)])]));\n    return {};\n  }\n\n});","map":{"version":3,"mappings":"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","names":["VBtn","VSlider","makeComponentProps","onUnmounted","nullColor","defineComponent","HSVtoCSS","parseColor","propsFactory","RGBtoHSV","SUPPORTS_EYE_DROPPER","useRender","makeVColorPickerPreviewProps","color","type","Object","disabled","Boolean","hideAlpha","VColorPickerPreview","name","props","emits","setup","_ref","emit","abortController","AbortController","abort","openEyeDropper","eyeDropper","window","EyeDropper","result","open","signal","colorHexValue","sRGBHex","e","class","style","_createVNode","background","h","a"],"sources":["../../../src/components/VColorPicker/VColorPickerPreview.tsx"],"sourcesContent":["// Styles\nimport './VColorPickerPreview.sass'\n\n// Components\nimport { VBtn } from '@/components/VBtn'\nimport { VSlider } from '@/components/VSlider'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\n\n// Utilities\nimport { onUnmounted } from 'vue'\nimport { nullColor } from './util'\nimport {\n  defineComponent,\n  HSVtoCSS,\n  parseColor,\n  propsFactory,\n  RGBtoHSV,\n  SUPPORTS_EYE_DROPPER,\n  useRender,\n} from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { HSV } from '@/util'\n\nexport const makeVColorPickerPreviewProps = propsFactory({\n  color: {\n    type: Object as PropType<HSV | null>,\n  },\n  disabled: Boolean,\n  hideAlpha: Boolean,\n\n  ...makeComponentProps(),\n}, 'VColorPickerPreview')\n\nexport const VColorPickerPreview = defineComponent({\n  name: 'VColorPickerPreview',\n\n  props: makeVColorPickerPreviewProps(),\n\n  emits: {\n    'update:color': (color: HSV) => true,\n  },\n\n  setup (props, { emit }) {\n    const abortController = new AbortController()\n\n    onUnmounted(() => abortController.abort())\n\n    async function openEyeDropper () {\n      if (!SUPPORTS_EYE_DROPPER || props.disabled) return\n\n      const eyeDropper = new window.EyeDropper()\n      try {\n        const result = await eyeDropper.open({ signal: abortController.signal })\n        const colorHexValue = RGBtoHSV(parseColor(result.sRGBHex))\n        emit('update:color', { ...(props.color ?? nullColor), ...colorHexValue })\n      } catch (e) {}\n    }\n\n    useRender(() => (\n      <div\n        class={[\n          'v-color-picker-preview',\n          {\n            'v-color-picker-preview--hide-alpha': props.hideAlpha,\n          },\n          props.class,\n        ]}\n        style={ props.style }\n      >\n        { SUPPORTS_EYE_DROPPER && (\n          <div class=\"v-color-picker-preview__eye-dropper\" key=\"eyeDropper\">\n            <VBtn density=\"comfortable\" disabled={ props.disabled } icon=\"$eyeDropper\" variant=\"plain\" onClick={ openEyeDropper } />\n          </div>\n        )}\n\n        <div class=\"v-color-picker-preview__dot\">\n          <div style={{ background: HSVtoCSS(props.color ?? nullColor) }} />\n        </div>\n\n        <div class=\"v-color-picker-preview__sliders\">\n          <VSlider\n            class=\"v-color-picker-preview__track v-color-picker-preview__hue\"\n            modelValue={ props.color?.h }\n            onUpdate:modelValue={ h => emit('update:color', { ...(props.color ?? nullColor), h }) }\n            step={ 0 }\n            min={ 0 }\n            max={ 360 }\n            disabled={ props.disabled }\n            thumbSize={ 14 }\n            trackSize={ 8 }\n            trackFillColor=\"white\"\n            hideDetails\n          />\n\n          { !props.hideAlpha && (\n            <VSlider\n              class=\"v-color-picker-preview__track v-color-picker-preview__alpha\"\n              modelValue={ props.color?.a ?? 1 }\n              onUpdate:modelValue={ a => emit('update:color', { ...(props.color ?? nullColor), a }) }\n              step={ 1 / 256 }\n              min={ 0 }\n              max={ 1 }\n              disabled={ props.disabled }\n              thumbSize={ 14 }\n              trackSize={ 8 }\n              trackFillColor=\"white\"\n              hideDetails\n            />\n          )}\n        </div>\n      </div>\n    ))\n\n    return {}\n  },\n})\n\nexport type VColorPickerPreview = InstanceType<typeof VColorPickerPreview>\n"]},"metadata":{},"sourceType":"module"}
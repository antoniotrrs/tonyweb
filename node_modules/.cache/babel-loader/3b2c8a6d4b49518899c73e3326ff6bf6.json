{"ast":null,"code":"import _objectSpread from \"/Users/antoniotorres/Documents/tony/tonyweb/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { createVNode as _createVNode } from \"vue\"; // Styles\n\nimport \"./VLayout.css\"; // Composables\n\nimport { makeComponentProps } from \"../../composables/component.js\";\nimport { makeDimensionProps, useDimension } from \"../../composables/dimensions.js\";\nimport { createLayout, makeLayoutProps } from \"../../composables/layout.js\"; // Utilities\n\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.js\";\nexport var makeVLayoutProps = propsFactory(_objectSpread(_objectSpread(_objectSpread({}, makeComponentProps()), makeDimensionProps()), makeLayoutProps()), 'VLayout');\nexport var VLayout = genericComponent()({\n  name: 'VLayout',\n  props: makeVLayoutProps(),\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n\n    var _createLayout = createLayout(props),\n        layoutClasses = _createLayout.layoutClasses,\n        layoutStyles = _createLayout.layoutStyles,\n        getLayoutItem = _createLayout.getLayoutItem,\n        items = _createLayout.items,\n        layoutRef = _createLayout.layoutRef;\n\n    var _useDimension = useDimension(props),\n        dimensionStyles = _useDimension.dimensionStyles;\n\n    useRender(function () {\n      var _slots$default;\n\n      return _createVNode(\"div\", {\n        \"ref\": layoutRef,\n        \"class\": [layoutClasses.value, props.class],\n        \"style\": [dimensionStyles.value, layoutStyles.value, props.style]\n      }, [(_slots$default = slots.default) === null || _slots$default === void 0 ? void 0 : _slots$default.call(slots)]);\n    });\n    return {\n      getLayoutItem: getLayoutItem,\n      items: items\n    };\n  }\n});","map":{"version":3,"mappings":";mDAAA;;AACA,uB,CAEA;;AAAA,SACSA,kBADT,QAC2B,gCAD3B;AAC2B,SAClBC,kBADkB,EACEC,YADF,QACc,iCADd;AACc,SAChCC,YADgC,EAClBC,eADkB,QACH,6BADG,C,CAGzC;;AAAA,SACSC,gBADT,EAC2BC,YAD3B,EACyCC,SADzC,QACkD,qBADlD;AAGA,OAAO,IAAMC,gBAAgB,GAAGF,YAAY,+CACvCN,kBAAkB,EADqB,GAEvCC,kBAAkB,EAFqB,GAGvCG,eAAe,EAHwB,GAIzC,SAJyC,CAArC;AAMP,OAAO,IAAMK,OAAO,GAAGJ,gBAAgB,GAAG;AACxCK,MAAI,EAAE,SADkC;AAGxCC,OAAK,EAAEH,gBAAgB,EAHiB;AAKxCI,OALwC,iBAKjCD,KALiC,EAK5BE,IAL4B,EAKf;AAAA,QAATC,KAAS,GAAFD,IAAE,CAATC,KAAS;;AACvB,wBAAyEX,YAAY,CAACQ,KAAD,CAArF;AAAA,QAAQI,aAAR,iBAAQA,aAAR;AAAA,QAAuBC,YAAvB,iBAAuBA,YAAvB;AAAA,QAAqCC,aAArC,iBAAqCA,aAArC;AAAA,QAAoDC,KAApD,iBAAoDA,KAApD;AAAA,QAA2DC,SAA3D,iBAA2DA,SAA3D;;AACA,wBAA4BjB,YAAY,CAACS,KAAD,CAAxC;AAAA,QAAQS,eAAR,iBAAQA,eAAR;;AAEAb,aAAS,CAAC;AAAA;;AAAA;AAAA,eAEAY,SAFA;AAES,iBACR,CACLJ,aAAa,CAACM,KADT,EAELV,KAAK,CAACW,KAFD,CAHD;AAML,iBACM,CACLF,eAAe,CAACC,KADX,EAELL,YAAY,CAACK,KAFR,EAGLV,KAAK,CAACY,KAHD;AAPD,SAWL,mBAECT,KAAK,CAACU,OAFP,mDAECV,yBAAK,CAFN,CAXK;AAAA,KAAD,CAATP;AAiBA,WAAO;AACLU,mBAAa,EAAbA,aADK;AAELC;AAFK,KAAP;AAIF;AA9BwC,CAAH,CAAhC","names":["makeComponentProps","makeDimensionProps","useDimension","createLayout","makeLayoutProps","genericComponent","propsFactory","useRender","makeVLayoutProps","VLayout","name","props","setup","_ref","slots","layoutClasses","layoutStyles","getLayoutItem","items","layoutRef","dimensionStyles","value","class","style","default"],"sources":["../../../src/components/VLayout/VLayout.tsx"],"sourcesContent":["// Styles\nimport './VLayout.sass'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { createLayout, makeLayoutProps } from '@/composables/layout'\n\n// Utilities\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVLayoutProps = propsFactory({\n  ...makeComponentProps(),\n  ...makeDimensionProps(),\n  ...makeLayoutProps(),\n}, 'VLayout')\n\nexport const VLayout = genericComponent()({\n  name: 'VLayout',\n\n  props: makeVLayoutProps(),\n\n  setup (props, { slots }) {\n    const { layoutClasses, layoutStyles, getLayoutItem, items, layoutRef } = createLayout(props)\n    const { dimensionStyles } = useDimension(props)\n\n    useRender(() => (\n      <div\n        ref={ layoutRef }\n        class={[\n          layoutClasses.value,\n          props.class,\n        ]}\n        style={[\n          dimensionStyles.value,\n          layoutStyles.value,\n          props.style,\n        ]}\n      >\n        { slots.default?.() }\n      </div>\n    ))\n\n    return {\n      getLayoutItem,\n      items,\n    }\n  },\n})\n\nexport type VLayout = InstanceType<typeof VLayout>\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\"; // Components\n\nimport { VBtn } from \"../VBtn/VBtn.js\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/VDefaultsProvider.js\"; // Composables\n\nimport { useLocale } from \"../../composables/locale.js\"; // Utilities\n\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.js\"; // Types\n\nexport const makeVStepperActionsProps = propsFactory({\n  color: String,\n  disabled: {\n    type: [Boolean, String],\n    default: false\n  },\n  prevText: {\n    type: String,\n    default: '$vuetify.stepper.prev'\n  },\n  nextText: {\n    type: String,\n    default: '$vuetify.stepper.next'\n  }\n}, 'VStepperActions');\nexport const VStepperActions = genericComponent()({\n  name: 'VStepperActions',\n  props: makeVStepperActionsProps(),\n  emits: {\n    'click:prev': () => true,\n    'click:next': () => true\n  },\n\n  setup(props, _ref) {\n    let {\n      emit,\n      slots\n    } = _ref;\n    const {\n      t\n    } = useLocale();\n\n    function onClickPrev() {\n      emit('click:prev');\n    }\n\n    function onClickNext() {\n      emit('click:next');\n    }\n\n    useRender(() => {\n      const prevSlotProps = {\n        onClick: onClickPrev\n      };\n      const nextSlotProps = {\n        onClick: onClickNext\n      };\n      return _createVNode(\"div\", {\n        \"class\": \"v-stepper-actions\"\n      }, [_createVNode(VDefaultsProvider, {\n        \"defaults\": {\n          VBtn: {\n            disabled: ['prev', true].includes(props.disabled),\n            text: t(props.prevText),\n            variant: 'text'\n          }\n        }\n      }, {\n        default: () => [slots.prev?.({\n          props: prevSlotProps\n        }) ?? _createVNode(VBtn, prevSlotProps, null)]\n      }), _createVNode(VDefaultsProvider, {\n        \"defaults\": {\n          VBtn: {\n            color: props.color,\n            disabled: ['next', true].includes(props.disabled),\n            text: t(props.nextText),\n            variant: 'tonal'\n          }\n        }\n      }, {\n        default: () => [slots.next?.({\n          props: nextSlotProps\n        }) ?? _createVNode(VBtn, nextSlotProps, null)]\n      })]);\n    });\n    return {};\n  }\n\n});","map":{"version":3,"mappings":"mDAAA;;AAAA,SACSA,IADT,QACa,iBADb;AACa,SACJC,iBADI,QACa,2CADb,C,CAGb;;AAAA,SACSC,SADT,QACkB,6BADlB,C,CAGA;;AAAA,SACSC,gBADT,EAC2BC,YAD3B,EACyCC,SADzC,QACkD,qBADlD,C,CAGA;;AAYA,OAAO,MAAMC,wBAAwB,GAAGF,YAAY,CAAC;AACnDG,OAAK,EAAEC,MAD4C;AAEnDC,UAAQ,EAAE;AACRC,QAAI,EAAE,CAACC,OAAD,EAAUH,MAAV,CADE;AAERI,WAAO,EAAE;AAFD,GAFyC;AAMnDC,UAAQ,EAAE;AACRH,QAAI,EAAEF,MADE;AAERI,WAAO,EAAE;AAFD,GANyC;AAUnDE,UAAQ,EAAE;AACRJ,QAAI,EAAEF,MADE;AAERI,WAAO,EAAE;AAFD;AAVyC,CAAD,EAcjD,iBAdiD,CAA7C;AAgBP,OAAO,MAAMG,eAAe,GAAGZ,gBAAgB,GAAyB;AACtEa,MAAI,EAAE,iBADgE;AAGtEC,OAAK,EAAEX,wBAAwB,EAHuC;AAKtEY,OAAK,EAAE;AACL,kBAAcC,MAAM,IADf;AAEL,kBAAcC,MAAM;AAFf,GAL+D;;AAUtEC,OAAKA,CAAEJ,KAAFI,EAAOC,IAAPD,EAA0B;AAAA,QAAjB;AAAEE,UAAF;AAAQC;AAAR,QAAeF,IAAE;AAC7B,UAAM;AAAEG;AAAF,QAAQvB,SAAS,EAAvB;;AACA,aAASwB,WAAT,GAAwB;AACtBH,UAAI,CAAC,YAAD,CAAJA;AACF;;AAEA,aAASI,WAAT,GAAwB;AACtBJ,UAAI,CAAC,YAAD,CAAJA;AACF;;AAEAlB,aAAS,CAAC,MAAM;AACd,YAAMuB,aAAa,GAAG;AACpBC,eAAO,EAAEH;AADW,OAAtB;AAGA,YAAMI,aAAa,GAAG;AACpBD,eAAO,EAAEF;AADW,OAAtB;AAIA;AAAA;AAAA;AAAA,oBAGgB;AACR3B,cAAI,EAAE;AACJS,oBAAQ,EAAE,CAAC,MAAD,EAAS,IAAT,EAAesB,QAAf,CAAwBd,KAAK,CAACR,QAA9B,CADN;AAEJuB,gBAAI,EAAEP,CAAC,CAACR,KAAK,CAACJ,QAAP,CAFH;AAGJoB,mBAAO,EAAE;AAHL;AADE;AAHhB,SASO;AAAArB,wBAECY,KAAK,CAACU,IAANV,GAAa;AAAEP,eAAK,EAAEW;AAAT,SAAbJ,KAAsCW,mBAC3BP,aAD2B,EACd,IADc,CAFvC;AAAA,OATP,GAaOO;AAAA,oBAIS;AACRnC,cAAI,EAAE;AACJO,iBAAK,EAAEU,KAAK,CAACV,KADT;AAEJE,oBAAQ,EAAE,CAAC,MAAD,EAAS,IAAT,EAAesB,QAAf,CAAwBd,KAAK,CAACR,QAA9B,CAFN;AAGJuB,gBAAI,EAAEP,CAAC,CAACR,KAAK,CAACH,QAAP,CAHH;AAIJmB,mBAAO,EAAE;AAJL;AADE;AAJT,SAWA;AAAArB,wBAECY,KAAK,CAACY,IAANZ,GAAa;AAAEP,eAAK,EAAEa;AAAT,SAAbN,KAAsCW,mBAC3BL,aAD2B,EACd,IADc,CAFvC;AAAA,OAXA,CAbP;AAgCD,KAxCQ,CAATzB;AA0CA,WAAO,EAAP;AACF;;AA/DsE,CAAzB,CAAxC","names":["VBtn","VDefaultsProvider","useLocale","genericComponent","propsFactory","useRender","makeVStepperActionsProps","color","String","disabled","type","Boolean","default","prevText","nextText","VStepperActions","name","props","emits","click:prev","click:next","setup","_ref","emit","slots","t","onClickPrev","onClickNext","prevSlotProps","onClick","nextSlotProps","includes","text","variant","prev","_createVNode","next"],"sources":["../../../src/components/VStepper/VStepperActions.tsx"],"sourcesContent":["// Components\nimport { VBtn } from '@/components/VBtn/VBtn'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider/VDefaultsProvider'\n\n// Composables\nimport { useLocale } from '@/composables/locale'\n\n// Utilities\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\nexport type VStepperActionsSlots = {\n  prev: {\n    props: { onClick: () => void }\n  }\n  next: {\n    props: { onClick: () => void }\n  }\n}\n\nexport const makeVStepperActionsProps = propsFactory({\n  color: String,\n  disabled: {\n    type: [Boolean, String] as PropType<boolean | 'next' | 'prev'>,\n    default: false,\n  },\n  prevText: {\n    type: String,\n    default: '$vuetify.stepper.prev',\n  },\n  nextText: {\n    type: String,\n    default: '$vuetify.stepper.next',\n  },\n}, 'VStepperActions')\n\nexport const VStepperActions = genericComponent<VStepperActionsSlots>()({\n  name: 'VStepperActions',\n\n  props: makeVStepperActionsProps(),\n\n  emits: {\n    'click:prev': () => true,\n    'click:next': () => true,\n  },\n\n  setup (props, { emit, slots }) {\n    const { t } = useLocale()\n    function onClickPrev () {\n      emit('click:prev')\n    }\n\n    function onClickNext () {\n      emit('click:next')\n    }\n\n    useRender(() => {\n      const prevSlotProps = {\n        onClick: onClickPrev,\n      }\n      const nextSlotProps = {\n        onClick: onClickNext,\n      }\n\n      return (\n        <div class=\"v-stepper-actions\">\n          <VDefaultsProvider\n            defaults={{\n              VBtn: {\n                disabled: ['prev', true].includes(props.disabled),\n                text: t(props.prevText),\n                variant: 'text',\n              },\n            }}\n          >\n            { slots.prev?.({ props: prevSlotProps }) ?? (\n              <VBtn { ...prevSlotProps } />\n            )}\n          </VDefaultsProvider>\n\n          <VDefaultsProvider\n            defaults={{\n              VBtn: {\n                color: props.color,\n                disabled: ['next', true].includes(props.disabled),\n                text: t(props.nextText),\n                variant: 'tonal',\n              },\n            }}\n          >\n            { slots.next?.({ props: nextSlotProps }) ?? (\n              <VBtn { ...nextSlotProps } />\n            )}\n          </VDefaultsProvider>\n        </div>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VStepperActions = InstanceType<typeof VStepperActions>\n"]},"metadata":{},"sourceType":"module"}
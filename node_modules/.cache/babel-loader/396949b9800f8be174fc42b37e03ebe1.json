{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n// Composables\nimport { useProxiedModel } from \"../../../composables/proxiedModel.js\"; // Utilities\n\nimport { computed, inject, provide, shallowRef } from 'vue';\nimport { deepEqual, propsFactory, wrapInArray } from \"../../../util/index.js\"; // Types\n\nconst singleSelectStrategy = {\n  showSelectAll: false,\n  allSelected: () => [],\n  select: _ref => {\n    let {\n      items,\n      value\n    } = _ref;\n    return new Set(value ? [items[0]?.value] : []);\n  },\n  selectAll: _ref2 => {\n    let {\n      selected\n    } = _ref2;\n    return selected;\n  }\n};\nconst pageSelectStrategy = {\n  showSelectAll: true,\n  allSelected: _ref3 => {\n    let {\n      currentPage\n    } = _ref3;\n    return currentPage;\n  },\n  select: _ref4 => {\n    let {\n      items,\n      value,\n      selected\n    } = _ref4;\n\n    for (const item of items) {\n      if (value) selected.add(item.value);else selected.delete(item.value);\n    }\n\n    return selected;\n  },\n  selectAll: _ref5 => {\n    let {\n      value,\n      currentPage,\n      selected\n    } = _ref5;\n    return pageSelectStrategy.select({\n      items: currentPage,\n      value,\n      selected\n    });\n  }\n};\nconst allSelectStrategy = {\n  showSelectAll: true,\n  allSelected: _ref6 => {\n    let {\n      allItems\n    } = _ref6;\n    return allItems;\n  },\n  select: _ref7 => {\n    let {\n      items,\n      value,\n      selected\n    } = _ref7;\n\n    for (const item of items) {\n      if (value) selected.add(item.value);else selected.delete(item.value);\n    }\n\n    return selected;\n  },\n  selectAll: _ref8 => {\n    let {\n      value,\n      allItems,\n      selected\n    } = _ref8;\n    return allSelectStrategy.select({\n      items: allItems,\n      value,\n      selected\n    });\n  }\n};\nexport const makeDataTableSelectProps = propsFactory({\n  showSelect: Boolean,\n  selectStrategy: {\n    type: [String, Object],\n    default: 'page'\n  },\n  modelValue: {\n    type: Array,\n    default: () => []\n  },\n  valueComparator: {\n    type: Function,\n    default: deepEqual\n  }\n}, 'DataTable-select');\nexport const VDataTableSelectionSymbol = Symbol.for('vuetify:data-table-selection');\nexport function provideSelection(props, _ref9) {\n  let {\n    allItems,\n    currentPage\n  } = _ref9;\n  const selected = useProxiedModel(props, 'modelValue', props.modelValue, v => {\n    return new Set(wrapInArray(v).map(v => {\n      return allItems.value.find(item => props.valueComparator(v, item.value))?.value ?? v;\n    }));\n  }, v => {\n    return [...v.values()];\n  });\n  const allSelectable = computed(() => allItems.value.filter(item => item.selectable));\n  const currentPageSelectable = computed(() => currentPage.value.filter(item => item.selectable));\n  const selectStrategy = computed(() => {\n    if (typeof props.selectStrategy === 'object') return props.selectStrategy;\n\n    switch (props.selectStrategy) {\n      case 'single':\n        return singleSelectStrategy;\n\n      case 'all':\n        return allSelectStrategy;\n\n      case 'page':\n      default:\n        return pageSelectStrategy;\n    }\n  });\n  const lastSelectedIndex = shallowRef(null);\n\n  function isSelected(items) {\n    return wrapInArray(items).every(item => selected.value.has(item.value));\n  }\n\n  function isSomeSelected(items) {\n    return wrapInArray(items).some(item => selected.value.has(item.value));\n  }\n\n  function select(items, value) {\n    const newSelected = selectStrategy.value.select({\n      items,\n      value,\n      selected: new Set(selected.value)\n    });\n    selected.value = newSelected;\n  }\n\n  function toggleSelect(item, index, event) {\n    const items = [];\n    index = index ?? currentPage.value.findIndex(i => i.value === item.value);\n\n    if (props.selectStrategy !== 'single' && event?.shiftKey && lastSelectedIndex.value !== null) {\n      const [start, end] = [lastSelectedIndex.value, index].sort((a, b) => a - b);\n      items.push(...currentPage.value.slice(start, end + 1));\n    } else {\n      items.push(item);\n      lastSelectedIndex.value = index;\n    }\n\n    select(items, !isSelected([item]));\n  }\n\n  function selectAll(value) {\n    const newSelected = selectStrategy.value.selectAll({\n      value,\n      allItems: allSelectable.value,\n      currentPage: currentPageSelectable.value,\n      selected: new Set(selected.value)\n    });\n    selected.value = newSelected;\n  }\n\n  const someSelected = computed(() => selected.value.size > 0);\n  const allSelected = computed(() => {\n    const items = selectStrategy.value.allSelected({\n      allItems: allSelectable.value,\n      currentPage: currentPageSelectable.value\n    });\n    return !!items.length && isSelected(items);\n  });\n  const showSelectAll = computed(() => selectStrategy.value.showSelectAll);\n  const data = {\n    toggleSelect,\n    select,\n    selectAll,\n    isSelected,\n    isSomeSelected,\n    someSelected,\n    allSelected,\n    showSelectAll,\n    lastSelectedIndex,\n    selectStrategy\n  };\n  provide(VDataTableSelectionSymbol, data);\n  return data;\n}\nexport function useSelection() {\n  const data = inject(VDataTableSelectionSymbol);\n  if (!data) throw new Error('Missing selection!');\n  return data;\n}","map":{"version":3,"mappings":";AAAA;AAAA,SACSA,eADT,QACwB,sCADxB,C,CAGA;;AACA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,OAA3B,EAAoCC,UAApC,QAAsD,KAAtD;AAA2D,SAClDC,SADkD,EACvCC,YADuC,EACzBC,WADyB,QACd,wBADc,C,CAG3D;;AAoCA,MAAMC,oBAA6C,GAAG;AACpDC,eAAa,EAAE,KADqC;AAEpDC,aAAW,EAAEA,MAAM,EAFiC;AAGpDC,QAAM,EAAEC,QAAsB;AAAA,QAArB;AAAEC,WAAF;AAASC;AAAT,QAAgBF,IAAK;AAC5B,WAAO,IAAIG,GAAJ,CAAQD,KAAK,GAAG,CAACD,KAAK,CAAC,CAAD,CAALA,EAAUC,KAAX,CAAH,GAAuB,EAApC,CAAP;AACD,GALmD;AAMpDE,WAAS,EAAEC;AAAA,QAAC;AAAEC;AAAF,QAAYD,KAAb;AAAa,WAAKC,QAAL;AAAa;AANe,CAAtD;AASA,MAAMC,kBAA2C,GAAG;AAClDV,eAAa,EAAE,IADmC;AAElDC,aAAW,EAAEU;AAAA,QAAC;AAAEC;AAAF,QAAeD,KAAhB;AAAgB,WAAKC,WAAL;AAAgB,GAFK;AAGlDV,QAAM,EAAEW,SAAgC;AAAA,QAA/B;AAAET,WAAF;AAASC,WAAT;AAAgBI;AAAhB,QAA0BI,KAAK;;AACtC,SAAK,MAAMC,IAAX,IAAmBV,KAAnB,EAA0B;AACxB,UAAIC,KAAJ,EAAWI,QAAQ,CAACM,GAATN,CAAaK,IAAI,CAACT,KAAlBI,EAAX,KACKA,QAAQ,CAACO,MAATP,CAAgBK,IAAI,CAACT,KAArBI;AACP;;AAEA,WAAOA,QAAP;AACD,GAViD;AAWlDF,WAAS,EAAEU;AAAA,QAAC;AAAEZ,WAAF;AAASO,iBAAT;AAAsBH;AAAtB,QAAgCQ,KAAjC;AAAiC,WAAKP,kBAAkB,CAACR,MAAnBQ,CAA0B;AAAEN,WAAK,EAAEQ,WAAT;AAAsBP,WAAtB;AAA6BI;AAA7B,KAA1BC,CAAL;AAAuE;AAXjE,CAApD;AAcA,MAAMQ,iBAA0C,GAAG;AACjDlB,eAAa,EAAE,IADkC;AAEjDC,aAAW,EAAEkB;AAAA,QAAC;AAAEC;AAAF,QAAYD,KAAb;AAAa,WAAKC,QAAL;AAAa,GAFU;AAGjDlB,QAAM,EAAEmB,SAAgC;AAAA,QAA/B;AAAEjB,WAAF;AAASC,WAAT;AAAgBI;AAAhB,QAA0BY,KAAK;;AACtC,SAAK,MAAMP,IAAX,IAAmBV,KAAnB,EAA0B;AACxB,UAAIC,KAAJ,EAAWI,QAAQ,CAACM,GAATN,CAAaK,IAAI,CAACT,KAAlBI,EAAX,KACKA,QAAQ,CAACO,MAATP,CAAgBK,IAAI,CAACT,KAArBI;AACP;;AAEA,WAAOA,QAAP;AACD,GAVgD;AAWjDF,WAAS,EAAEe;AAAA,QAAC;AAAEjB,WAAF;AAASe,cAAT;AAAmBX;AAAnB,QAA6Ba,KAA9B;AAA8B,WAAKJ,iBAAiB,CAAChB,MAAlBgB,CAAyB;AAAEd,WAAK,EAAEgB,QAAT;AAAmBf,WAAnB;AAA0BI;AAA1B,KAAzBS,CAAL;AAAmE;AAX3D,CAAnD;AAcA,OAAO,MAAMK,wBAAwB,GAAG1B,YAAY,CAAC;AACnD2B,YAAU,EAAEC,OADuC;AAEnDC,gBAAc,EAAE;AACdC,QAAI,EAAE,CAACC,MAAD,EAASC,MAAT,CADQ;AAEdC,WAAO,EAAE;AAFK,GAFmC;AAMnDC,YAAU,EAAE;AACVJ,QAAI,EAAEK,KADI;AAEVF,WAAO,EAAEA,MAAO;AAFN,GANuC;AAUnDG,iBAAe,EAAE;AACfN,QAAI,EAAEO,QADS;AAEfJ,WAAO,EAAElC;AAFM;AAVkC,CAAD,EAcjD,kBAdiD,CAA7C;AAgBP,OAAO,MAAMuC,yBAA4E,GAAGC,MAAM,CAACC,GAAPD,CAAW,8BAAXA,CAArF;AAEP,OAAO,SAASE,gBAAT,CACLC,KADK,EACgBC,KADhB,EAGL;AAAA,MADA;AAAEpB,YAAF;AAAYR;AAAZ,MAAkG4B,KAClG;AACA,QAAM/B,QAAQ,GAAGlB,eAAe,CAACgD,KAAD,EAAQ,YAAR,EAAsBA,KAAK,CAACR,UAA5B,EAAwCU,CAAC,IAAI;AAC3E,WAAO,IAAInC,GAAJ,CAAQR,WAAW,CAAC2C,CAAD,CAAX3C,CAAe4C,GAAf5C,CAAmB2C,CAAC,IAAI;AACrC,aAAOrB,QAAQ,CAACf,KAATe,CAAeuB,IAAfvB,CAAoBN,IAAI,IAAIyB,KAAK,CAACN,eAANM,CAAsBE,CAAtBF,EAAyBzB,IAAI,CAACT,KAA9BkC,CAA5BnB,GAAmEf,KAAnEe,IAA4EqB,CAAnF;AACD,KAFc3C,CAAR,CAAP;AAGD,GAJ+B,EAI7B2C,CAAC,IAAI;AACN,WAAO,CAAC,GAAGA,CAAC,CAACG,MAAFH,EAAJ,CAAP;AACD,GAN+B,CAAhC;AAQA,QAAMI,aAAa,GAAGrD,QAAQ,CAAC,MAAM4B,QAAQ,CAACf,KAATe,CAAe0B,MAAf1B,CAAsBN,IAAI,IAAIA,IAAI,CAACiC,UAAnC3B,CAAP,CAA9B;AACA,QAAM4B,qBAAqB,GAAGxD,QAAQ,CAAC,MAAMoB,WAAW,CAACP,KAAZO,CAAkBkC,MAAlBlC,CAAyBE,IAAI,IAAIA,IAAI,CAACiC,UAAtCnC,CAAP,CAAtC;AAEA,QAAMc,cAAc,GAAGlC,QAAQ,CAAC,MAAM;AACpC,QAAI,OAAO+C,KAAK,CAACb,cAAb,KAAgC,QAApC,EAA8C,OAAOa,KAAK,CAACb,cAAb;;AAE9C,YAAQa,KAAK,CAACb,cAAd;AACE,WAAK,QAAL;AAAe,eAAO3B,oBAAP;;AACf,WAAK,KAAL;AAAY,eAAOmB,iBAAP;;AACZ,WAAK,MAAL;AACA;AAAS,eAAOR,kBAAP;AAJX;AAMD,GAT8B,CAA/B;AAWA,QAAMuC,iBAAiB,GAAGtD,UAAU,CAAgB,IAAhB,CAApC;;AAEA,WAASuD,UAAT,CAAqB9C,KAArB,EAA+D;AAC7D,WAAON,WAAW,CAACM,KAAD,CAAXN,CAAmBqD,KAAnBrD,CAAyBgB,IAAI,IAAIL,QAAQ,CAACJ,KAATI,CAAe2C,GAAf3C,CAAmBK,IAAI,CAACT,KAAxBI,CAAjCX,CAAP;AACF;;AAEA,WAASuD,cAAT,CAAyBjD,KAAzB,EAAmE;AACjE,WAAON,WAAW,CAACM,KAAD,CAAXN,CAAmBwD,IAAnBxD,CAAwBgB,IAAI,IAAIL,QAAQ,CAACJ,KAATI,CAAe2C,GAAf3C,CAAmBK,IAAI,CAACT,KAAxBI,CAAhCX,CAAP;AACF;;AAEA,WAASI,MAAT,CAAiBE,KAAjB,EAA0CC,KAA1C,EAA0D;AACxD,UAAMkD,WAAW,GAAG7B,cAAc,CAACrB,KAAfqB,CAAqBxB,MAArBwB,CAA4B;AAC9CtB,WAD8C;AAE9CC,WAF8C;AAG9CI,cAAQ,EAAE,IAAIH,GAAJ,CAAQG,QAAQ,CAACJ,KAAjB;AAHoC,KAA5BqB,CAApB;AAMAjB,YAAQ,CAACJ,KAATI,GAAiB8C,WAAjB9C;AACF;;AAEA,WAAS+C,YAAT,CAAuB1C,IAAvB,EAA6C2C,KAA7C,EAA6DC,KAA7D,EAAiF;AAC/E,UAAMtD,KAAK,GAAG,EAAd;AACAqD,SAAK,GAAGA,KAAK,IAAI7C,WAAW,CAACP,KAAZO,CAAkB+C,SAAlB/C,CAA4BgD,CAAC,IAAIA,CAAC,CAACvD,KAAFuD,KAAY9C,IAAI,CAACT,KAAlDO,CAAjB6C;;AAEA,QAAIlB,KAAK,CAACb,cAANa,KAAyB,QAAzBA,IAAqCmB,KAAK,EAAEG,QAA5CtB,IAAwDU,iBAAiB,CAAC5C,KAAlB4C,KAA4B,IAAxF,EAA8F;AAC5F,YAAM,CAACa,KAAD,EAAQC,GAAR,IAAe,CAACd,iBAAiB,CAAC5C,KAAnB,EAA0BoD,KAA1B,EAAiCO,IAAjC,CAAsC,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAApD,CAArB;AAEA9D,WAAK,CAAC+D,IAAN/D,CAAW,GAAGQ,WAAW,CAACP,KAAZO,CAAkBwD,KAAlBxD,CAAwBkD,KAAxBlD,EAA+BmD,GAAG,GAAG,CAArCnD,CAAdR;AACD,KAJD,MAIO;AACLA,WAAK,CAAC+D,IAAN/D,CAAWU,IAAXV;AACA6C,uBAAiB,CAAC5C,KAAlB4C,GAA0BQ,KAA1BR;AACF;;AAEA/C,UAAM,CAACE,KAAD,EAAQ,CAAC8C,UAAU,CAAC,CAACpC,IAAD,CAAD,CAAnB,CAANZ;AACF;;AAEA,WAASK,SAAT,CAAoBF,KAApB,EAAoC;AAClC,UAAMkD,WAAW,GAAG7B,cAAc,CAACrB,KAAfqB,CAAqBnB,SAArBmB,CAA+B;AACjDrB,WADiD;AAEjDe,cAAQ,EAAEyB,aAAa,CAACxC,KAFyB;AAGjDO,iBAAW,EAAEoC,qBAAqB,CAAC3C,KAHc;AAIjDI,cAAQ,EAAE,IAAIH,GAAJ,CAAQG,QAAQ,CAACJ,KAAjB;AAJuC,KAA/BqB,CAApB;AAOAjB,YAAQ,CAACJ,KAATI,GAAiB8C,WAAjB9C;AACF;;AAEA,QAAM4D,YAAY,GAAG7E,QAAQ,CAAC,MAAMiB,QAAQ,CAACJ,KAATI,CAAe6D,IAAf7D,GAAsB,CAA7B,CAA7B;AACA,QAAMR,WAAW,GAAGT,QAAQ,CAAC,MAAM;AACjC,UAAMY,KAAK,GAAGsB,cAAc,CAACrB,KAAfqB,CAAqBzB,WAArByB,CAAiC;AAC7CN,cAAQ,EAAEyB,aAAa,CAACxC,KADqB;AAE7CO,iBAAW,EAAEoC,qBAAqB,CAAC3C;AAFU,KAAjCqB,CAAd;AAIA,WAAO,CAAC,CAACtB,KAAK,CAACmE,MAAR,IAAkBrB,UAAU,CAAC9C,KAAD,CAAnC;AACD,GAN2B,CAA5B;AAOA,QAAMJ,aAAa,GAAGR,QAAQ,CAAC,MAAMkC,cAAc,CAACrB,KAAfqB,CAAqB1B,aAA5B,CAA9B;AAEA,QAAMwE,IAAI,GAAG;AACXhB,gBADW;AAEXtD,UAFW;AAGXK,aAHW;AAIX2C,cAJW;AAKXG,kBALW;AAMXgB,gBANW;AAOXpE,eAPW;AAQXD,iBARW;AASXiD,qBATW;AAUXvB;AAVW,GAAb;AAaAhC,SAAO,CAACyC,yBAAD,EAA4BqC,IAA5B,CAAP9E;AAEA,SAAO8E,IAAP;AACF;AAEA,OAAO,SAASC,YAAT,GAAyB;AAC9B,QAAMD,IAAI,GAAG/E,MAAM,CAAC0C,yBAAD,CAAnB;AAEA,MAAI,CAACqC,IAAL,EAAW,MAAM,IAAIE,KAAJ,CAAU,oBAAV,CAAN;AAEX,SAAOF,IAAP;AACF","names":["useProxiedModel","computed","inject","provide","shallowRef","deepEqual","propsFactory","wrapInArray","singleSelectStrategy","showSelectAll","allSelected","select","_ref","items","value","Set","selectAll","_ref2","selected","pageSelectStrategy","_ref3","currentPage","_ref4","item","add","delete","_ref5","allSelectStrategy","_ref6","allItems","_ref7","_ref8","makeDataTableSelectProps","showSelect","Boolean","selectStrategy","type","String","Object","default","modelValue","Array","valueComparator","Function","VDataTableSelectionSymbol","Symbol","for","provideSelection","props","_ref9","v","map","find","values","allSelectable","filter","selectable","currentPageSelectable","lastSelectedIndex","isSelected","every","has","isSomeSelected","some","newSelected","toggleSelect","index","event","findIndex","i","shiftKey","start","end","sort","a","b","push","slice","someSelected","size","length","data","useSelection","Error"],"sources":["../../../../src/components/VDataTable/composables/select.ts"],"sourcesContent":["// Composables\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed, inject, provide, shallowRef } from 'vue'\nimport { deepEqual, propsFactory, wrapInArray } from '@/util'\n\n// Types\nimport type { InjectionKey, PropType, Ref } from 'vue'\nimport type { DataTableItemProps } from './items'\nimport type { EventProp } from '@/util'\n\nexport interface SelectableItem {\n  value: any\n  selectable: boolean\n}\n\nexport interface DataTableSelectStrategy {\n  showSelectAll: boolean\n  allSelected: (data: {\n    allItems: SelectableItem[]\n    currentPage: SelectableItem[]\n  }) => SelectableItem[]\n  select: (data: {\n    items: SelectableItem[]\n    value: boolean\n    selected: Set<unknown>\n  }) => Set<unknown>\n  selectAll: (data: {\n    value: boolean\n    allItems: SelectableItem[]\n    currentPage: SelectableItem[]\n    selected: Set<unknown>\n  }) => Set<unknown>\n}\n\ntype SelectionProps = Pick<DataTableItemProps, 'itemValue'> & {\n  modelValue: readonly any[]\n  selectStrategy: 'single' | 'page' | 'all'\n  valueComparator: typeof deepEqual\n  'onUpdate:modelValue': EventProp<[any[]]> | undefined\n}\n\nconst singleSelectStrategy: DataTableSelectStrategy = {\n  showSelectAll: false,\n  allSelected: () => [],\n  select: ({ items, value }) => {\n    return new Set(value ? [items[0]?.value] : [])\n  },\n  selectAll: ({ selected }) => selected,\n}\n\nconst pageSelectStrategy: DataTableSelectStrategy = {\n  showSelectAll: true,\n  allSelected: ({ currentPage }) => currentPage,\n  select: ({ items, value, selected }) => {\n    for (const item of items) {\n      if (value) selected.add(item.value)\n      else selected.delete(item.value)\n    }\n\n    return selected\n  },\n  selectAll: ({ value, currentPage, selected }) => pageSelectStrategy.select({ items: currentPage, value, selected }),\n}\n\nconst allSelectStrategy: DataTableSelectStrategy = {\n  showSelectAll: true,\n  allSelected: ({ allItems }) => allItems,\n  select: ({ items, value, selected }) => {\n    for (const item of items) {\n      if (value) selected.add(item.value)\n      else selected.delete(item.value)\n    }\n\n    return selected\n  },\n  selectAll: ({ value, allItems, selected }) => allSelectStrategy.select({ items: allItems, value, selected }),\n}\n\nexport const makeDataTableSelectProps = propsFactory({\n  showSelect: Boolean,\n  selectStrategy: {\n    type: [String, Object] as PropType<'single' | 'page' | 'all'>,\n    default: 'page',\n  },\n  modelValue: {\n    type: Array as PropType<readonly any[]>,\n    default: () => ([]),\n  },\n  valueComparator: {\n    type: Function as PropType<typeof deepEqual>,\n    default: deepEqual,\n  },\n}, 'DataTable-select')\n\nexport const VDataTableSelectionSymbol: InjectionKey<ReturnType<typeof provideSelection>> = Symbol.for('vuetify:data-table-selection')\n\nexport function provideSelection (\n  props: SelectionProps,\n  { allItems, currentPage }: { allItems: Ref<SelectableItem[]>, currentPage: Ref<SelectableItem[]> }\n) {\n  const selected = useProxiedModel(props, 'modelValue', props.modelValue, v => {\n    return new Set(wrapInArray(v).map(v => {\n      return allItems.value.find(item => props.valueComparator(v, item.value))?.value ?? v\n    }))\n  }, v => {\n    return [...v.values()]\n  })\n\n  const allSelectable = computed(() => allItems.value.filter(item => item.selectable))\n  const currentPageSelectable = computed(() => currentPage.value.filter(item => item.selectable))\n\n  const selectStrategy = computed(() => {\n    if (typeof props.selectStrategy === 'object') return props.selectStrategy\n\n    switch (props.selectStrategy) {\n      case 'single': return singleSelectStrategy\n      case 'all': return allSelectStrategy\n      case 'page':\n      default: return pageSelectStrategy\n    }\n  })\n\n  const lastSelectedIndex = shallowRef<number | null>(null)\n\n  function isSelected (items: SelectableItem | SelectableItem[]) {\n    return wrapInArray(items).every(item => selected.value.has(item.value))\n  }\n\n  function isSomeSelected (items: SelectableItem | SelectableItem[]) {\n    return wrapInArray(items).some(item => selected.value.has(item.value))\n  }\n\n  function select (items: SelectableItem[], value: boolean) {\n    const newSelected = selectStrategy.value.select({\n      items,\n      value,\n      selected: new Set(selected.value),\n    })\n\n    selected.value = newSelected\n  }\n\n  function toggleSelect (item: SelectableItem, index?: number, event?: MouseEvent) {\n    const items = []\n    index = index ?? currentPage.value.findIndex(i => i.value === item.value)\n\n    if (props.selectStrategy !== 'single' && event?.shiftKey && lastSelectedIndex.value !== null) {\n      const [start, end] = [lastSelectedIndex.value, index].sort((a, b) => a - b)\n\n      items.push(...currentPage.value.slice(start, end + 1))\n    } else {\n      items.push(item)\n      lastSelectedIndex.value = index\n    }\n\n    select(items, !isSelected([item]))\n  }\n\n  function selectAll (value: boolean) {\n    const newSelected = selectStrategy.value.selectAll({\n      value,\n      allItems: allSelectable.value,\n      currentPage: currentPageSelectable.value,\n      selected: new Set(selected.value),\n    })\n\n    selected.value = newSelected\n  }\n\n  const someSelected = computed(() => selected.value.size > 0)\n  const allSelected = computed(() => {\n    const items = selectStrategy.value.allSelected({\n      allItems: allSelectable.value,\n      currentPage: currentPageSelectable.value,\n    })\n    return !!items.length && isSelected(items)\n  })\n  const showSelectAll = computed(() => selectStrategy.value.showSelectAll)\n\n  const data = {\n    toggleSelect,\n    select,\n    selectAll,\n    isSelected,\n    isSomeSelected,\n    someSelected,\n    allSelected,\n    showSelectAll,\n    lastSelectedIndex,\n    selectStrategy,\n  }\n\n  provide(VDataTableSelectionSymbol, data)\n\n  return data\n}\n\nexport function useSelection () {\n  const data = inject(VDataTableSelectionSymbol)\n\n  if (!data) throw new Error('Missing selection!')\n\n  return data\n}\n"]},"metadata":{},"sourceType":"module"}
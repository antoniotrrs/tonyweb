{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\"; // Styles\n\nimport \"./VGrid.css\"; // Composables\n\nimport { makeComponentProps } from \"../../composables/component.js\";\nimport { makeDimensionProps, useDimension } from \"../../composables/dimensions.js\";\nimport { useRtl } from \"../../composables/locale.js\";\nimport { makeTagProps } from \"../../composables/tag.js\"; // Utilities\n\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.js\";\nexport const makeVContainerProps = propsFactory({\n  fluid: {\n    type: Boolean,\n    default: false\n  },\n  ...makeComponentProps(),\n  ...makeDimensionProps(),\n  ...makeTagProps()\n}, 'VContainer');\nexport const VContainer = genericComponent()({\n  name: 'VContainer',\n  props: makeVContainerProps(),\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      rtlClasses\n    } = useRtl();\n    const {\n      dimensionStyles\n    } = useDimension(props);\n    useRender(() => _createVNode(props.tag, {\n      \"class\": ['v-container', {\n        'v-container--fluid': props.fluid\n      }, rtlClasses.value, props.class],\n      \"style\": [dimensionStyles.value, props.style]\n    }, slots));\n    return {};\n  }\n\n});","map":{"version":3,"mappings":"mDAAA;;AACA,qB,CAEA;;AAAA,SACSA,kBADT,QAC2B,gCAD3B;AAC2B,SAClBC,kBADkB,EACEC,YADF,QACc,iCADd;AACc,SAChCC,MADgC,QAC1B,6BAD0B;AAC1B,SACNC,YADM,QACM,0BADN,C,CAGf;;AAAA,SACSC,gBADT,EAC2BC,YAD3B,EACyCC,SADzC,QACkD,qBADlD;AAGA,OAAO,MAAMC,mBAAmB,GAAGF,YAAY,CAAC;AAC9CG,OAAK,EAAE;AACLC,QAAI,EAAEC,OADD;AAELC,WAAO,EAAE;AAFJ,GADuC;AAM9C,KAAGZ,kBAAkB,EANyB;AAO9C,KAAGC,kBAAkB,EAPyB;AAQ9C,KAAGG,YAAY;AAR+B,CAAD,EAS5C,YAT4C,CAAxC;AAWP,OAAO,MAAMS,UAAU,GAAGR,gBAAgB,GAAG;AAC3CS,MAAI,EAAE,YADqC;AAG3CC,OAAK,EAAEP,mBAAmB,EAHiB;;AAK3CQ,OAAKA,CAAED,KAAFC,EAAOC,IAAPD,EAAoB;AAAA,QAAX;AAAEE;AAAF,QAASD,IAAE;AACvB,UAAM;AAAEE;AAAF,QAAiBhB,MAAM,EAA7B;AACA,UAAM;AAAEiB;AAAF,QAAsBlB,YAAY,CAACa,KAAD,CAAxC;AAEAR,aAAS,CAAC;AAAA,eAEC,CACL,aADK,EAEL;AAAE,8BAAsBQ,KAAK,CAACN;AAA9B,OAFK,EAGLU,UAAU,CAACE,KAHN,EAILN,KAAK,CAACO,KAJD,CAFD;AAOL,eACM,CACLF,eAAe,CAACC,KADX,EAELN,KAAK,CAACQ,KAFD;AARD,OAYIL,KAZJ,CAAD,CAATX;AAgBA,WAAO,EAAP;AACF;;AA1B2C,CAAH,CAAnC","names":["makeComponentProps","makeDimensionProps","useDimension","useRtl","makeTagProps","genericComponent","propsFactory","useRender","makeVContainerProps","fluid","type","Boolean","default","VContainer","name","props","setup","_ref","slots","rtlClasses","dimensionStyles","value","class","style"],"sources":["../../../src/components/VGrid/VContainer.tsx"],"sourcesContent":["// Styles\nimport './VGrid.sass'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { useRtl } from '@/composables/locale'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVContainerProps = propsFactory({\n  fluid: {\n    type: Boolean,\n    default: false,\n  },\n\n  ...makeComponentProps(),\n  ...makeDimensionProps(),\n  ...makeTagProps(),\n}, 'VContainer')\n\nexport const VContainer = genericComponent()({\n  name: 'VContainer',\n\n  props: makeVContainerProps(),\n\n  setup (props, { slots }) {\n    const { rtlClasses } = useRtl()\n    const { dimensionStyles } = useDimension(props)\n\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-container',\n          { 'v-container--fluid': props.fluid },\n          rtlClasses.value,\n          props.class,\n        ]}\n        style={[\n          dimensionStyles.value,\n          props.style,\n        ]}\n        v-slots={ slots }\n      />\n    ))\n\n    return {}\n  },\n})\n\nexport type VContainer = InstanceType<typeof VContainer>\n"]},"metadata":{},"sourceType":"module"}
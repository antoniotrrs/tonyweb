{"ast":null,"code":"import { Fragment as _Fragment, createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\"; // Styles\n\nimport \"./VTab.css\"; // Components\n\nimport { makeVBtnProps, VBtn } from \"../VBtn/VBtn.js\"; // Composables\n\nimport { useTextColor } from \"../../composables/color.js\";\nimport { forwardRefs } from \"../../composables/forwardRefs.js\"; // Utilities\n\nimport { computed, ref } from 'vue';\nimport { VTabsSymbol } from \"./shared.js\";\nimport { animate, genericComponent, omit, propsFactory, standardEasing, useRender } from \"../../util/index.js\"; // Types\n\nexport const makeVTabProps = propsFactory({\n  fixed: Boolean,\n  sliderColor: String,\n  hideSlider: Boolean,\n  direction: {\n    type: String,\n    default: 'horizontal'\n  },\n  ...omit(makeVBtnProps({\n    selectedClass: 'v-tab--selected',\n    variant: 'text'\n  }), ['active', 'block', 'flat', 'location', 'position', 'symbol'])\n}, 'VTab');\nexport const VTab = genericComponent()({\n  name: 'VTab',\n  props: makeVTabProps(),\n\n  setup(props, _ref) {\n    let {\n      slots,\n      attrs\n    } = _ref;\n    const {\n      textColorClasses: sliderColorClasses,\n      textColorStyles: sliderColorStyles\n    } = useTextColor(props, 'sliderColor');\n    const rootEl = ref();\n    const sliderEl = ref();\n    const isHorizontal = computed(() => props.direction === 'horizontal');\n    const isSelected = computed(() => rootEl.value?.group?.isSelected.value ?? false);\n\n    function updateSlider(_ref2) {\n      let {\n        value\n      } = _ref2;\n\n      if (value) {\n        const prevEl = rootEl.value?.$el.parentElement?.querySelector('.v-tab--selected .v-tab__slider');\n        const nextEl = sliderEl.value;\n        if (!prevEl || !nextEl) return;\n        const color = getComputedStyle(prevEl).color;\n        const prevBox = prevEl.getBoundingClientRect();\n        const nextBox = nextEl.getBoundingClientRect();\n        const xy = isHorizontal.value ? 'x' : 'y';\n        const XY = isHorizontal.value ? 'X' : 'Y';\n        const rightBottom = isHorizontal.value ? 'right' : 'bottom';\n        const widthHeight = isHorizontal.value ? 'width' : 'height';\n        const prevPos = prevBox[xy];\n        const nextPos = nextBox[xy];\n        const delta = prevPos > nextPos ? prevBox[rightBottom] - nextBox[rightBottom] : prevBox[xy] - nextBox[xy];\n        const origin = Math.sign(delta) > 0 ? isHorizontal.value ? 'right' : 'bottom' : Math.sign(delta) < 0 ? isHorizontal.value ? 'left' : 'top' : 'center';\n        const size = Math.abs(delta) + (Math.sign(delta) < 0 ? prevBox[widthHeight] : nextBox[widthHeight]);\n        const scale = size / Math.max(prevBox[widthHeight], nextBox[widthHeight]) || 0;\n        const initialScale = prevBox[widthHeight] / nextBox[widthHeight] || 0;\n        const sigma = 1.5;\n        animate(nextEl, {\n          backgroundColor: [color, 'currentcolor'],\n          transform: [`translate${XY}(${delta}px) scale${XY}(${initialScale})`, `translate${XY}(${delta / sigma}px) scale${XY}(${(scale - 1) / sigma + 1})`, 'none'],\n          transformOrigin: Array(3).fill(origin)\n        }, {\n          duration: 225,\n          easing: standardEasing\n        });\n      }\n    }\n\n    useRender(() => {\n      const btnProps = VBtn.filterProps(props);\n      return _createVNode(VBtn, _mergeProps({\n        \"symbol\": VTabsSymbol,\n        \"ref\": rootEl,\n        \"class\": ['v-tab', props.class],\n        \"style\": props.style,\n        \"tabindex\": isSelected.value ? 0 : -1,\n        \"role\": \"tab\",\n        \"aria-selected\": String(isSelected.value),\n        \"active\": false\n      }, btnProps, attrs, {\n        \"block\": props.fixed,\n        \"maxWidth\": props.fixed ? 300 : undefined,\n        \"onGroup:selected\": updateSlider\n      }), { ...slots,\n        default: () => _createVNode(_Fragment, null, [slots.default?.() ?? props.text, !props.hideSlider && _createVNode(\"div\", {\n          \"ref\": sliderEl,\n          \"class\": ['v-tab__slider', sliderColorClasses.value],\n          \"style\": sliderColorStyles.value\n        }, null)])\n      });\n    });\n    return forwardRefs({}, rootEl);\n  }\n\n});","map":{"version":3,"mappings":"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","names":["makeVBtnProps","VBtn","useTextColor","forwardRefs","computed","ref","VTabsSymbol","animate","genericComponent","omit","propsFactory","standardEasing","useRender","makeVTabProps","fixed","Boolean","sliderColor","String","hideSlider","direction","type","default","selectedClass","variant","VTab","name","props","setup","_ref","slots","attrs","textColorClasses","sliderColorClasses","textColorStyles","sliderColorStyles","rootEl","sliderEl","isHorizontal","isSelected","value","group","updateSlider","_ref2","prevEl","$el","parentElement","querySelector","nextEl","color","getComputedStyle","prevBox","getBoundingClientRect","nextBox","xy","XY","rightBottom","widthHeight","prevPos","nextPos","delta","origin","Math","sign","size","abs","scale","max","initialScale","sigma","backgroundColor","transform","transformOrigin","Array","fill","duration","easing","btnProps","filterProps","class","style","undefined","text","_createVNode"],"sources":["../../../src/components/VTabs/VTab.tsx"],"sourcesContent":["// Styles\nimport './VTab.sass'\n\n// Components\nimport { makeVBtnProps, VBtn } from '@/components/VBtn/VBtn'\n\n// Composables\nimport { useTextColor } from '@/composables/color'\nimport { forwardRefs } from '@/composables/forwardRefs'\n\n// Utilities\nimport { computed, ref } from 'vue'\nimport { VTabsSymbol } from './shared'\nimport { animate, genericComponent, omit, propsFactory, standardEasing, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { VBtnSlots } from '@/components/VBtn/VBtn'\n\nexport const makeVTabProps = propsFactory({\n  fixed: Boolean,\n\n  sliderColor: String,\n  hideSlider: Boolean,\n\n  direction: {\n    type: String as PropType<'horizontal' | 'vertical'>,\n    default: 'horizontal',\n  },\n\n  ...omit(makeVBtnProps({\n    selectedClass: 'v-tab--selected',\n    variant: 'text' as const,\n  }), [\n    'active',\n    'block',\n    'flat',\n    'location',\n    'position',\n    'symbol',\n  ]),\n}, 'VTab')\n\nexport const VTab = genericComponent<VBtnSlots>()({\n  name: 'VTab',\n\n  props: makeVTabProps(),\n\n  setup (props, { slots, attrs }) {\n    const { textColorClasses: sliderColorClasses, textColorStyles: sliderColorStyles } = useTextColor(props, 'sliderColor')\n\n    const rootEl = ref<VBtn>()\n    const sliderEl = ref<HTMLElement>()\n\n    const isHorizontal = computed(() => props.direction === 'horizontal')\n    const isSelected = computed(() => rootEl.value?.group?.isSelected.value ?? false)\n\n    function updateSlider ({ value }: { value: boolean }) {\n      if (value) {\n        const prevEl: HTMLElement | undefined = rootEl.value?.$el.parentElement?.querySelector('.v-tab--selected .v-tab__slider')\n        const nextEl = sliderEl.value\n\n        if (!prevEl || !nextEl) return\n\n        const color = getComputedStyle(prevEl).color\n\n        const prevBox = prevEl.getBoundingClientRect()\n        const nextBox = nextEl.getBoundingClientRect()\n\n        const xy = isHorizontal.value ? 'x' : 'y'\n        const XY = isHorizontal.value ? 'X' : 'Y'\n        const rightBottom = isHorizontal.value ? 'right' : 'bottom'\n        const widthHeight = isHorizontal.value ? 'width' : 'height'\n\n        const prevPos = prevBox[xy]\n        const nextPos = nextBox[xy]\n        const delta = prevPos > nextPos\n          ? prevBox[rightBottom] - nextBox[rightBottom]\n          : prevBox[xy] - nextBox[xy]\n        const origin =\n          Math.sign(delta) > 0 ? (isHorizontal.value ? 'right' : 'bottom')\n          : Math.sign(delta) < 0 ? (isHorizontal.value ? 'left' : 'top')\n          : 'center'\n        const size = Math.abs(delta) + (Math.sign(delta) < 0 ? prevBox[widthHeight] : nextBox[widthHeight])\n        const scale = size / Math.max(prevBox[widthHeight], nextBox[widthHeight]) || 0\n        const initialScale = prevBox[widthHeight] / nextBox[widthHeight] || 0\n\n        const sigma = 1.5\n        animate(nextEl, {\n          backgroundColor: [color, 'currentcolor'],\n          transform: [\n            `translate${XY}(${delta}px) scale${XY}(${initialScale})`,\n            `translate${XY}(${delta / sigma}px) scale${XY}(${(scale - 1) / sigma + 1})`,\n            'none',\n          ],\n          transformOrigin: Array(3).fill(origin),\n        }, {\n          duration: 225,\n          easing: standardEasing,\n        })\n      }\n    }\n\n    useRender(() => {\n      const btnProps = VBtn.filterProps(props)\n\n      return (\n        <VBtn\n          symbol={ VTabsSymbol }\n          ref={ rootEl }\n          class={[\n            'v-tab',\n            props.class,\n          ]}\n          style={ props.style }\n          tabindex={ isSelected.value ? 0 : -1 }\n          role=\"tab\"\n          aria-selected={ String(isSelected.value) }\n          active={ false }\n          { ...btnProps }\n          { ...attrs }\n          block={ props.fixed }\n          maxWidth={ props.fixed ? 300 : undefined }\n          onGroup:selected={ updateSlider }\n        >\n          {{\n            ...slots,\n            default: () => (\n              <>\n                { slots.default?.() ?? props.text }\n\n                { !props.hideSlider && (\n                  <div\n                    ref={ sliderEl }\n                    class={[\n                      'v-tab__slider',\n                      sliderColorClasses.value,\n                    ]}\n                    style={ sliderColorStyles.value }\n                  />\n                )}\n              </>\n            ),\n          }}\n        </VBtn>\n      )\n    })\n\n    return forwardRefs({}, rootEl)\n  },\n})\n\nexport type VTab = InstanceType<typeof VTab>\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { mergeProps as _mergeProps, createVNode as _createVNode } from \"vue\"; // Composables\n\nimport { useTextColor } from \"../../composables/color.js\";\nimport { makeComponentProps } from \"../../composables/component.js\";\nimport { makeRouterProps, useLink } from \"../../composables/router.js\";\nimport { makeTagProps } from \"../../composables/tag.js\"; // Utilities\n\nimport { computed } from 'vue';\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.js\";\nexport const makeVBreadcrumbsItemProps = propsFactory({\n  active: Boolean,\n  activeClass: String,\n  activeColor: String,\n  color: String,\n  disabled: Boolean,\n  title: String,\n  ...makeComponentProps(),\n  ...makeRouterProps(),\n  ...makeTagProps({\n    tag: 'li'\n  })\n}, 'VBreadcrumbsItem');\nexport const VBreadcrumbsItem = genericComponent()({\n  name: 'VBreadcrumbsItem',\n  props: makeVBreadcrumbsItemProps(),\n\n  setup(props, _ref) {\n    let {\n      slots,\n      attrs\n    } = _ref;\n    const link = useLink(props, attrs);\n    const isActive = computed(() => props.active || link.isActive?.value);\n    const color = computed(() => isActive.value ? props.activeColor : props.color);\n    const {\n      textColorClasses,\n      textColorStyles\n    } = useTextColor(color);\n    useRender(() => {\n      return _createVNode(props.tag, {\n        \"class\": ['v-breadcrumbs-item', {\n          'v-breadcrumbs-item--active': isActive.value,\n          'v-breadcrumbs-item--disabled': props.disabled,\n          [`${props.activeClass}`]: isActive.value && props.activeClass\n        }, textColorClasses.value, props.class],\n        \"style\": [textColorStyles.value, props.style],\n        \"aria-current\": isActive.value ? 'page' : undefined\n      }, {\n        default: () => [!link.isLink.value ? slots.default?.() ?? props.title : _createVNode(\"a\", _mergeProps({\n          \"class\": \"v-breadcrumbs-item--link\",\n          \"onClick\": link.navigate\n        }, link.linkProps), [slots.default?.() ?? props.title])]\n      });\n    });\n    return {};\n  }\n\n});","map":{"version":3,"mappings":"8EAAA;;AAAA,SACSA,YADT,QACqB,4BADrB;AACqB,SACZC,kBADY,QACM,gCADN;AACM,SAClBC,eADkB,EACDC,OADC,QACM,6BADN;AACM,SACxBC,YADwB,QACZ,0BADY,C,CAGjC;;AACA,SAASC,QAAT,QAAyB,KAAzB;AAA8B,SACrBC,gBADqB,EACHC,YADG,EACWC,SADX,QACoB,qBADpB;AAG9B,OAAO,MAAMC,yBAAyB,GAAGF,YAAY,CAAC;AACpDG,QAAM,EAAEC,OAD4C;AAEpDC,aAAW,EAAEC,MAFuC;AAGpDC,aAAW,EAAED,MAHuC;AAIpDE,OAAK,EAAEF,MAJ6C;AAKpDG,UAAQ,EAAEL,OAL0C;AAMpDM,OAAK,EAAEJ,MAN6C;AAQpD,KAAGZ,kBAAkB,EAR+B;AASpD,KAAGC,eAAe,EATkC;AAUpD,KAAGE,YAAY,CAAC;AAAEc,OAAG,EAAE;AAAP,GAAD;AAVqC,CAAD,EAWlD,kBAXkD,CAA9C;AAaP,OAAO,MAAMC,gBAAgB,GAAGb,gBAAgB,GAAG;AACjDc,MAAI,EAAE,kBAD2C;AAGjDC,OAAK,EAAEZ,yBAAyB,EAHiB;;AAKjDa,OAAKA,CAAED,KAAFC,EAAOC,IAAPD,EAA2B;AAAA,QAAlB;AAAEE,WAAF;AAASC;AAAT,QAAgBF,IAAE;AAC9B,UAAMG,IAAI,GAAGvB,OAAO,CAACkB,KAAD,EAAQI,KAAR,CAApB;AACA,UAAME,QAAQ,GAAGtB,QAAQ,CAAC,MAAMgB,KAAK,CAACX,MAANW,IAAgBK,IAAI,CAACC,QAALD,EAAeE,KAAtC,CAAzB;AACA,UAAMb,KAAK,GAAGV,QAAQ,CAAC,MAAMsB,QAAQ,CAACC,KAATD,GAAiBN,KAAK,CAACP,WAAvBa,GAAqCN,KAAK,CAACN,KAAlD,CAAtB;AAEA,UAAM;AAAEc,sBAAF;AAAoBC;AAApB,QAAwC9B,YAAY,CAACe,KAAD,CAA1D;AAEAP,aAAS,CAAC,MAAM;AACd;AAAA,iBAEW,CACL,oBADK,EAEL;AACE,wCAA8BmB,QAAQ,CAACC,KADzC;AAEE,0CAAgCP,KAAK,CAACL,QAFxC;AAGE,WAAC,GAAGK,KAAK,CAACT,WAAW,EAArB,GAA0Be,QAAQ,CAACC,KAATD,IAAkBN,KAAK,CAACT;AAHpD,SAFK,EAOLiB,gBAAgB,CAACD,KAPZ,EAQLP,KAAK,CAACU,KARD,CAFX;AAWK,iBACM,CACLD,eAAe,CAACF,KADX,EAELP,KAAK,CAACW,KAFD,CAZX;AAeK,wBACcL,QAAQ,CAACC,KAATD,GAAiB,MAAjBA,GAA0BM;AAhB7C,SAgBsD;AAAAC,wBAEhD,CAACR,IAAI,CAACS,MAALT,CAAYE,KAAb,GAAqBJ,KAAK,CAACU,OAANV,QAAqBH,KAAK,CAACJ,KAAhD,GAAqDmB;AAAA;AAAA,qBAGzCV,IAAI,CAACW;AAHoC,WAI9CX,IAAI,CAACY,SAJyC,GAIhC,CAEjBd,KAAK,CAACU,OAANV,QAAqBH,KAAK,CAACJ,KAFV,CAJgC,CAFL;AAAA,OAhBtD;AA6BD,KA9BQ,CAATT;AA+BA,WAAO,EAAP;AACF;;AA5CiD,CAAH,CAAzC","names":["useTextColor","makeComponentProps","makeRouterProps","useLink","makeTagProps","computed","genericComponent","propsFactory","useRender","makeVBreadcrumbsItemProps","active","Boolean","activeClass","String","activeColor","color","disabled","title","tag","VBreadcrumbsItem","name","props","setup","_ref","slots","attrs","link","isActive","value","textColorClasses","textColorStyles","class","style","undefined","default","isLink","_createVNode","navigate","linkProps"],"sources":["../../../src/components/VBreadcrumbs/VBreadcrumbsItem.tsx"],"sourcesContent":["// Composables\nimport { useTextColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { makeRouterProps, useLink } from '@/composables/router'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { computed } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVBreadcrumbsItemProps = propsFactory({\n  active: Boolean,\n  activeClass: String,\n  activeColor: String,\n  color: String,\n  disabled: Boolean,\n  title: String,\n\n  ...makeComponentProps(),\n  ...makeRouterProps(),\n  ...makeTagProps({ tag: 'li' }),\n}, 'VBreadcrumbsItem')\n\nexport const VBreadcrumbsItem = genericComponent()({\n  name: 'VBreadcrumbsItem',\n\n  props: makeVBreadcrumbsItemProps(),\n\n  setup (props, { slots, attrs }) {\n    const link = useLink(props, attrs)\n    const isActive = computed(() => props.active || link.isActive?.value)\n    const color = computed(() => isActive.value ? props.activeColor : props.color)\n\n    const { textColorClasses, textColorStyles } = useTextColor(color)\n\n    useRender(() => {\n      return (\n        <props.tag\n          class={[\n            'v-breadcrumbs-item',\n            {\n              'v-breadcrumbs-item--active': isActive.value,\n              'v-breadcrumbs-item--disabled': props.disabled,\n              [`${props.activeClass}`]: isActive.value && props.activeClass,\n            },\n            textColorClasses.value,\n            props.class,\n          ]}\n          style={[\n            textColorStyles.value,\n            props.style,\n          ]}\n          aria-current={ isActive.value ? 'page' : undefined }\n        >\n          { !link.isLink.value ? slots.default?.() ?? props.title : (\n            <a\n              class=\"v-breadcrumbs-item--link\"\n              onClick={ link.navigate }\n              { ...link.linkProps }\n            >\n              { slots.default?.() ?? props.title }\n            </a>\n          )}\n        </props.tag>\n      )\n    })\n    return {}\n  },\n})\n\nexport type VBreadcrumbsItem = InstanceType<typeof VBreadcrumbsItem>\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\n// Utilities\nimport { computed, inject, provide, shallowRef } from 'vue'; // Types\n// Depth\n\nexport var DepthKey = Symbol.for('vuetify:depth');\nexport function useDepth(hasPrepend) {\n  var parent = inject(DepthKey, shallowRef(-1));\n  var depth = computed(function () {\n    return parent.value + 1 + (hasPrepend !== null && hasPrepend !== void 0 && hasPrepend.value ? 1 : 0);\n  });\n  provide(DepthKey, depth);\n  return depth;\n} // List\n\nexport var ListKey = Symbol.for('vuetify:list');\nexport function createList() {\n  var parent = inject(ListKey, {\n    hasPrepend: shallowRef(false),\n    updateHasPrepend: function updateHasPrepend() {\n      return null;\n    }\n  });\n  var data = {\n    hasPrepend: shallowRef(false),\n    updateHasPrepend: function updateHasPrepend(value) {\n      if (value) data.hasPrepend.value = value;\n    }\n  };\n  provide(ListKey, data);\n  return parent;\n}\nexport function useList() {\n  return inject(ListKey, null);\n}","map":{"version":3,"mappings":";;;AAAA;AACA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,OAA3B,EAAoCC,UAApC,QAAsD,KAAtD,C,CAEA;AAGA;;AACA,OAAO,IAAMC,QAAmC,GAAGC,MAAM,CAACC,GAAPD,CAAW,eAAXA,CAA5C;AAEP,OAAO,SAASE,QAAT,CAAmBC,UAAnB,EAA8C;AACnD,MAAMC,MAAM,GAAGR,MAAM,CAACG,QAAD,EAAWD,UAAU,CAAC,CAAC,CAAF,CAArB,CAArB;AAEA,MAAMO,KAAK,GAAGV,QAAQ,CAAC;AAAA,WAAMS,MAAM,CAACE,KAAPF,GAAe,CAAfA,IAAoBD,UAAU,SAAVA,cAAU,WAAVA,cAAU,CAAEG,KAAZH,GAAoB,CAApBA,GAAwB,CAA5CC,CAAN;AAAA,GAAD,CAAtB;AAEAP,SAAO,CAACE,QAAD,EAAWM,KAAX,CAAPR;AAEA,SAAOQ,KAAP;AACF,C,CAEA;;AACA,OAAO,IAAME,OAGX,GAAGP,MAAM,CAACC,GAAPD,CAAW,cAAXA,CAHE;AAKP,OAAO,SAASQ,UAAT,GAAuB;AAC5B,MAAMJ,MAAM,GAAGR,MAAM,CAACW,OAAD,EAAU;AAAEJ,cAAU,EAAEL,UAAU,CAAC,KAAD,CAAxB;AAAiCW,oBAAgB,EAAEA;AAAAA,aAAM,IAANA;AAAAA;AAAnD,GAAV,CAArB;AAEA,MAAMC,IAAI,GAAG;AACXP,cAAU,EAAEL,UAAU,CAAC,KAAD,CADX;AAEXW,oBAAgB,EAAGH,+BAAc,EAAK;AACpC,UAAIA,KAAJ,EAAWI,IAAI,CAACP,UAALO,CAAgBJ,KAAhBI,GAAwBJ,KAAxBI;AACb;AAJW,GAAb;AAOAb,SAAO,CAACU,OAAD,EAAUG,IAAV,CAAPb;AAEA,SAAOO,MAAP;AACF;AAEA,OAAO,SAASO,OAAT,GAAoB;AACzB,SAAOf,MAAM,CAACW,OAAD,EAAU,IAAV,CAAb;AACF","names":["computed","inject","provide","shallowRef","DepthKey","Symbol","for","useDepth","hasPrepend","parent","depth","value","ListKey","createList","updateHasPrepend","data","useList"],"sources":["../../../src/components/VList/list.ts"],"sourcesContent":["// Utilities\nimport { computed, inject, provide, shallowRef } from 'vue'\n\n// Types\nimport type { InjectionKey, Ref } from 'vue'\n\n// Depth\nexport const DepthKey: InjectionKey<Ref<number>> = Symbol.for('vuetify:depth')\n\nexport function useDepth (hasPrepend?: Ref<boolean>) {\n  const parent = inject(DepthKey, shallowRef(-1))\n\n  const depth = computed(() => parent.value + 1 + (hasPrepend?.value ? 1 : 0))\n\n  provide(DepthKey, depth)\n\n  return depth\n}\n\n// List\nexport const ListKey: InjectionKey<{\n  hasPrepend: Ref<boolean>\n  updateHasPrepend: (value: boolean) => void\n}> = Symbol.for('vuetify:list')\n\nexport function createList () {\n  const parent = inject(ListKey, { hasPrepend: shallowRef(false), updateHasPrepend: () => null })\n\n  const data = {\n    hasPrepend: shallowRef(false),\n    updateHasPrepend: (value: boolean) => {\n      if (value) data.hasPrepend.value = value\n    },\n  }\n\n  provide(ListKey, data)\n\n  return parent\n}\n\nexport function useList () {\n  return inject(ListKey, null)\n}\n"]},"metadata":{},"sourceType":"module"}
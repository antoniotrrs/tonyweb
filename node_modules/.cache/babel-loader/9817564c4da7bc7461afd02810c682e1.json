{"ast":null,"code":"// Utilities\nimport { onBeforeUpdate, ref } from 'vue'; // Types\n\nexport function useRefs() {\n  const refs = ref([]);\n  onBeforeUpdate(() => refs.value = []);\n\n  function updateRef(e, i) {\n    refs.value[i] = e;\n  }\n\n  return {\n    refs,\n    updateRef\n  };\n}","map":{"version":3,"mappings":"AAAA;AACA,SAASA,cAAT,EAAyBC,GAAzB,QAAoC,KAApC,C,CAEA;;AAGA,OAAO,SAASC,OAAT,GAAmC;AACxC,QAAMC,IAAI,GAAGF,GAAG,CAAoB,EAApB,CAAhB;AAEAD,gBAAc,CAAC,MAAOG,IAAI,CAACC,KAALD,GAAa,EAArB,CAAdH;;AAEA,WAASK,SAAT,CAAoBC,CAApB,EAA4BC,CAA5B,EAAuC;AACrCJ,QAAI,CAACC,KAALD,CAAWI,CAAXJ,IAAgBG,CAAhBH;AACF;;AAEA,SAAO;AAAEA,QAAF;AAAQE;AAAR,GAAP;AACF","names":["onBeforeUpdate","ref","useRefs","refs","value","updateRef","e","i"],"sources":["../../src/composables/refs.ts"],"sourcesContent":["// Utilities\nimport { onBeforeUpdate, ref } from 'vue'\n\n// Types\nimport type { Ref } from 'vue'\n\nexport function useRefs <T extends {}> () {\n  const refs = ref<(T | undefined)[]>([]) as Ref<(T | undefined)[]>\n\n  onBeforeUpdate(() => (refs.value = []))\n\n  function updateRef (e: any, i: number) {\n    refs.value[i] = e\n  }\n\n  return { refs, updateRef }\n}\n"]},"metadata":{},"sourceType":"module"}
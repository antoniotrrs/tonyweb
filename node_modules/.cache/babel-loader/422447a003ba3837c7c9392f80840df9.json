{"ast":null,"code":"import { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\"; // Styles\n\nimport \"./VAlert.css\"; // Components\n\nimport { VAlertTitle } from \"./VAlertTitle.js\";\nimport { VBtn } from \"../VBtn/index.js\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.js\";\nimport { VIcon } from \"../VIcon/index.js\"; // Composables\n\nimport { useTextColor } from \"../../composables/color.js\";\nimport { makeComponentProps } from \"../../composables/component.js\";\nimport { makeDensityProps, useDensity } from \"../../composables/density.js\";\nimport { makeDimensionProps, useDimension } from \"../../composables/dimensions.js\";\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.js\";\nimport { IconValue } from \"../../composables/icons.js\";\nimport { useLocale } from \"../../composables/locale.js\";\nimport { makeLocationProps, useLocation } from \"../../composables/location.js\";\nimport { makePositionProps, usePosition } from \"../../composables/position.js\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.js\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.js\";\nimport { makeTagProps } from \"../../composables/tag.js\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.js\";\nimport { genOverlays, makeVariantProps, useVariant } from \"../../composables/variant.js\"; // Utilities\n\nimport { computed, toRef } from 'vue';\nimport { genericComponent, propsFactory } from \"../../util/index.js\"; // Types\n\nconst allowedTypes = ['success', 'info', 'warning', 'error'];\nexport const makeVAlertProps = propsFactory({\n  border: {\n    type: [Boolean, String],\n    validator: val => {\n      return typeof val === 'boolean' || ['top', 'end', 'bottom', 'start'].includes(val);\n    }\n  },\n  borderColor: String,\n  closable: Boolean,\n  closeIcon: {\n    type: IconValue,\n    default: '$close'\n  },\n  closeLabel: {\n    type: String,\n    default: '$vuetify.close'\n  },\n  icon: {\n    type: [Boolean, String, Function, Object],\n    default: null\n  },\n  modelValue: {\n    type: Boolean,\n    default: true\n  },\n  prominent: Boolean,\n  title: String,\n  text: String,\n  type: {\n    type: String,\n    validator: val => allowedTypes.includes(val)\n  },\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n  ...makeDimensionProps(),\n  ...makeElevationProps(),\n  ...makeLocationProps(),\n  ...makePositionProps(),\n  ...makeRoundedProps(),\n  ...makeTagProps(),\n  ...makeThemeProps(),\n  ...makeVariantProps({\n    variant: 'flat'\n  })\n}, 'VAlert');\nexport const VAlert = genericComponent()({\n  name: 'VAlert',\n  props: makeVAlertProps(),\n  emits: {\n    'click:close': e => true,\n    'update:modelValue': value => true\n  },\n\n  setup(props, _ref) {\n    let {\n      emit,\n      slots\n    } = _ref;\n    const isActive = useProxiedModel(props, 'modelValue');\n    const icon = computed(() => {\n      if (props.icon === false) return undefined;\n      if (!props.type) return props.icon;\n      return props.icon ?? `$${props.type}`;\n    });\n    const variantProps = computed(() => ({\n      color: props.color ?? props.type,\n      variant: props.variant\n    }));\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      colorClasses,\n      colorStyles,\n      variantClasses\n    } = useVariant(variantProps);\n    const {\n      densityClasses\n    } = useDensity(props);\n    const {\n      dimensionStyles\n    } = useDimension(props);\n    const {\n      elevationClasses\n    } = useElevation(props);\n    const {\n      locationStyles\n    } = useLocation(props);\n    const {\n      positionClasses\n    } = usePosition(props);\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const {\n      textColorClasses,\n      textColorStyles\n    } = useTextColor(toRef(props, 'borderColor'));\n    const {\n      t\n    } = useLocale();\n    const closeProps = computed(() => ({\n      'aria-label': t(props.closeLabel),\n\n      onClick(e) {\n        isActive.value = false;\n        emit('click:close', e);\n      }\n\n    }));\n    return () => {\n      const hasPrepend = !!(slots.prepend || icon.value);\n      const hasTitle = !!(slots.title || props.title);\n      const hasClose = !!(slots.close || props.closable);\n      return isActive.value && _createVNode(props.tag, {\n        \"class\": ['v-alert', props.border && {\n          'v-alert--border': !!props.border,\n          [`v-alert--border-${props.border === true ? 'start' : props.border}`]: true\n        }, {\n          'v-alert--prominent': props.prominent\n        }, themeClasses.value, colorClasses.value, densityClasses.value, elevationClasses.value, positionClasses.value, roundedClasses.value, variantClasses.value, props.class],\n        \"style\": [colorStyles.value, dimensionStyles.value, locationStyles.value, props.style],\n        \"role\": \"alert\"\n      }, {\n        default: () => [genOverlays(false, 'v-alert'), props.border && _createVNode(\"div\", {\n          \"key\": \"border\",\n          \"class\": ['v-alert__border', textColorClasses.value],\n          \"style\": textColorStyles.value\n        }, null), hasPrepend && _createVNode(\"div\", {\n          \"key\": \"prepend\",\n          \"class\": \"v-alert__prepend\"\n        }, [!slots.prepend ? _createVNode(VIcon, {\n          \"key\": \"prepend-icon\",\n          \"density\": props.density,\n          \"icon\": icon.value,\n          \"size\": props.prominent ? 44 : 28\n        }, null) : _createVNode(VDefaultsProvider, {\n          \"key\": \"prepend-defaults\",\n          \"disabled\": !icon.value,\n          \"defaults\": {\n            VIcon: {\n              density: props.density,\n              icon: icon.value,\n              size: props.prominent ? 44 : 28\n            }\n          }\n        }, slots.prepend)]), _createVNode(\"div\", {\n          \"class\": \"v-alert__content\"\n        }, [hasTitle && _createVNode(VAlertTitle, {\n          \"key\": \"title\"\n        }, {\n          default: () => [slots.title?.() ?? props.title]\n        }), slots.text?.() ?? props.text, slots.default?.()]), slots.append && _createVNode(\"div\", {\n          \"key\": \"append\",\n          \"class\": \"v-alert__append\"\n        }, [slots.append()]), hasClose && _createVNode(\"div\", {\n          \"key\": \"close\",\n          \"class\": \"v-alert__close\"\n        }, [!slots.close ? _createVNode(VBtn, _mergeProps({\n          \"key\": \"close-btn\",\n          \"icon\": props.closeIcon,\n          \"size\": \"x-small\",\n          \"variant\": \"text\"\n        }, closeProps.value), null) : _createVNode(VDefaultsProvider, {\n          \"key\": \"close-defaults\",\n          \"defaults\": {\n            VBtn: {\n              icon: props.closeIcon,\n              size: 'x-small',\n              variant: 'text'\n            }\n          }\n        }, {\n          default: () => [slots.close?.({\n            props: closeProps.value\n          })]\n        })])]\n      });\n    };\n  }\n\n});","map":{"version":3,"mappings":"8EAAA;;AACA,sB,CAEA;;AAAA,SACSA,WADT,QACoB,kBADpB;AACoB,SACXC,IADW,QACP,kBADO;AACP,SACJC,iBADI,QACa,+BADb;AACa,SACjBC,KADiB,QACZ,mBADY,C,CAG1B;;AAAA,SACSC,YADT,QACqB,4BADrB;AACqB,SACZC,kBADY,QACM,gCADN;AACM,SAClBC,gBADkB,EACAC,UADA,QACU,8BADV;AACU,SAC5BC,kBAD4B,EACRC,YADQ,QACI,iCADJ;AACI,SAChCC,kBADgC,EACZC,YADY,QACA,gCADA;AACA,SAChCC,SADgC,QACvB,4BADuB;AACvB,SACTC,SADS,QACA,6BADA;AACA,SACTC,iBADS,EACUC,WADV,QACqB,+BADrB;AACqB,SAC9BC,iBAD8B,EACXC,WADW,QACA,+BADA;AACA,SAC9BC,eAD8B,QACf,mCADe;AACf,SACfC,gBADe,EACGC,UADH,QACa,8BADb;AACa,SAC5BC,YAD4B,QAChB,0BADgB;AAChB,SACZC,cADY,EACIC,YADJ,QACgB,4BADhB;AACgB,SAC5BC,WAD4B,EACfC,gBADe,EACGC,UADH,QACa,8BADb,C,CAGrC;;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,KAAhC;AAAqC,SAC5BC,gBAD4B,EACVC,YADU,QACE,qBADF,C,CAGrC;;AAGA,MAAMC,YAAY,GAAG,CAAC,SAAD,EAAY,MAAZ,EAAoB,SAApB,EAA+B,OAA/B,CAArB;AAIA,OAAO,MAAMC,eAAe,GAAGF,YAAY,CAAC;AAC1CG,QAAM,EAAE;AACNC,QAAI,EAAE,CAACC,OAAD,EAAUC,MAAV,CADA;AAENC,aAAS,EAAGC,GAAqB,IAAK;AACpC,aAAO,OAAOA,GAAP,KAAe,SAAf,IAA4B,CACjC,KADiC,EAEjC,KAFiC,EAGjC,QAHiC,EAIjC,OAJiC,EAKjCC,QALiC,CAKxBD,GALwB,CAAnC;AAMF;AATM,GADkC;AAY1CE,aAAW,EAAEJ,MAZ6B;AAa1CK,UAAQ,EAAEN,OAbgC;AAc1CO,WAAS,EAAE;AACTR,QAAI,EAAEtB,SADG;AAET+B,WAAO,EAAE;AAFA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","names":["VAlertTitle","VBtn","VDefaultsProvider","VIcon","useTextColor","makeComponentProps","makeDensityProps","useDensity","makeDimensionProps","useDimension","makeElevationProps","useElevation","IconValue","useLocale","makeLocationProps","useLocation","makePositionProps","usePosition","useProxiedModel","makeRoundedProps","useRounded","makeTagProps","makeThemeProps","provideTheme","genOverlays","makeVariantProps","useVariant","computed","toRef","genericComponent","propsFactory","allowedTypes","makeVAlertProps","border","type","Boolean","String","validator","val","includes","borderColor","closable","closeIcon","default","closeLabel","icon","Function","Object","modelValue","prominent","title","text","variant","VAlert","name","props","emits","e","value","setup","_ref","emit","slots","isActive","undefined","variantProps","color","themeClasses","colorClasses","colorStyles","variantClasses","densityClasses","dimensionStyles","elevationClasses","locationStyles","positionClasses","roundedClasses","textColorClasses","textColorStyles","t","closeProps","onClick","hasPrepend","prepend","hasTitle","hasClose","close","_createVNode","class","style","density","size","append"],"sources":["../../../src/components/VAlert/VAlert.tsx"],"sourcesContent":["// Styles\nimport './VAlert.sass'\n\n// Components\nimport { VAlertTitle } from './VAlertTitle'\nimport { VBtn } from '@/components/VBtn'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { useTextColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { IconValue } from '@/composables/icons'\nimport { useLocale } from '@/composables/locale'\nimport { makeLocationProps, useLocation } from '@/composables/location'\nimport { makePositionProps, usePosition } from '@/composables/position'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { genOverlays, makeVariantProps, useVariant } from '@/composables/variant'\n\n// Utilities\nimport { computed, toRef } from 'vue'\nimport { genericComponent, propsFactory } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\nconst allowedTypes = ['success', 'info', 'warning', 'error'] as const\n\ntype ContextualType = typeof allowedTypes[number]\n\nexport const makeVAlertProps = propsFactory({\n  border: {\n    type: [Boolean, String] as PropType<boolean | 'top' | 'end' | 'bottom' | 'start'>,\n    validator: (val: boolean | string) => {\n      return typeof val === 'boolean' || [\n        'top',\n        'end',\n        'bottom',\n        'start',\n      ].includes(val)\n    },\n  },\n  borderColor: String,\n  closable: Boolean,\n  closeIcon: {\n    type: IconValue,\n    default: '$close',\n  },\n  closeLabel: {\n    type: String,\n    default: '$vuetify.close',\n  },\n  icon: {\n    type: [Boolean, String, Function, Object] as PropType<false | IconValue>,\n    default: null,\n  },\n  modelValue: {\n    type: Boolean,\n    default: true,\n  },\n  prominent: Boolean,\n  title: String,\n  text: String,\n  type: {\n    type: String as PropType<ContextualType>,\n    validator: (val: ContextualType) => allowedTypes.includes(val),\n  },\n\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n  ...makeDimensionProps(),\n  ...makeElevationProps(),\n  ...makeLocationProps(),\n  ...makePositionProps(),\n  ...makeRoundedProps(),\n  ...makeTagProps(),\n  ...makeThemeProps(),\n  ...makeVariantProps({ variant: 'flat' } as const),\n}, 'VAlert')\n\nexport type VAlertSlots = {\n  default: never\n  prepend: never\n  title: never\n  text: never\n  append: never\n  close: { props: Record<string, any> }\n}\n\nexport const VAlert = genericComponent<VAlertSlots>()({\n  name: 'VAlert',\n\n  props: makeVAlertProps(),\n\n  emits: {\n    'click:close': (e: MouseEvent) => true,\n    'update:modelValue': (value: boolean) => true,\n  },\n\n  setup (props, { emit, slots }) {\n    const isActive = useProxiedModel(props, 'modelValue')\n    const icon = computed(() => {\n      if (props.icon === false) return undefined\n      if (!props.type) return props.icon\n\n      return props.icon ?? `$${props.type}`\n    })\n    const variantProps = computed(() => ({\n      color: props.color ?? props.type,\n      variant: props.variant,\n    }))\n\n    const { themeClasses } = provideTheme(props)\n    const { colorClasses, colorStyles, variantClasses } = useVariant(variantProps)\n    const { densityClasses } = useDensity(props)\n    const { dimensionStyles } = useDimension(props)\n    const { elevationClasses } = useElevation(props)\n    const { locationStyles } = useLocation(props)\n    const { positionClasses } = usePosition(props)\n    const { roundedClasses } = useRounded(props)\n    const { textColorClasses, textColorStyles } = useTextColor(toRef(props, 'borderColor'))\n    const { t } = useLocale()\n\n    const closeProps = computed(() => ({\n      'aria-label': t(props.closeLabel),\n      onClick (e: MouseEvent) {\n        isActive.value = false\n\n        emit('click:close', e)\n      },\n    }))\n\n    return () => {\n      const hasPrepend = !!(slots.prepend || icon.value)\n      const hasTitle = !!(slots.title || props.title)\n      const hasClose = !!(slots.close || props.closable)\n\n      return isActive.value && (\n        <props.tag\n          class={[\n            'v-alert',\n            props.border && {\n              'v-alert--border': !!props.border,\n              [`v-alert--border-${props.border === true ? 'start' : props.border}`]: true,\n            },\n            {\n              'v-alert--prominent': props.prominent,\n            },\n            themeClasses.value,\n            colorClasses.value,\n            densityClasses.value,\n            elevationClasses.value,\n            positionClasses.value,\n            roundedClasses.value,\n            variantClasses.value,\n            props.class,\n          ]}\n          style={[\n            colorStyles.value,\n            dimensionStyles.value,\n            locationStyles.value,\n            props.style,\n          ]}\n          role=\"alert\"\n        >\n          { genOverlays(false, 'v-alert') }\n\n          { props.border && (\n            <div\n              key=\"border\"\n              class={[\n                'v-alert__border',\n                textColorClasses.value,\n              ]}\n              style={ textColorStyles.value }\n            />\n          )}\n\n          { hasPrepend && (\n            <div key=\"prepend\" class=\"v-alert__prepend\">\n              { !slots.prepend ? (\n                <VIcon\n                  key=\"prepend-icon\"\n                  density={ props.density }\n                  icon={ icon.value }\n                  size={ props.prominent ? 44 : 28 }\n                />\n              ) : (\n                <VDefaultsProvider\n                  key=\"prepend-defaults\"\n                  disabled={ !icon.value }\n                  defaults={{\n                    VIcon: {\n                      density: props.density,\n                      icon: icon.value,\n                      size: props.prominent ? 44 : 28,\n                    },\n                  }}\n                  v-slots:default={ slots.prepend }\n                />\n              )}\n            </div>\n          )}\n\n          <div class=\"v-alert__content\">\n            { hasTitle && (\n              <VAlertTitle key=\"title\">\n                { slots.title?.() ?? props.title }\n              </VAlertTitle>\n            )}\n\n            { slots.text?.() ?? props.text }\n\n            { slots.default?.() }\n          </div>\n\n          { slots.append && (\n            <div key=\"append\" class=\"v-alert__append\">\n              { slots.append() }\n            </div>\n          )}\n\n          { hasClose && (\n            <div key=\"close\" class=\"v-alert__close\">\n              { !slots.close ? (\n                <VBtn\n                  key=\"close-btn\"\n                  icon={ props.closeIcon }\n                  size=\"x-small\"\n                  variant=\"text\"\n                  { ...closeProps.value }\n                />\n              ) : (\n                <VDefaultsProvider\n                  key=\"close-defaults\"\n                  defaults={{\n                    VBtn: {\n                      icon: props.closeIcon,\n                      size: 'x-small',\n                      variant: 'text',\n                    },\n                  }}\n                >\n                  { slots.close?.({ props: closeProps.value }) }\n                </VDefaultsProvider>\n              )}\n            </div>\n          )}\n        </props.tag>\n      )\n    }\n  },\n})\n\nexport type VAlert = InstanceType<typeof VAlert>\n"]},"metadata":{},"sourceType":"module"}
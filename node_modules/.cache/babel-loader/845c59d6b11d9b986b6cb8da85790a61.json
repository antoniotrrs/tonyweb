{"ast":null,"code":"// Utilities\nimport { createRange, padStart } from \"../../../util/index.js\"; // Types\n\nfunction weekInfo(locale) {\n  // https://simplelocalize.io/data/locales/\n  // then `new Intl.Locale(...).getWeekInfo()`\n  const code = locale.slice(-2).toUpperCase();\n\n  switch (true) {\n    case locale === 'GB-alt-variant':\n      {\n        return {\n          firstDay: 0,\n          firstWeekSize: 4\n        };\n      }\n\n    case locale === '001':\n      {\n        return {\n          firstDay: 1,\n          firstWeekSize: 1\n        };\n      }\n\n    case `AG AS BD BR BS BT BW BZ CA CO DM DO ET GT GU HK HN ID IL IN JM JP KE\n    KH KR LA MH MM MO MT MX MZ NI NP PA PE PH PK PR PY SA SG SV TH TT TW UM US\n    VE VI WS YE ZA ZW`.includes(code):\n      {\n        return {\n          firstDay: 0,\n          firstWeekSize: 1\n        };\n      }\n\n    case `AI AL AM AR AU AZ BA BM BN BY CL CM CN CR CY EC GE HR KG KZ LB LK LV\n    MD ME MK MN MY NZ RO RS SI TJ TM TR UA UY UZ VN XK`.includes(code):\n      {\n        return {\n          firstDay: 1,\n          firstWeekSize: 1\n        };\n      }\n\n    case `AD AN AT AX BE BG CH CZ DE DK EE ES FI FJ FO FR GB GF GP GR HU IE IS\n    IT LI LT LU MC MQ NL NO PL RE RU SE SK SM VA`.includes(code):\n      {\n        return {\n          firstDay: 1,\n          firstWeekSize: 4\n        };\n      }\n\n    case `AE AF BH DJ DZ EG IQ IR JO KW LY OM QA SD SY`.includes(code):\n      {\n        return {\n          firstDay: 6,\n          firstWeekSize: 1\n        };\n      }\n\n    case code === 'MV':\n      {\n        return {\n          firstDay: 5,\n          firstWeekSize: 1\n        };\n      }\n\n    case code === 'PT':\n      {\n        return {\n          firstDay: 0,\n          firstWeekSize: 4\n        };\n      }\n\n    default:\n      return null;\n  }\n}\n\nfunction getWeekArray(date, locale, firstDayOfWeek) {\n  const weeks = [];\n  let currentWeek = [];\n  const firstDayOfMonth = startOfMonth(date);\n  const lastDayOfMonth = endOfMonth(date);\n  const first = firstDayOfWeek ?? weekInfo(locale)?.firstDay ?? 0;\n  const firstDayWeekIndex = (firstDayOfMonth.getDay() - first + 7) % 7;\n  const lastDayWeekIndex = (lastDayOfMonth.getDay() - first + 7) % 7;\n\n  for (let i = 0; i < firstDayWeekIndex; i++) {\n    const adjacentDay = new Date(firstDayOfMonth);\n    adjacentDay.setDate(adjacentDay.getDate() - (firstDayWeekIndex - i));\n    currentWeek.push(adjacentDay);\n  }\n\n  for (let i = 1; i <= lastDayOfMonth.getDate(); i++) {\n    const day = new Date(date.getFullYear(), date.getMonth(), i); // Add the day to the current week\n\n    currentWeek.push(day); // If the current week has 7 days, add it to the weeks array and start a new week\n\n    if (currentWeek.length === 7) {\n      weeks.push(currentWeek);\n      currentWeek = [];\n    }\n  }\n\n  for (let i = 1; i < 7 - lastDayWeekIndex; i++) {\n    const adjacentDay = new Date(lastDayOfMonth);\n    adjacentDay.setDate(adjacentDay.getDate() + i);\n    currentWeek.push(adjacentDay);\n  }\n\n  if (currentWeek.length > 0) {\n    weeks.push(currentWeek);\n  }\n\n  return weeks;\n}\n\nfunction startOfWeek(date, locale, firstDayOfWeek) {\n  const day = firstDayOfWeek ?? weekInfo(locale)?.firstDay ?? 0;\n  const d = new Date(date);\n\n  while (d.getDay() !== day) {\n    d.setDate(d.getDate() - 1);\n  }\n\n  return d;\n}\n\nfunction endOfWeek(date, locale) {\n  const d = new Date(date);\n  const lastDay = ((weekInfo(locale)?.firstDay ?? 0) + 6) % 7;\n\n  while (d.getDay() !== lastDay) {\n    d.setDate(d.getDate() + 1);\n  }\n\n  return d;\n}\n\nfunction startOfMonth(date) {\n  return new Date(date.getFullYear(), date.getMonth(), 1);\n}\n\nfunction endOfMonth(date) {\n  return new Date(date.getFullYear(), date.getMonth() + 1, 0);\n}\n\nfunction parseLocalDate(value) {\n  const parts = value.split('-').map(Number); // new Date() uses local time zone when passing individual date component values\n\n  return new Date(parts[0], parts[1] - 1, parts[2]);\n}\n\nconst _YYYMMDD = /^([12]\\d{3}-([1-9]|0[1-9]|1[0-2])-([1-9]|0[1-9]|[12]\\d|3[01]))$/;\n\nfunction date(value) {\n  if (value == null) return new Date();\n  if (value instanceof Date) return value;\n\n  if (typeof value === 'string') {\n    let parsed;\n\n    if (_YYYMMDD.test(value)) {\n      return parseLocalDate(value);\n    } else {\n      parsed = Date.parse(value);\n    }\n\n    if (!isNaN(parsed)) return new Date(parsed);\n  }\n\n  return null;\n}\n\nconst sundayJanuarySecond2000 = new Date(2000, 0, 2);\n\nfunction getWeekdays(locale, firstDayOfWeek) {\n  const daysFromSunday = firstDayOfWeek ?? weekInfo(locale)?.firstDay ?? 0;\n  return createRange(7).map(i => {\n    const weekday = new Date(sundayJanuarySecond2000);\n    weekday.setDate(sundayJanuarySecond2000.getDate() + daysFromSunday + i);\n    return new Intl.DateTimeFormat(locale, {\n      weekday: 'narrow'\n    }).format(weekday);\n  });\n}\n\nfunction format(value, formatString, locale, formats) {\n  const newDate = date(value) ?? new Date();\n  const customFormat = formats?.[formatString];\n\n  if (typeof customFormat === 'function') {\n    return customFormat(newDate, formatString, locale);\n  }\n\n  let options = {};\n\n  switch (formatString) {\n    case 'fullDate':\n      options = {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      };\n      break;\n\n    case 'fullDateWithWeekday':\n      options = {\n        weekday: 'long',\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      };\n      break;\n\n    case 'normalDate':\n      const day = newDate.getDate();\n      const month = new Intl.DateTimeFormat(locale, {\n        month: 'long'\n      }).format(newDate);\n      return `${day} ${month}`;\n\n    case 'normalDateWithWeekday':\n      options = {\n        weekday: 'short',\n        day: 'numeric',\n        month: 'short'\n      };\n      break;\n\n    case 'shortDate':\n      options = {\n        month: 'short',\n        day: 'numeric'\n      };\n      break;\n\n    case 'year':\n      options = {\n        year: 'numeric'\n      };\n      break;\n\n    case 'month':\n      options = {\n        month: 'long'\n      };\n      break;\n\n    case 'monthShort':\n      options = {\n        month: 'short'\n      };\n      break;\n\n    case 'monthAndYear':\n      options = {\n        month: 'long',\n        year: 'numeric'\n      };\n      break;\n\n    case 'monthAndDate':\n      options = {\n        month: 'long',\n        day: 'numeric'\n      };\n      break;\n\n    case 'weekday':\n      options = {\n        weekday: 'long'\n      };\n      break;\n\n    case 'weekdayShort':\n      options = {\n        weekday: 'short'\n      };\n      break;\n\n    case 'dayOfMonth':\n      return new Intl.NumberFormat(locale).format(newDate.getDate());\n\n    case 'hours12h':\n      options = {\n        hour: 'numeric',\n        hour12: true\n      };\n      break;\n\n    case 'hours24h':\n      options = {\n        hour: 'numeric',\n        hour12: false\n      };\n      break;\n\n    case 'minutes':\n      options = {\n        minute: 'numeric'\n      };\n      break;\n\n    case 'seconds':\n      options = {\n        second: 'numeric'\n      };\n      break;\n\n    case 'fullTime':\n      options = {\n        hour: 'numeric',\n        minute: 'numeric'\n      };\n      break;\n\n    case 'fullTime12h':\n      options = {\n        hour: 'numeric',\n        minute: 'numeric',\n        hour12: true\n      };\n      break;\n\n    case 'fullTime24h':\n      options = {\n        hour: 'numeric',\n        minute: 'numeric',\n        hour12: false\n      };\n      break;\n\n    case 'fullDateTime':\n      options = {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: 'numeric',\n        minute: 'numeric'\n      };\n      break;\n\n    case 'fullDateTime12h':\n      options = {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: 'numeric',\n        minute: 'numeric',\n        hour12: true\n      };\n      break;\n\n    case 'fullDateTime24h':\n      options = {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: 'numeric',\n        minute: 'numeric',\n        hour12: false\n      };\n      break;\n\n    case 'keyboardDate':\n      options = {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit'\n      };\n      break;\n\n    case 'keyboardDateTime':\n      options = {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: 'numeric',\n        minute: 'numeric'\n      };\n      return new Intl.DateTimeFormat(locale, options).format(newDate).replace(/, /g, ' ');\n\n    case 'keyboardDateTime12h':\n      options = {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: 'numeric',\n        minute: 'numeric',\n        hour12: true\n      };\n      return new Intl.DateTimeFormat(locale, options).format(newDate).replace(/, /g, ' ');\n\n    case 'keyboardDateTime24h':\n      options = {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: 'numeric',\n        minute: 'numeric',\n        hour12: false\n      };\n      return new Intl.DateTimeFormat(locale, options).format(newDate).replace(/, /g, ' ');\n\n    default:\n      options = customFormat ?? {\n        timeZone: 'UTC',\n        timeZoneName: 'short'\n      };\n  }\n\n  return new Intl.DateTimeFormat(locale, options).format(newDate);\n}\n\nfunction toISO(adapter, value) {\n  const date = adapter.toJsDate(value);\n  const year = date.getFullYear();\n  const month = padStart(String(date.getMonth() + 1), 2, '0');\n  const day = padStart(String(date.getDate()), 2, '0');\n  return `${year}-${month}-${day}`;\n}\n\nfunction parseISO(value) {\n  const [year, month, day] = value.split('-').map(Number);\n  return new Date(year, month - 1, day);\n}\n\nfunction addMinutes(date, amount) {\n  const d = new Date(date);\n  d.setMinutes(d.getMinutes() + amount);\n  return d;\n}\n\nfunction addHours(date, amount) {\n  const d = new Date(date);\n  d.setHours(d.getHours() + amount);\n  return d;\n}\n\nfunction addDays(date, amount) {\n  const d = new Date(date);\n  d.setDate(d.getDate() + amount);\n  return d;\n}\n\nfunction addWeeks(date, amount) {\n  const d = new Date(date);\n  d.setDate(d.getDate() + amount * 7);\n  return d;\n}\n\nfunction addMonths(date, amount) {\n  const d = new Date(date);\n  d.setDate(1);\n  d.setMonth(d.getMonth() + amount);\n  return d;\n}\n\nfunction getYear(date) {\n  return date.getFullYear();\n}\n\nfunction getMonth(date) {\n  return date.getMonth();\n}\n\nfunction getWeek(date, locale, firstDayOfWeek, firstWeekMinSize) {\n  const weekInfoFromLocale = weekInfo(locale);\n  const weekStart = firstDayOfWeek ?? weekInfoFromLocale?.firstDay ?? 0;\n  const minWeekSize = firstWeekMinSize ?? weekInfoFromLocale?.firstWeekSize ?? 1;\n\n  function firstWeekSize(year) {\n    const yearStart = new Date(year, 0, 1);\n    return 7 - getDiff(yearStart, startOfWeek(yearStart, locale, weekStart), 'days');\n  }\n\n  let year = getYear(date);\n  const currentWeekEnd = addDays(startOfWeek(date, locale, weekStart), 6);\n\n  if (year < getYear(currentWeekEnd) && firstWeekSize(year + 1) >= minWeekSize) {\n    year++;\n  }\n\n  const yearStart = new Date(year, 0, 1);\n  const size = firstWeekSize(year);\n  const d1w1 = size >= minWeekSize ? addDays(yearStart, size - 7) : addDays(yearStart, size);\n  return 1 + getDiff(date, d1w1, 'weeks');\n}\n\nfunction getDate(date) {\n  return date.getDate();\n}\n\nfunction getNextMonth(date) {\n  return new Date(date.getFullYear(), date.getMonth() + 1, 1);\n}\n\nfunction getPreviousMonth(date) {\n  return new Date(date.getFullYear(), date.getMonth() - 1, 1);\n}\n\nfunction getHours(date) {\n  return date.getHours();\n}\n\nfunction getMinutes(date) {\n  return date.getMinutes();\n}\n\nfunction startOfYear(date) {\n  return new Date(date.getFullYear(), 0, 1);\n}\n\nfunction endOfYear(date) {\n  return new Date(date.getFullYear(), 11, 31);\n}\n\nfunction isWithinRange(date, range) {\n  return isAfter(date, range[0]) && isBefore(date, range[1]);\n}\n\nfunction isValid(date) {\n  const d = new Date(date);\n  return d instanceof Date && !isNaN(d.getTime());\n}\n\nfunction isAfter(date, comparing) {\n  return date.getTime() > comparing.getTime();\n}\n\nfunction isAfterDay(date, comparing) {\n  return isAfter(startOfDay(date), startOfDay(comparing));\n}\n\nfunction isBefore(date, comparing) {\n  return date.getTime() < comparing.getTime();\n}\n\nfunction isEqual(date, comparing) {\n  return date.getTime() === comparing.getTime();\n}\n\nfunction isSameDay(date, comparing) {\n  return date.getDate() === comparing.getDate() && date.getMonth() === comparing.getMonth() && date.getFullYear() === comparing.getFullYear();\n}\n\nfunction isSameMonth(date, comparing) {\n  return date.getMonth() === comparing.getMonth() && date.getFullYear() === comparing.getFullYear();\n}\n\nfunction isSameYear(date, comparing) {\n  return date.getFullYear() === comparing.getFullYear();\n}\n\nfunction getDiff(date, comparing, unit) {\n  const d = new Date(date);\n  const c = new Date(comparing);\n\n  switch (unit) {\n    case 'years':\n      return d.getFullYear() - c.getFullYear();\n\n    case 'quarters':\n      return Math.floor((d.getMonth() - c.getMonth() + (d.getFullYear() - c.getFullYear()) * 12) / 4);\n\n    case 'months':\n      return d.getMonth() - c.getMonth() + (d.getFullYear() - c.getFullYear()) * 12;\n\n    case 'weeks':\n      return Math.floor((d.getTime() - c.getTime()) / (1000 * 60 * 60 * 24 * 7));\n\n    case 'days':\n      return Math.floor((d.getTime() - c.getTime()) / (1000 * 60 * 60 * 24));\n\n    case 'hours':\n      return Math.floor((d.getTime() - c.getTime()) / (1000 * 60 * 60));\n\n    case 'minutes':\n      return Math.floor((d.getTime() - c.getTime()) / (1000 * 60));\n\n    case 'seconds':\n      return Math.floor((d.getTime() - c.getTime()) / 1000);\n\n    default:\n      {\n        return d.getTime() - c.getTime();\n      }\n  }\n}\n\nfunction setHours(date, count) {\n  const d = new Date(date);\n  d.setHours(count);\n  return d;\n}\n\nfunction setMinutes(date, count) {\n  const d = new Date(date);\n  d.setMinutes(count);\n  return d;\n}\n\nfunction setMonth(date, count) {\n  const d = new Date(date);\n  d.setMonth(count);\n  return d;\n}\n\nfunction setDate(date, day) {\n  const d = new Date(date);\n  d.setDate(day);\n  return d;\n}\n\nfunction setYear(date, year) {\n  const d = new Date(date);\n  d.setFullYear(year);\n  return d;\n}\n\nfunction startOfDay(date) {\n  return new Date(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0, 0);\n}\n\nfunction endOfDay(date) {\n  return new Date(date.getFullYear(), date.getMonth(), date.getDate(), 23, 59, 59, 999);\n}\n\nexport class VuetifyDateAdapter {\n  constructor(options) {\n    this.locale = options.locale;\n    this.formats = options.formats;\n  }\n\n  date(value) {\n    return date(value);\n  }\n\n  toJsDate(date) {\n    return date;\n  }\n\n  toISO(date) {\n    return toISO(this, date);\n  }\n\n  parseISO(date) {\n    return parseISO(date);\n  }\n\n  addMinutes(date, amount) {\n    return addMinutes(date, amount);\n  }\n\n  addHours(date, amount) {\n    return addHours(date, amount);\n  }\n\n  addDays(date, amount) {\n    return addDays(date, amount);\n  }\n\n  addWeeks(date, amount) {\n    return addWeeks(date, amount);\n  }\n\n  addMonths(date, amount) {\n    return addMonths(date, amount);\n  }\n\n  getWeekArray(date, firstDayOfWeek) {\n    const firstDay = firstDayOfWeek !== undefined ? Number(firstDayOfWeek) : undefined;\n    return getWeekArray(date, this.locale, firstDay);\n  }\n\n  startOfWeek(date, firstDayOfWeek) {\n    const firstDay = firstDayOfWeek !== undefined ? Number(firstDayOfWeek) : undefined;\n    return startOfWeek(date, this.locale, firstDay);\n  }\n\n  endOfWeek(date) {\n    return endOfWeek(date, this.locale);\n  }\n\n  startOfMonth(date) {\n    return startOfMonth(date);\n  }\n\n  endOfMonth(date) {\n    return endOfMonth(date);\n  }\n\n  format(date, formatString) {\n    return format(date, formatString, this.locale, this.formats);\n  }\n\n  isEqual(date, comparing) {\n    return isEqual(date, comparing);\n  }\n\n  isValid(date) {\n    return isValid(date);\n  }\n\n  isWithinRange(date, range) {\n    return isWithinRange(date, range);\n  }\n\n  isAfter(date, comparing) {\n    return isAfter(date, comparing);\n  }\n\n  isAfterDay(date, comparing) {\n    return isAfterDay(date, comparing);\n  }\n\n  isBefore(date, comparing) {\n    return !isAfter(date, comparing) && !isEqual(date, comparing);\n  }\n\n  isSameDay(date, comparing) {\n    return isSameDay(date, comparing);\n  }\n\n  isSameMonth(date, comparing) {\n    return isSameMonth(date, comparing);\n  }\n\n  isSameYear(date, comparing) {\n    return isSameYear(date, comparing);\n  }\n\n  setMinutes(date, count) {\n    return setMinutes(date, count);\n  }\n\n  setHours(date, count) {\n    return setHours(date, count);\n  }\n\n  setMonth(date, count) {\n    return setMonth(date, count);\n  }\n\n  setDate(date, day) {\n    return setDate(date, day);\n  }\n\n  setYear(date, year) {\n    return setYear(date, year);\n  }\n\n  getDiff(date, comparing, unit) {\n    return getDiff(date, comparing, unit);\n  }\n\n  getWeekdays(firstDayOfWeek) {\n    const firstDay = firstDayOfWeek !== undefined ? Number(firstDayOfWeek) : undefined;\n    return getWeekdays(this.locale, firstDay);\n  }\n\n  getYear(date) {\n    return getYear(date);\n  }\n\n  getMonth(date) {\n    return getMonth(date);\n  }\n\n  getWeek(date, firstDayOfWeek, firstWeekMinSize) {\n    const firstDay = firstDayOfWeek !== undefined ? Number(firstDayOfWeek) : undefined;\n    return getWeek(date, this.locale, firstDay, firstWeekMinSize);\n  }\n\n  getDate(date) {\n    return getDate(date);\n  }\n\n  getNextMonth(date) {\n    return getNextMonth(date);\n  }\n\n  getPreviousMonth(date) {\n    return getPreviousMonth(date);\n  }\n\n  getHours(date) {\n    return getHours(date);\n  }\n\n  getMinutes(date) {\n    return getMinutes(date);\n  }\n\n  startOfDay(date) {\n    return startOfDay(date);\n  }\n\n  endOfDay(date) {\n    return endOfDay(date);\n  }\n\n  startOfYear(date) {\n    return startOfYear(date);\n  }\n\n  endOfYear(date) {\n    return endOfYear(date);\n  }\n\n}","map":{"version":3,"mappings":"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","names":["createRange","padStart","weekInfo","locale","code","slice","toUpperCase","firstDay","firstWeekSize","includes","getWeekArray","date","firstDayOfWeek","weeks","currentWeek","firstDayOfMonth","startOfMonth","lastDayOfMonth","endOfMonth","first","firstDayWeekIndex","getDay","lastDayWeekIndex","i","adjacentDay","Date","setDate","getDate","push","day","getFullYear","getMonth","length","startOfWeek","d","endOfWeek","lastDay","parseLocalDate","value","parts","split","map","Number","_YYYMMDD","parsed","test","parse","isNaN","sundayJanuarySecond2000","getWeekdays","daysFromSunday","weekday","Intl","DateTimeFormat","format","formatString","formats","newDate","customFormat","options","year","month","NumberFormat","hour","hour12","minute","second","replace","timeZone","timeZoneName","toISO","adapter","toJsDate","String","parseISO","addMinutes","amount","setMinutes","getMinutes","addHours","setHours","getHours","addDays","addWeeks","addMonths","setMonth","getYear","getWeek","firstWeekMinSize","weekInfoFromLocale","weekStart","minWeekSize","yearStart","getDiff","currentWeekEnd","size","d1w1","getNextMonth","getPreviousMonth","startOfYear","endOfYear","isWithinRange","range","isAfter","isBefore","isValid","getTime","comparing","isAfterDay","startOfDay","isEqual","isSameDay","isSameMonth","isSameYear","unit","c","Math","floor","count","setYear","setFullYear","endOfDay","VuetifyDateAdapter","constructor","undefined"],"sources":["../../../../src/composables/date/adapters/vuetify.ts"],"sourcesContent":["// Utilities\nimport { createRange, padStart } from '@/util'\n\n// Types\nimport type { DateAdapter } from '../DateAdapter'\n\ntype CustomDateFormat = Intl.DateTimeFormatOptions | ((date: Date, formatString: string, locale: string) => string)\n\nfunction weekInfo (locale: string): { firstDay: number, firstWeekSize: number } | null {\n  // https://simplelocalize.io/data/locales/\n  // then `new Intl.Locale(...).getWeekInfo()`\n  const code = locale.slice(-2).toUpperCase()\n  switch (true) {\n    case locale === 'GB-alt-variant': {\n      return { firstDay: 0, firstWeekSize: 4 }\n    }\n    case locale === '001': {\n      return { firstDay: 1, firstWeekSize: 1 }\n    }\n    case `AG AS BD BR BS BT BW BZ CA CO DM DO ET GT GU HK HN ID IL IN JM JP KE\n    KH KR LA MH MM MO MT MX MZ NI NP PA PE PH PK PR PY SA SG SV TH TT TW UM US\n    VE VI WS YE ZA ZW`.includes(code): {\n      return { firstDay: 0, firstWeekSize: 1 }\n    }\n    case `AI AL AM AR AU AZ BA BM BN BY CL CM CN CR CY EC GE HR KG KZ LB LK LV\n    MD ME MK MN MY NZ RO RS SI TJ TM TR UA UY UZ VN XK`.includes(code): {\n      return { firstDay: 1, firstWeekSize: 1 }\n    }\n    case `AD AN AT AX BE BG CH CZ DE DK EE ES FI FJ FO FR GB GF GP GR HU IE IS\n    IT LI LT LU MC MQ NL NO PL RE RU SE SK SM VA`.includes(code): {\n      return { firstDay: 1, firstWeekSize: 4 }\n    }\n    case `AE AF BH DJ DZ EG IQ IR JO KW LY OM QA SD SY`.includes(code): {\n      return { firstDay: 6, firstWeekSize: 1 }\n    }\n    case code === 'MV': {\n      return { firstDay: 5, firstWeekSize: 1 }\n    }\n    case code === 'PT': {\n      return { firstDay: 0, firstWeekSize: 4 }\n    }\n    default: return null\n  }\n}\n\nfunction getWeekArray (date: Date, locale: string, firstDayOfWeek?: number) {\n  const weeks = []\n  let currentWeek = []\n  const firstDayOfMonth = startOfMonth(date)\n  const lastDayOfMonth = endOfMonth(date)\n  const first = firstDayOfWeek ?? weekInfo(locale)?.firstDay ?? 0\n  const firstDayWeekIndex = (firstDayOfMonth.getDay() - first + 7) % 7\n  const lastDayWeekIndex = (lastDayOfMonth.getDay() - first + 7) % 7\n\n  for (let i = 0; i < firstDayWeekIndex; i++) {\n    const adjacentDay = new Date(firstDayOfMonth)\n    adjacentDay.setDate(adjacentDay.getDate() - (firstDayWeekIndex - i))\n    currentWeek.push(adjacentDay)\n  }\n\n  for (let i = 1; i <= lastDayOfMonth.getDate(); i++) {\n    const day = new Date(date.getFullYear(), date.getMonth(), i)\n\n    // Add the day to the current week\n    currentWeek.push(day)\n\n    // If the current week has 7 days, add it to the weeks array and start a new week\n    if (currentWeek.length === 7) {\n      weeks.push(currentWeek)\n      currentWeek = []\n    }\n  }\n\n  for (let i = 1; i < 7 - lastDayWeekIndex; i++) {\n    const adjacentDay = new Date(lastDayOfMonth)\n    adjacentDay.setDate(adjacentDay.getDate() + i)\n    currentWeek.push(adjacentDay)\n  }\n\n  if (currentWeek.length > 0) {\n    weeks.push(currentWeek)\n  }\n\n  return weeks\n}\n\nfunction startOfWeek (date: Date, locale: string, firstDayOfWeek?: number) {\n  const day = firstDayOfWeek ?? weekInfo(locale)?.firstDay ?? 0\n\n  const d = new Date(date)\n  while (d.getDay() !== day) {\n    d.setDate(d.getDate() - 1)\n  }\n  return d\n}\n\nfunction endOfWeek (date: Date, locale: string) {\n  const d = new Date(date)\n  const lastDay = ((weekInfo(locale)?.firstDay ?? 0) + 6) % 7\n  while (d.getDay() !== lastDay) {\n    d.setDate(d.getDate() + 1)\n  }\n  return d\n}\n\nfunction startOfMonth (date: Date) {\n  return new Date(date.getFullYear(), date.getMonth(), 1)\n}\n\nfunction endOfMonth (date: Date) {\n  return new Date(date.getFullYear(), date.getMonth() + 1, 0)\n}\n\nfunction parseLocalDate (value: string): Date {\n  const parts = value.split('-').map(Number)\n\n  // new Date() uses local time zone when passing individual date component values\n  return new Date(parts[0], parts[1] - 1, parts[2])\n}\n\nconst _YYYMMDD = /^([12]\\d{3}-([1-9]|0[1-9]|1[0-2])-([1-9]|0[1-9]|[12]\\d|3[01]))$/\n\nfunction date (value?: any): Date | null {\n  if (value == null) return new Date()\n\n  if (value instanceof Date) return value\n\n  if (typeof value === 'string') {\n    let parsed\n\n    if (_YYYMMDD.test(value)) {\n      return parseLocalDate(value)\n    } else {\n      parsed = Date.parse(value)\n    }\n\n    if (!isNaN(parsed)) return new Date(parsed)\n  }\n\n  return null\n}\n\nconst sundayJanuarySecond2000 = new Date(2000, 0, 2)\n\nfunction getWeekdays (locale: string, firstDayOfWeek?: number) {\n  const daysFromSunday = firstDayOfWeek ?? weekInfo(locale)?.firstDay ?? 0\n\n  return createRange(7).map(i => {\n    const weekday = new Date(sundayJanuarySecond2000)\n    weekday.setDate(sundayJanuarySecond2000.getDate() + daysFromSunday + i)\n    return new Intl.DateTimeFormat(locale, { weekday: 'narrow' }).format(weekday)\n  })\n}\n\nfunction format (\n  value: Date,\n  formatString: string,\n  locale: string,\n  formats?: Record<string, CustomDateFormat>\n): string {\n  const newDate = date(value) ?? new Date()\n  const customFormat = formats?.[formatString]\n\n  if (typeof customFormat === 'function') {\n    return customFormat(newDate, formatString, locale)\n  }\n\n  let options: Intl.DateTimeFormatOptions = {}\n  switch (formatString) {\n    case 'fullDate':\n      options = { year: 'numeric', month: 'long', day: 'numeric' }\n      break\n    case 'fullDateWithWeekday':\n      options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }\n      break\n    case 'normalDate':\n      const day = newDate.getDate()\n      const month = new Intl.DateTimeFormat(locale, { month: 'long' }).format(newDate)\n      return `${day} ${month}`\n    case 'normalDateWithWeekday':\n      options = { weekday: 'short', day: 'numeric', month: 'short' }\n      break\n    case 'shortDate':\n      options = { month: 'short', day: 'numeric' }\n      break\n    case 'year':\n      options = { year: 'numeric' }\n      break\n    case 'month':\n      options = { month: 'long' }\n      break\n    case 'monthShort':\n      options = { month: 'short' }\n      break\n    case 'monthAndYear':\n      options = { month: 'long', year: 'numeric' }\n      break\n    case 'monthAndDate':\n      options = { month: 'long', day: 'numeric' }\n      break\n    case 'weekday':\n      options = { weekday: 'long' }\n      break\n    case 'weekdayShort':\n      options = { weekday: 'short' }\n      break\n    case 'dayOfMonth':\n      return new Intl.NumberFormat(locale).format(newDate.getDate())\n    case 'hours12h':\n      options = { hour: 'numeric', hour12: true }\n      break\n    case 'hours24h':\n      options = { hour: 'numeric', hour12: false }\n      break\n    case 'minutes':\n      options = { minute: 'numeric' }\n      break\n    case 'seconds':\n      options = { second: 'numeric' }\n      break\n    case 'fullTime':\n      options = { hour: 'numeric', minute: 'numeric' }\n      break\n    case 'fullTime12h':\n      options = { hour: 'numeric', minute: 'numeric', hour12: true }\n      break\n    case 'fullTime24h':\n      options = { hour: 'numeric', minute: 'numeric', hour12: false }\n      break\n    case 'fullDateTime':\n      options = { year: 'numeric', month: 'short', day: 'numeric', hour: 'numeric', minute: 'numeric' }\n      break\n    case 'fullDateTime12h':\n      options = { year: 'numeric', month: 'short', day: 'numeric', hour: 'numeric', minute: 'numeric', hour12: true }\n      break\n    case 'fullDateTime24h':\n      options = { year: 'numeric', month: 'short', day: 'numeric', hour: 'numeric', minute: 'numeric', hour12: false }\n      break\n    case 'keyboardDate':\n      options = { year: 'numeric', month: '2-digit', day: '2-digit' }\n      break\n    case 'keyboardDateTime':\n      options = { year: 'numeric', month: '2-digit', day: '2-digit', hour: 'numeric', minute: 'numeric' }\n      return new Intl.DateTimeFormat(locale, options).format(newDate).replace(/, /g, ' ')\n    case 'keyboardDateTime12h':\n      options = { year: 'numeric', month: '2-digit', day: '2-digit', hour: 'numeric', minute: 'numeric', hour12: true }\n      return new Intl.DateTimeFormat(locale, options).format(newDate).replace(/, /g, ' ')\n    case 'keyboardDateTime24h':\n      options = { year: 'numeric', month: '2-digit', day: '2-digit', hour: 'numeric', minute: 'numeric', hour12: false }\n      return new Intl.DateTimeFormat(locale, options).format(newDate).replace(/, /g, ' ')\n    default:\n      options = customFormat ?? { timeZone: 'UTC', timeZoneName: 'short' }\n  }\n\n  return new Intl.DateTimeFormat(locale, options).format(newDate)\n}\n\nfunction toISO (adapter: DateAdapter<any>, value: Date) {\n  const date = adapter.toJsDate(value)\n  const year = date.getFullYear()\n  const month = padStart(String(date.getMonth() + 1), 2, '0')\n  const day = padStart(String(date.getDate()), 2, '0')\n\n  return `${year}-${month}-${day}`\n}\n\nfunction parseISO (value: string) {\n  const [year, month, day] = value.split('-').map(Number)\n\n  return new Date(year, month - 1, day)\n}\n\nfunction addMinutes (date: Date, amount: number) {\n  const d = new Date(date)\n  d.setMinutes(d.getMinutes() + amount)\n  return d\n}\n\nfunction addHours (date: Date, amount: number) {\n  const d = new Date(date)\n  d.setHours(d.getHours() + amount)\n  return d\n}\n\nfunction addDays (date: Date, amount: number) {\n  const d = new Date(date)\n  d.setDate(d.getDate() + amount)\n  return d\n}\n\nfunction addWeeks (date: Date, amount: number) {\n  const d = new Date(date)\n  d.setDate(d.getDate() + (amount * 7))\n  return d\n}\n\nfunction addMonths (date: Date, amount: number) {\n  const d = new Date(date)\n  d.setDate(1)\n  d.setMonth(d.getMonth() + amount)\n  return d\n}\n\nfunction getYear (date: Date) {\n  return date.getFullYear()\n}\n\nfunction getMonth (date: Date) {\n  return date.getMonth()\n}\n\nfunction getWeek (date: Date, locale: string, firstDayOfWeek?: number, firstWeekMinSize?: number) {\n  const weekInfoFromLocale = weekInfo(locale)\n  const weekStart = firstDayOfWeek ?? weekInfoFromLocale?.firstDay ?? 0\n  const minWeekSize = firstWeekMinSize ?? weekInfoFromLocale?.firstWeekSize ?? 1\n  function firstWeekSize (year: number) {\n    const yearStart = new Date(year, 0, 1)\n    return 7 - getDiff(yearStart, startOfWeek(yearStart, locale, weekStart), 'days')\n  }\n\n  let year = getYear(date)\n  const currentWeekEnd = addDays(startOfWeek(date, locale, weekStart), 6)\n  if (year < getYear(currentWeekEnd) && firstWeekSize(year + 1) >= minWeekSize) {\n    year++\n  }\n\n  const yearStart = new Date(year, 0, 1)\n  const size = firstWeekSize(year)\n  const d1w1 = size >= minWeekSize\n    ? addDays(yearStart, size - 7)\n    : addDays(yearStart, size)\n\n  return 1 + getDiff(date, d1w1, 'weeks')\n}\n\nfunction getDate (date: Date) {\n  return date.getDate()\n}\n\nfunction getNextMonth (date: Date) {\n  return new Date(date.getFullYear(), date.getMonth() + 1, 1)\n}\n\nfunction getPreviousMonth (date: Date) {\n  return new Date(date.getFullYear(), date.getMonth() - 1, 1)\n}\n\nfunction getHours (date: Date) {\n  return date.getHours()\n}\n\nfunction getMinutes (date: Date) {\n  return date.getMinutes()\n}\n\nfunction startOfYear (date: Date) {\n  return new Date(date.getFullYear(), 0, 1)\n}\nfunction endOfYear (date: Date) {\n  return new Date(date.getFullYear(), 11, 31)\n}\n\nfunction isWithinRange (date: Date, range: [Date, Date]) {\n  return isAfter(date, range[0]) && isBefore(date, range[1])\n}\n\nfunction isValid (date: any) {\n  const d = new Date(date)\n\n  return d instanceof Date && !isNaN(d.getTime())\n}\n\nfunction isAfter (date: Date, comparing: Date) {\n  return date.getTime() > comparing.getTime()\n}\n\nfunction isAfterDay (date: Date, comparing: Date): boolean {\n  return isAfter(startOfDay(date), startOfDay(comparing))\n}\n\nfunction isBefore (date: Date, comparing: Date) {\n  return date.getTime() < comparing.getTime()\n}\n\nfunction isEqual (date: Date, comparing: Date) {\n  return date.getTime() === comparing.getTime()\n}\n\nfunction isSameDay (date: Date, comparing: Date) {\n  return date.getDate() === comparing.getDate() &&\n    date.getMonth() === comparing.getMonth() &&\n    date.getFullYear() === comparing.getFullYear()\n}\n\nfunction isSameMonth (date: Date, comparing: Date) {\n  return date.getMonth() === comparing.getMonth() &&\n    date.getFullYear() === comparing.getFullYear()\n}\n\nfunction isSameYear (date: Date, comparing: Date) {\n  return date.getFullYear() === comparing.getFullYear()\n}\n\nfunction getDiff (date: Date, comparing: Date | string, unit?: string) {\n  const d = new Date(date)\n  const c = new Date(comparing)\n\n  switch (unit) {\n    case 'years':\n      return d.getFullYear() - c.getFullYear()\n    case 'quarters':\n      return Math.floor((d.getMonth() - c.getMonth() + (d.getFullYear() - c.getFullYear()) * 12) / 4)\n    case 'months':\n      return d.getMonth() - c.getMonth() + (d.getFullYear() - c.getFullYear()) * 12\n    case 'weeks':\n      return Math.floor((d.getTime() - c.getTime()) / (1000 * 60 * 60 * 24 * 7))\n    case 'days':\n      return Math.floor((d.getTime() - c.getTime()) / (1000 * 60 * 60 * 24))\n    case 'hours':\n      return Math.floor((d.getTime() - c.getTime()) / (1000 * 60 * 60))\n    case 'minutes':\n      return Math.floor((d.getTime() - c.getTime()) / (1000 * 60))\n    case 'seconds':\n      return Math.floor((d.getTime() - c.getTime()) / 1000)\n    default: {\n      return d.getTime() - c.getTime()\n    }\n  }\n}\n\nfunction setHours (date: Date, count: number) {\n  const d = new Date(date)\n  d.setHours(count)\n  return d\n}\n\nfunction setMinutes (date: Date, count: number) {\n  const d = new Date(date)\n  d.setMinutes(count)\n  return d\n}\n\nfunction setMonth (date: Date, count: number) {\n  const d = new Date(date)\n  d.setMonth(count)\n  return d\n}\n\nfunction setDate (date: Date, day: number) {\n  const d = new Date(date)\n  d.setDate(day)\n  return d\n}\n\nfunction setYear (date: Date, year: number) {\n  const d = new Date(date)\n  d.setFullYear(year)\n  return d\n}\n\nfunction startOfDay (date: Date) {\n  return new Date(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0, 0)\n}\n\nfunction endOfDay (date: Date) {\n  return new Date(date.getFullYear(), date.getMonth(), date.getDate(), 23, 59, 59, 999)\n}\n\nexport class VuetifyDateAdapter implements DateAdapter<Date> {\n  locale: string\n  formats?: Record<string, CustomDateFormat>\n\n  constructor (options: { locale: string, formats?: Record<string, CustomDateFormat> }) {\n    this.locale = options.locale\n    this.formats = options.formats\n  }\n\n  date (value?: any) {\n    return date(value)\n  }\n\n  toJsDate (date: Date) {\n    return date\n  }\n\n  toISO (date: Date): string {\n    return toISO(this, date)\n  }\n\n  parseISO (date: string) {\n    return parseISO(date)\n  }\n\n  addMinutes (date: Date, amount: number) {\n    return addMinutes(date, amount)\n  }\n\n  addHours (date: Date, amount: number) {\n    return addHours(date, amount)\n  }\n\n  addDays (date: Date, amount: number) {\n    return addDays(date, amount)\n  }\n\n  addWeeks (date: Date, amount: number) {\n    return addWeeks(date, amount)\n  }\n\n  addMonths (date: Date, amount: number) {\n    return addMonths(date, amount)\n  }\n\n  getWeekArray (date: Date, firstDayOfWeek?: number | string) {\n    const firstDay = firstDayOfWeek !== undefined ? Number(firstDayOfWeek) : undefined\n    return getWeekArray(date, this.locale, firstDay)\n  }\n\n  startOfWeek (date: Date, firstDayOfWeek?: number | string): Date {\n    const firstDay = firstDayOfWeek !== undefined ? Number(firstDayOfWeek) : undefined\n    return startOfWeek(date, this.locale, firstDay)\n  }\n\n  endOfWeek (date: Date): Date {\n    return endOfWeek(date, this.locale)\n  }\n\n  startOfMonth (date: Date) {\n    return startOfMonth(date)\n  }\n\n  endOfMonth (date: Date) {\n    return endOfMonth(date)\n  }\n\n  format (date: Date, formatString: string) {\n    return format(date, formatString, this.locale, this.formats)\n  }\n\n  isEqual (date: Date, comparing: Date) {\n    return isEqual(date, comparing)\n  }\n\n  isValid (date: any) {\n    return isValid(date)\n  }\n\n  isWithinRange (date: Date, range: [Date, Date]) {\n    return isWithinRange(date, range)\n  }\n\n  isAfter (date: Date, comparing: Date) {\n    return isAfter(date, comparing)\n  }\n\n  isAfterDay (date: Date, comparing: Date) {\n    return isAfterDay(date, comparing)\n  }\n\n  isBefore (date: Date, comparing: Date) {\n    return !isAfter(date, comparing) && !isEqual(date, comparing)\n  }\n\n  isSameDay (date: Date, comparing: Date) {\n    return isSameDay(date, comparing)\n  }\n\n  isSameMonth (date: Date, comparing: Date) {\n    return isSameMonth(date, comparing)\n  }\n\n  isSameYear (date: Date, comparing: Date) {\n    return isSameYear(date, comparing)\n  }\n\n  setMinutes (date: Date, count: number) {\n    return setMinutes(date, count)\n  }\n\n  setHours (date: Date, count: number) {\n    return setHours(date, count)\n  }\n\n  setMonth (date: Date, count: number) {\n    return setMonth(date, count)\n  }\n\n  setDate (date: Date, day: number): Date {\n    return setDate(date, day)\n  }\n\n  setYear (date: Date, year: number) {\n    return setYear(date, year)\n  }\n\n  getDiff (date: Date, comparing: Date | string, unit?: string) {\n    return getDiff(date, comparing, unit)\n  }\n\n  getWeekdays (firstDayOfWeek?: number | string) {\n    const firstDay = firstDayOfWeek !== undefined ? Number(firstDayOfWeek) : undefined\n    return getWeekdays(this.locale, firstDay)\n  }\n\n  getYear (date: Date) {\n    return getYear(date)\n  }\n\n  getMonth (date: Date) {\n    return getMonth(date)\n  }\n\n  getWeek (date: Date, firstDayOfWeek?: number | string, firstWeekMinSize?: number) {\n    const firstDay = firstDayOfWeek !== undefined ? Number(firstDayOfWeek) : undefined\n    return getWeek(date, this.locale, firstDay, firstWeekMinSize)\n  }\n\n  getDate (date: Date) {\n    return getDate(date)\n  }\n\n  getNextMonth (date: Date) {\n    return getNextMonth(date)\n  }\n\n  getPreviousMonth (date: Date) {\n    return getPreviousMonth(date)\n  }\n\n  getHours (date: Date) {\n    return getHours(date)\n  }\n\n  getMinutes (date: Date) {\n    return getMinutes(date)\n  }\n\n  startOfDay (date: Date) {\n    return startOfDay(date)\n  }\n\n  endOfDay (date: Date) {\n    return endOfDay(date)\n  }\n\n  startOfYear (date: Date) {\n    return startOfYear(date)\n  }\n\n  endOfYear (date: Date) {\n    return endOfYear(date)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
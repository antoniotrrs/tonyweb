{"ast":null,"code":"import _objectWithoutProperties from \"/Users/antoniotorres/Documents/tony/tonyweb/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _slicedToArray from \"/Users/antoniotorres/Documents/tony/tonyweb/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectSpread from \"/Users/antoniotorres/Documents/tony/tonyweb/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _excluded = [\"modelValue\"],\n    _excluded2 = [\"class\"];\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { Fragment as _Fragment, createVNode as _createVNode, resolveDirective as _resolveDirective, mergeProps as _mergeProps, withDirectives as _withDirectives, vModelText as _vModelText } from \"vue\"; // Styles\n\nimport \"./VTextarea.css\";\nimport \"../VTextField/VTextField.css\"; // Components\n\nimport { VCounter } from \"../VCounter/VCounter.js\";\nimport { VField } from \"../VField/index.js\";\nimport { makeVFieldProps } from \"../VField/VField.js\";\nimport { makeVInputProps, VInput } from \"../VInput/VInput.js\"; // Composables\n\nimport { useFocus } from \"../../composables/focus.js\";\nimport { forwardRefs } from \"../../composables/forwardRefs.js\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.js\"; // Directives\n\nimport Intersect from \"../../directives/intersect/index.js\"; // Utilities\n\nimport { computed, nextTick, onBeforeUnmount, onMounted, ref, shallowRef, watch, watchEffect } from 'vue';\nimport { callEvent, clamp, convertToUnit, filterInputAttrs, genericComponent, propsFactory, useRender } from \"../../util/index.js\"; // Types\n\nexport var makeVTextareaProps = propsFactory(_objectSpread(_objectSpread({\n  autoGrow: Boolean,\n  autofocus: Boolean,\n  counter: [Boolean, Number, String],\n  counterValue: Function,\n  prefix: String,\n  placeholder: String,\n  persistentPlaceholder: Boolean,\n  persistentCounter: Boolean,\n  noResize: Boolean,\n  rows: {\n    type: [Number, String],\n    default: 5,\n    validator: function validator(v) {\n      return !isNaN(parseFloat(v));\n    }\n  },\n  maxRows: {\n    type: [Number, String],\n    validator: function validator(v) {\n      return !isNaN(parseFloat(v));\n    }\n  },\n  suffix: String,\n  modelModifiers: Object\n}, makeVInputProps()), makeVFieldProps()), 'VTextarea');\nexport var VTextarea = genericComponent()({\n  name: 'VTextarea',\n  directives: {\n    Intersect: Intersect\n  },\n  inheritAttrs: false,\n  props: makeVTextareaProps(),\n  emits: {\n    'click:control': function clickControl(e) {\n      return true;\n    },\n    'mousedown:control': function mousedownControl(e) {\n      return true;\n    },\n    'update:focused': function updateFocused(focused) {\n      return true;\n    },\n    'update:modelValue': function updateModelValue(val) {\n      return true;\n    }\n  },\n  setup: function setup(props, _ref) {\n    var attrs = _ref.attrs,\n        emit = _ref.emit,\n        slots = _ref.slots;\n    var model = useProxiedModel(props, 'modelValue');\n\n    var _useFocus = useFocus(props),\n        isFocused = _useFocus.isFocused,\n        focus = _useFocus.focus,\n        blur = _useFocus.blur;\n\n    var counterValue = computed(function () {\n      return typeof props.counterValue === 'function' ? props.counterValue(model.value) : (model.value || '').toString().length;\n    });\n    var max = computed(function () {\n      if (attrs.maxlength) return attrs.maxlength;\n      if (!props.counter || typeof props.counter !== 'number' && typeof props.counter !== 'string') return undefined;\n      return props.counter;\n    });\n\n    function onIntersect(isIntersecting, entries) {\n      var _entries$0$target, _entries$0$target$foc;\n\n      if (!props.autofocus || !isIntersecting) return;\n      (_entries$0$target = entries[0].target) === null || _entries$0$target === void 0 ? void 0 : (_entries$0$target$foc = _entries$0$target.focus) === null || _entries$0$target$foc === void 0 ? void 0 : _entries$0$target$foc.call(_entries$0$target);\n    }\n\n    var vInputRef = ref();\n    var vFieldRef = ref();\n    var controlHeight = shallowRef('');\n    var textareaRef = ref();\n    var isActive = computed(function () {\n      return props.persistentPlaceholder || isFocused.value || props.active;\n    });\n\n    function onFocus() {\n      if (textareaRef.value !== document.activeElement) {\n        var _textareaRef$value;\n\n        (_textareaRef$value = textareaRef.value) === null || _textareaRef$value === void 0 ? void 0 : _textareaRef$value.focus();\n      }\n\n      if (!isFocused.value) focus();\n    }\n\n    function onControlClick(e) {\n      onFocus();\n      emit('click:control', e);\n    }\n\n    function onControlMousedown(e) {\n      emit('mousedown:control', e);\n    }\n\n    function onClear(e) {\n      e.stopPropagation();\n      onFocus();\n      nextTick(function () {\n        model.value = '';\n        callEvent(props['onClick:clear'], e);\n      });\n    }\n\n    function onInput(e) {\n      var _props$modelModifiers;\n\n      var el = e.target;\n      model.value = el.value;\n\n      if ((_props$modelModifiers = props.modelModifiers) !== null && _props$modelModifiers !== void 0 && _props$modelModifiers.trim) {\n        var caretPosition = [el.selectionStart, el.selectionEnd];\n        nextTick(function () {\n          el.selectionStart = caretPosition[0];\n          el.selectionEnd = caretPosition[1];\n        });\n      }\n    }\n\n    var sizerRef = ref();\n    var rows = ref(Number(props.rows));\n    var isPlainOrUnderlined = computed(function () {\n      return ['plain', 'underlined'].includes(props.variant);\n    });\n    watchEffect(function () {\n      if (!props.autoGrow) rows.value = Number(props.rows);\n    });\n\n    function calculateInputHeight() {\n      if (!props.autoGrow) return;\n      nextTick(function () {\n        if (!sizerRef.value || !vFieldRef.value) return;\n        var style = getComputedStyle(sizerRef.value);\n        var fieldStyle = getComputedStyle(vFieldRef.value.$el);\n        var padding = parseFloat(style.getPropertyValue('--v-field-padding-top')) + parseFloat(style.getPropertyValue('--v-input-padding-top')) + parseFloat(style.getPropertyValue('--v-field-padding-bottom'));\n        var height = sizerRef.value.scrollHeight;\n        var lineHeight = parseFloat(style.lineHeight);\n        var minHeight = Math.max(parseFloat(props.rows) * lineHeight + padding, parseFloat(fieldStyle.getPropertyValue('--v-input-control-height')));\n        var maxHeight = parseFloat(props.maxRows) * lineHeight + padding || Infinity;\n        var newHeight = clamp(height !== null && height !== void 0 ? height : 0, minHeight, maxHeight);\n        rows.value = Math.floor((newHeight - padding) / lineHeight);\n        controlHeight.value = convertToUnit(newHeight);\n      });\n    }\n\n    onMounted(calculateInputHeight);\n    watch(model, calculateInputHeight);\n    watch(function () {\n      return props.rows;\n    }, calculateInputHeight);\n    watch(function () {\n      return props.maxRows;\n    }, calculateInputHeight);\n    watch(function () {\n      return props.density;\n    }, calculateInputHeight);\n    var observer;\n    watch(sizerRef, function (val) {\n      if (val) {\n        observer = new ResizeObserver(calculateInputHeight);\n        observer.observe(sizerRef.value);\n      } else {\n        var _observer;\n\n        (_observer = observer) === null || _observer === void 0 ? void 0 : _observer.disconnect();\n      }\n    });\n    onBeforeUnmount(function () {\n      var _observer2;\n\n      (_observer2 = observer) === null || _observer2 === void 0 ? void 0 : _observer2.disconnect();\n    });\n    useRender(function () {\n      var hasCounter = !!(slots.counter || props.counter || props.counterValue);\n      var hasDetails = !!(hasCounter || slots.details);\n\n      var _filterInputAttrs = filterInputAttrs(attrs),\n          _filterInputAttrs2 = _slicedToArray(_filterInputAttrs, 2),\n          rootAttrs = _filterInputAttrs2[0],\n          inputAttrs = _filterInputAttrs2[1];\n\n      var _VInput$filterProps = VInput.filterProps(props),\n          _ = _VInput$filterProps.modelValue,\n          inputProps = _objectWithoutProperties(_VInput$filterProps, _excluded);\n\n      var fieldProps = VField.filterProps(props);\n      return _createVNode(VInput, _mergeProps({\n        \"ref\": vInputRef,\n        \"modelValue\": model.value,\n        \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n          return model.value = $event;\n        },\n        \"class\": ['v-textarea v-text-field', {\n          'v-textarea--prefixed': props.prefix,\n          'v-textarea--suffixed': props.suffix,\n          'v-text-field--prefixed': props.prefix,\n          'v-text-field--suffixed': props.suffix,\n          'v-textarea--auto-grow': props.autoGrow,\n          'v-textarea--no-resize': props.noResize || props.autoGrow,\n          'v-input--plain-underlined': isPlainOrUnderlined.value\n        }, props.class],\n        \"style\": props.style\n      }, rootAttrs, inputProps, {\n        \"centerAffix\": rows.value === 1 && !isPlainOrUnderlined.value,\n        \"focused\": isFocused.value\n      }), _objectSpread(_objectSpread({}, slots), {}, {\n        default: function _default(_ref2) {\n          var id = _ref2.id,\n              isDisabled = _ref2.isDisabled,\n              isDirty = _ref2.isDirty,\n              isReadonly = _ref2.isReadonly,\n              isValid = _ref2.isValid;\n          return _createVNode(VField, _mergeProps({\n            \"ref\": vFieldRef,\n            \"style\": {\n              '--v-textarea-control-height': controlHeight.value\n            },\n            \"onClick\": onControlClick,\n            \"onMousedown\": onControlMousedown,\n            \"onClick:clear\": onClear,\n            \"onClick:prependInner\": props['onClick:prependInner'],\n            \"onClick:appendInner\": props['onClick:appendInner']\n          }, fieldProps, {\n            \"id\": id.value,\n            \"active\": isActive.value || isDirty.value,\n            \"centerAffix\": rows.value === 1 && !isPlainOrUnderlined.value,\n            \"dirty\": isDirty.value || props.dirty,\n            \"disabled\": isDisabled.value,\n            \"focused\": isFocused.value,\n            \"error\": isValid.value === false\n          }), _objectSpread(_objectSpread({}, slots), {}, {\n            default: function _default(_ref3) {\n              var _ref3$props = _ref3.props,\n                  fieldClass = _ref3$props.class,\n                  slotProps = _objectWithoutProperties(_ref3$props, _excluded2);\n\n              return _createVNode(_Fragment, null, [props.prefix && _createVNode(\"span\", {\n                \"class\": \"v-text-field__prefix\"\n              }, [props.prefix]), _withDirectives(_createVNode(\"textarea\", _mergeProps({\n                \"ref\": textareaRef,\n                \"class\": fieldClass,\n                \"value\": model.value,\n                \"onInput\": onInput,\n                \"autofocus\": props.autofocus,\n                \"readonly\": isReadonly.value,\n                \"disabled\": isDisabled.value,\n                \"placeholder\": props.placeholder,\n                \"rows\": props.rows,\n                \"name\": props.name,\n                \"onFocus\": onFocus,\n                \"onBlur\": blur\n              }, slotProps, inputAttrs), null), [[_resolveDirective(\"intersect\"), {\n                handler: onIntersect\n              }, null, {\n                once: true\n              }]]), props.autoGrow && _withDirectives(_createVNode(\"textarea\", {\n                \"class\": [fieldClass, 'v-textarea__sizer'],\n                \"id\": \"\".concat(slotProps.id, \"-sizer\"),\n                \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n                  return model.value = $event;\n                },\n                \"ref\": sizerRef,\n                \"readonly\": true,\n                \"aria-hidden\": \"true\"\n              }, null), [[_vModelText, model.value]]), props.suffix && _createVNode(\"span\", {\n                \"class\": \"v-text-field__suffix\"\n              }, [props.suffix])]);\n            }\n          }));\n        },\n        details: hasDetails ? function (slotProps) {\n          var _slots$details;\n\n          return _createVNode(_Fragment, null, [(_slots$details = slots.details) === null || _slots$details === void 0 ? void 0 : _slots$details.call(slots, slotProps), hasCounter && _createVNode(_Fragment, null, [_createVNode(\"span\", null, null), _createVNode(VCounter, {\n            \"active\": props.persistentCounter || isFocused.value,\n            \"value\": counterValue.value,\n            \"max\": max.value,\n            \"disabled\": props.disabled\n          }, slots.counter)])]);\n        } : undefined\n      }));\n    });\n    return forwardRefs({}, vInputRef, vFieldRef, textareaRef);\n  }\n});","map":{"version":3,"mappings":"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","names":["VCounter","VField","makeVFieldProps","makeVInputProps","VInput","useFocus","forwardRefs","useProxiedModel","Intersect","computed","nextTick","onBeforeUnmount","onMounted","ref","shallowRef","watch","watchEffect","callEvent","clamp","convertToUnit","filterInputAttrs","genericComponent","propsFactory","useRender","makeVTextareaProps","autoGrow","Boolean","autofocus","counter","Number","String","counterValue","Function","prefix","placeholder","persistentPlaceholder","persistentCounter","noResize","rows","type","default","validator","v","isNaN","parseFloat","maxRows","suffix","modelModifiers","Object","VTextarea","name","directives","inheritAttrs","props","emits","e","focused","val","setup","_ref","attrs","emit","slots","model","isFocused","focus","blur","value","toString","length","max","maxlength","undefined","onIntersect","isIntersecting","entries","target","vInputRef","vFieldRef","controlHeight","textareaRef","isActive","active","onFocus","document","activeElement","onControlClick","onControlMousedown","onClear","stopPropagation","onInput","el","trim","caretPosition","selectionStart","selectionEnd","sizerRef","isPlainOrUnderlined","includes","variant","calculateInputHeight","style","getComputedStyle","fieldStyle","$el","padding","getPropertyValue","height","scrollHeight","lineHeight","minHeight","Math","maxHeight","Infinity","newHeight","floor","density","observer","ResizeObserver","observe","disconnect","hasCounter","hasDetails","details","rootAttrs","inputAttrs","filterProps","_","modelValue","inputProps","fieldProps","$event","class","_ref2","id","isDisabled","isDirty","isReadonly","isValid","dirty","_ref3","fieldClass","slotProps","_createVNode","_withDirectives","handler","once","disabled"],"sources":["../../../src/components/VTextarea/VTextarea.tsx"],"sourcesContent":["// Styles\nimport './VTextarea.sass'\nimport '../VTextField/VTextField.sass'\n\n// Components\nimport { VCounter } from '@/components/VCounter/VCounter'\nimport { VField } from '@/components/VField'\nimport { makeVFieldProps } from '@/components/VField/VField'\nimport { makeVInputProps, VInput } from '@/components/VInput/VInput'\n\n// Composables\nimport { useFocus } from '@/composables/focus'\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Directives\nimport Intersect from '@/directives/intersect'\n\n// Utilities\nimport { computed, nextTick, onBeforeUnmount, onMounted, ref, shallowRef, watch, watchEffect } from 'vue'\nimport { callEvent, clamp, convertToUnit, filterInputAttrs, genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { VCounterSlot } from '@/components/VCounter/VCounter'\nimport type { VFieldSlots } from '@/components/VField/VField'\nimport type { VInputSlots } from '@/components/VInput/VInput'\n\nexport const makeVTextareaProps = propsFactory({\n  autoGrow: Boolean,\n  autofocus: Boolean,\n  counter: [Boolean, Number, String] as PropType<true | number | string>,\n  counterValue: Function as PropType<(value: any) => number>,\n  prefix: String,\n  placeholder: String,\n  persistentPlaceholder: Boolean,\n  persistentCounter: Boolean,\n  noResize: Boolean,\n  rows: {\n    type: [Number, String],\n    default: 5,\n    validator: (v: any) => !isNaN(parseFloat(v)),\n  },\n  maxRows: {\n    type: [Number, String],\n    validator: (v: any) => !isNaN(parseFloat(v)),\n  },\n  suffix: String,\n  modelModifiers: Object as PropType<Record<string, boolean>>,\n\n  ...makeVInputProps(),\n  ...makeVFieldProps(),\n}, 'VTextarea')\n\ntype VTextareaSlots = Omit<VInputSlots & VFieldSlots, 'default'> & {\n  counter: VCounterSlot\n}\n\nexport const VTextarea = genericComponent<VTextareaSlots>()({\n  name: 'VTextarea',\n\n  directives: { Intersect },\n\n  inheritAttrs: false,\n\n  props: makeVTextareaProps(),\n\n  emits: {\n    'click:control': (e: MouseEvent) => true,\n    'mousedown:control': (e: MouseEvent) => true,\n    'update:focused': (focused: boolean) => true,\n    'update:modelValue': (val: string) => true,\n  },\n\n  setup (props, { attrs, emit, slots }) {\n    const model = useProxiedModel(props, 'modelValue')\n    const { isFocused, focus, blur } = useFocus(props)\n    const counterValue = computed(() => {\n      return typeof props.counterValue === 'function'\n        ? props.counterValue(model.value)\n        : (model.value || '').toString().length\n    })\n    const max = computed(() => {\n      if (attrs.maxlength) return attrs.maxlength as string | number\n\n      if (\n        !props.counter ||\n        (typeof props.counter !== 'number' &&\n        typeof props.counter !== 'string')\n      ) return undefined\n\n      return props.counter\n    })\n\n    function onIntersect (\n      isIntersecting: boolean,\n      entries: IntersectionObserverEntry[]\n    ) {\n      if (!props.autofocus || !isIntersecting) return\n\n      (entries[0].target as HTMLInputElement)?.focus?.()\n    }\n\n    const vInputRef = ref<VInput>()\n    const vFieldRef = ref<VInput>()\n    const controlHeight = shallowRef('')\n    const textareaRef = ref<HTMLInputElement>()\n    const isActive = computed(() => (\n      props.persistentPlaceholder ||\n      isFocused.value ||\n      props.active\n    ))\n\n    function onFocus () {\n      if (textareaRef.value !== document.activeElement) {\n        textareaRef.value?.focus()\n      }\n\n      if (!isFocused.value) focus()\n    }\n    function onControlClick (e: MouseEvent) {\n      onFocus()\n\n      emit('click:control', e)\n    }\n    function onControlMousedown (e: MouseEvent) {\n      emit('mousedown:control', e)\n    }\n    function onClear (e: MouseEvent) {\n      e.stopPropagation()\n\n      onFocus()\n\n      nextTick(() => {\n        model.value = ''\n\n        callEvent(props['onClick:clear'], e)\n      })\n    }\n    function onInput (e: Event) {\n      const el = e.target as HTMLTextAreaElement\n      model.value = el.value\n      if (props.modelModifiers?.trim) {\n        const caretPosition = [el.selectionStart, el.selectionEnd]\n        nextTick(() => {\n          el.selectionStart = caretPosition[0]\n          el.selectionEnd = caretPosition[1]\n        })\n      }\n    }\n\n    const sizerRef = ref<HTMLTextAreaElement>()\n    const rows = ref(Number(props.rows))\n    const isPlainOrUnderlined = computed(() => ['plain', 'underlined'].includes(props.variant))\n    watchEffect(() => {\n      if (!props.autoGrow) rows.value = Number(props.rows)\n    })\n    function calculateInputHeight () {\n      if (!props.autoGrow) return\n\n      nextTick(() => {\n        if (!sizerRef.value || !vFieldRef.value) return\n\n        const style = getComputedStyle(sizerRef.value)\n        const fieldStyle = getComputedStyle(vFieldRef.value.$el)\n\n        const padding = parseFloat(style.getPropertyValue('--v-field-padding-top')) +\n          parseFloat(style.getPropertyValue('--v-input-padding-top')) +\n          parseFloat(style.getPropertyValue('--v-field-padding-bottom'))\n\n        const height = sizerRef.value.scrollHeight\n        const lineHeight = parseFloat(style.lineHeight)\n        const minHeight = Math.max(\n          parseFloat(props.rows) * lineHeight + padding,\n          parseFloat(fieldStyle.getPropertyValue('--v-input-control-height'))\n        )\n        const maxHeight = parseFloat(props.maxRows!) * lineHeight + padding || Infinity\n        const newHeight = clamp(height ?? 0, minHeight, maxHeight)\n        rows.value = Math.floor((newHeight - padding) / lineHeight)\n\n        controlHeight.value = convertToUnit(newHeight)\n      })\n    }\n\n    onMounted(calculateInputHeight)\n    watch(model, calculateInputHeight)\n    watch(() => props.rows, calculateInputHeight)\n    watch(() => props.maxRows, calculateInputHeight)\n    watch(() => props.density, calculateInputHeight)\n\n    let observer: ResizeObserver | undefined\n    watch(sizerRef, val => {\n      if (val) {\n        observer = new ResizeObserver(calculateInputHeight)\n        observer.observe(sizerRef.value!)\n      } else {\n        observer?.disconnect()\n      }\n    })\n    onBeforeUnmount(() => {\n      observer?.disconnect()\n    })\n\n    useRender(() => {\n      const hasCounter = !!(slots.counter || props.counter || props.counterValue)\n      const hasDetails = !!(hasCounter || slots.details)\n      const [rootAttrs, inputAttrs] = filterInputAttrs(attrs)\n      const { modelValue: _, ...inputProps } = VInput.filterProps(props)\n      const fieldProps = VField.filterProps(props)\n\n      return (\n        <VInput\n          ref={ vInputRef }\n          v-model={ model.value }\n          class={[\n            'v-textarea v-text-field',\n            {\n              'v-textarea--prefixed': props.prefix,\n              'v-textarea--suffixed': props.suffix,\n              'v-text-field--prefixed': props.prefix,\n              'v-text-field--suffixed': props.suffix,\n              'v-textarea--auto-grow': props.autoGrow,\n              'v-textarea--no-resize': props.noResize || props.autoGrow,\n              'v-input--plain-underlined': isPlainOrUnderlined.value,\n            },\n            props.class,\n          ]}\n          style={ props.style }\n          { ...rootAttrs }\n          { ...inputProps }\n          centerAffix={ rows.value === 1 && !isPlainOrUnderlined.value }\n          focused={ isFocused.value }\n        >\n          {{\n            ...slots,\n            default: ({\n              id,\n              isDisabled,\n              isDirty,\n              isReadonly,\n              isValid,\n            }) => (\n              <VField\n                ref={ vFieldRef }\n                style={{\n                  '--v-textarea-control-height': controlHeight.value,\n                }}\n                onClick={ onControlClick }\n                onMousedown={ onControlMousedown }\n                onClick:clear={ onClear }\n                onClick:prependInner={ props['onClick:prependInner'] }\n                onClick:appendInner={ props['onClick:appendInner'] }\n                { ...fieldProps }\n                id={ id.value }\n                active={ isActive.value || isDirty.value }\n                centerAffix={ rows.value === 1 && !isPlainOrUnderlined.value }\n                dirty={ isDirty.value || props.dirty }\n                disabled={ isDisabled.value }\n                focused={ isFocused.value }\n                error={ isValid.value === false }\n              >\n                {{\n                  ...slots,\n                  default: ({\n                    props: { class: fieldClass, ...slotProps },\n                  }) => (\n                    <>\n                      { props.prefix && (\n                        <span class=\"v-text-field__prefix\">\n                          { props.prefix }\n                        </span>\n                      )}\n\n                      <textarea\n                        ref={ textareaRef }\n                        class={ fieldClass }\n                        value={ model.value }\n                        onInput={ onInput }\n                        v-intersect={[{\n                          handler: onIntersect,\n                        }, null, ['once']]}\n                        autofocus={ props.autofocus }\n                        readonly={ isReadonly.value }\n                        disabled={ isDisabled.value }\n                        placeholder={ props.placeholder }\n                        rows={ props.rows }\n                        name={ props.name }\n                        onFocus={ onFocus }\n                        onBlur={ blur }\n                        { ...slotProps }\n                        { ...inputAttrs }\n                      />\n\n                      { props.autoGrow && (\n                        <textarea\n                          class={[\n                            fieldClass,\n                            'v-textarea__sizer',\n                          ]}\n                          id={ `${slotProps.id}-sizer` }\n                          v-model={ model.value }\n                          ref={ sizerRef }\n                          readonly\n                          aria-hidden=\"true\"\n                        />\n                      )}\n\n                      { props.suffix && (\n                        <span class=\"v-text-field__suffix\">\n                          { props.suffix }\n                        </span>\n                      )}\n                    </>\n                  ),\n                }}\n              </VField>\n            ),\n            details: hasDetails ? slotProps => (\n              <>\n                { slots.details?.(slotProps) }\n\n                { hasCounter && (\n                  <>\n                    <span />\n\n                    <VCounter\n                      active={ props.persistentCounter || isFocused.value }\n                      value={ counterValue.value }\n                      max={ max.value }\n                      disabled={ props.disabled }\n                      v-slots:default={ slots.counter }\n                    />\n                  </>\n                )}\n              </>\n            ) : undefined,\n          }}\n        </VInput>\n      )\n    })\n\n    return forwardRefs({}, vInputRef, vFieldRef, textareaRef)\n  },\n})\n\nexport type VTextarea = InstanceType<typeof VTextarea>\n"]},"metadata":{},"sourceType":"module"}
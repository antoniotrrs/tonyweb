{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.slice.js\";\n// Composables\nimport { useProxiedModel } from \"../../../composables/proxiedModel.js\"; // Utilities\n\nimport { computed, inject, provide, watch } from 'vue';\nimport { clamp, getCurrentInstance, propsFactory } from \"../../../util/index.js\"; // Types\n\nexport var makeDataTablePaginateProps = propsFactory({\n  page: {\n    type: [Number, String],\n    default: 1\n  },\n  itemsPerPage: {\n    type: [Number, String],\n    default: 10\n  }\n}, 'DataTable-paginate');\nvar VDataTablePaginationSymbol = Symbol.for('vuetify:data-table-pagination');\nexport function createPagination(props) {\n  var page = useProxiedModel(props, 'page', undefined, function (value) {\n    return Number(value !== null && value !== void 0 ? value : 1);\n  });\n  var itemsPerPage = useProxiedModel(props, 'itemsPerPage', undefined, function (value) {\n    return Number(value !== null && value !== void 0 ? value : 10);\n  });\n  return {\n    page: page,\n    itemsPerPage: itemsPerPage\n  };\n}\nexport function providePagination(options) {\n  var page = options.page,\n      itemsPerPage = options.itemsPerPage,\n      itemsLength = options.itemsLength;\n  var startIndex = computed(function () {\n    if (itemsPerPage.value === -1) return 0;\n    return itemsPerPage.value * (page.value - 1);\n  });\n  var stopIndex = computed(function () {\n    if (itemsPerPage.value === -1) return itemsLength.value;\n    return Math.min(itemsLength.value, startIndex.value + itemsPerPage.value);\n  });\n  var pageCount = computed(function () {\n    if (itemsPerPage.value === -1 || itemsLength.value === 0) return 1;\n    return Math.ceil(itemsLength.value / itemsPerPage.value);\n  }); // Don't run immediately, items may not have been loaded yet: #17966\n\n  watch([page, pageCount], function () {\n    if (page.value > pageCount.value) {\n      page.value = pageCount.value;\n    }\n  });\n\n  function setItemsPerPage(value) {\n    itemsPerPage.value = value;\n    page.value = 1;\n  }\n\n  function nextPage() {\n    page.value = clamp(page.value + 1, 1, pageCount.value);\n  }\n\n  function prevPage() {\n    page.value = clamp(page.value - 1, 1, pageCount.value);\n  }\n\n  function setPage(value) {\n    page.value = clamp(value, 1, pageCount.value);\n  }\n\n  var data = {\n    page: page,\n    itemsPerPage: itemsPerPage,\n    startIndex: startIndex,\n    stopIndex: stopIndex,\n    pageCount: pageCount,\n    itemsLength: itemsLength,\n    nextPage: nextPage,\n    prevPage: prevPage,\n    setPage: setPage,\n    setItemsPerPage: setItemsPerPage\n  };\n  provide(VDataTablePaginationSymbol, data);\n  return data;\n}\nexport function usePagination() {\n  var data = inject(VDataTablePaginationSymbol);\n  if (!data) throw new Error('Missing pagination!');\n  return data;\n}\nexport function usePaginatedItems(options) {\n  var vm = getCurrentInstance('usePaginatedItems');\n  var items = options.items,\n      startIndex = options.startIndex,\n      stopIndex = options.stopIndex,\n      itemsPerPage = options.itemsPerPage;\n  var paginatedItems = computed(function () {\n    if (itemsPerPage.value <= 0) return items.value;\n    return items.value.slice(startIndex.value, stopIndex.value);\n  });\n  watch(paginatedItems, function (val) {\n    vm.emit('update:currentItems', val);\n  }, {\n    immediate: true\n  });\n  return {\n    paginatedItems: paginatedItems\n  };\n}","map":{"version":3,"mappings":"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","names":["useProxiedModel","computed","inject","provide","watch","clamp","getCurrentInstance","propsFactory","makeDataTablePaginateProps","page","type","Number","String","default","itemsPerPage","VDataTablePaginationSymbol","Symbol","for","createPagination","props","undefined","value","providePagination","options","itemsLength","startIndex","stopIndex","Math","min","pageCount","ceil","setItemsPerPage","nextPage","prevPage","setPage","data","usePagination","Error","usePaginatedItems","vm","items","paginatedItems","slice","val","emit","immediate"],"sources":["../../../../src/components/VDataTable/composables/paginate.ts"],"sourcesContent":["// Composables\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed, inject, provide, watch } from 'vue'\nimport { clamp, getCurrentInstance, propsFactory } from '@/util'\n\n// Types\nimport type { InjectionKey, Ref } from 'vue'\nimport type { Group } from './group'\nimport type { EventProp } from '@/util'\n\nexport const makeDataTablePaginateProps = propsFactory({\n  page: {\n    type: [Number, String],\n    default: 1,\n  },\n  itemsPerPage: {\n    type: [Number, String],\n    default: 10,\n  },\n}, 'DataTable-paginate')\n\nconst VDataTablePaginationSymbol: InjectionKey<{\n  page: Ref<number>\n  itemsPerPage: Ref<number>\n  startIndex: Ref<number>\n  stopIndex: Ref<number>\n  pageCount: Ref<number>\n  itemsLength: Ref<number>\n  prevPage: () => void\n  nextPage: () => void\n  setPage: (value: number) => void\n  setItemsPerPage: (value: number) => void\n}> = Symbol.for('vuetify:data-table-pagination')\n\ntype PaginationProps = {\n  page: number | string\n  'onUpdate:page': EventProp | undefined\n  itemsPerPage: number | string\n  'onUpdate:itemsPerPage': EventProp | undefined\n  itemsLength?: number | string\n}\n\nexport function createPagination (props: PaginationProps) {\n  const page = useProxiedModel(props, 'page', undefined, value => Number(value ?? 1))\n  const itemsPerPage = useProxiedModel(props, 'itemsPerPage', undefined, value => Number(value ?? 10))\n\n  return { page, itemsPerPage }\n}\n\nexport function providePagination (options: {\n  page: Ref<number>\n  itemsPerPage: Ref<number>\n  itemsLength: Ref<number>\n}) {\n  const { page, itemsPerPage, itemsLength } = options\n\n  const startIndex = computed(() => {\n    if (itemsPerPage.value === -1) return 0\n\n    return itemsPerPage.value * (page.value - 1)\n  })\n  const stopIndex = computed(() => {\n    if (itemsPerPage.value === -1) return itemsLength.value\n\n    return Math.min(itemsLength.value, startIndex.value + itemsPerPage.value)\n  })\n\n  const pageCount = computed(() => {\n    if (itemsPerPage.value === -1 || itemsLength.value === 0) return 1\n\n    return Math.ceil(itemsLength.value / itemsPerPage.value)\n  })\n\n  // Don't run immediately, items may not have been loaded yet: #17966\n  watch([page, pageCount], () => {\n    if (page.value > pageCount.value) {\n      page.value = pageCount.value\n    }\n  })\n\n  function setItemsPerPage (value: number) {\n    itemsPerPage.value = value\n    page.value = 1\n  }\n\n  function nextPage () {\n    page.value = clamp(page.value + 1, 1, pageCount.value)\n  }\n\n  function prevPage () {\n    page.value = clamp(page.value - 1, 1, pageCount.value)\n  }\n\n  function setPage (value: number) {\n    page.value = clamp(value, 1, pageCount.value)\n  }\n\n  const data = { page, itemsPerPage, startIndex, stopIndex, pageCount, itemsLength, nextPage, prevPage, setPage, setItemsPerPage }\n\n  provide(VDataTablePaginationSymbol, data)\n\n  return data\n}\n\nexport function usePagination () {\n  const data = inject(VDataTablePaginationSymbol)\n\n  if (!data) throw new Error('Missing pagination!')\n\n  return data\n}\n\nexport function usePaginatedItems <T> (options: {\n  items: Ref<readonly (T | Group<T>)[]>\n  startIndex: Ref<number>\n  stopIndex: Ref<number>\n  itemsPerPage: Ref<number>\n}) {\n  const vm = getCurrentInstance('usePaginatedItems')\n\n  const { items, startIndex, stopIndex, itemsPerPage } = options\n  const paginatedItems = computed(() => {\n    if (itemsPerPage.value <= 0) return items.value\n\n    return items.value.slice(startIndex.value, stopIndex.value)\n  })\n\n  watch(paginatedItems, val => {\n    vm.emit('update:currentItems', val)\n  }, { immediate: true })\n\n  return { paginatedItems }\n}\n"]},"metadata":{},"sourceType":"module"}
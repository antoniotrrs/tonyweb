{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\"; // Styles\n\nimport \"./VSystemBar.css\"; // Composables\n\nimport { useBackgroundColor } from \"../../composables/color.js\";\nimport { makeComponentProps } from \"../../composables/component.js\";\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.js\";\nimport { makeLayoutItemProps, useLayoutItem } from \"../../composables/layout.js\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.js\";\nimport { useSsrBoot } from \"../../composables/ssrBoot.js\";\nimport { makeTagProps } from \"../../composables/tag.js\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.js\"; // Utilities\n\nimport { computed, shallowRef, toRef } from 'vue';\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.js\";\nexport const makeVSystemBarProps = propsFactory({\n  color: String,\n  height: [Number, String],\n  window: Boolean,\n  ...makeComponentProps(),\n  ...makeElevationProps(),\n  ...makeLayoutItemProps(),\n  ...makeRoundedProps(),\n  ...makeTagProps(),\n  ...makeThemeProps()\n}, 'VSystemBar');\nexport const VSystemBar = genericComponent()({\n  name: 'VSystemBar',\n  props: makeVSystemBarProps(),\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      backgroundColorClasses,\n      backgroundColorStyles\n    } = useBackgroundColor(toRef(props, 'color'));\n    const {\n      elevationClasses\n    } = useElevation(props);\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const {\n      ssrBootStyles\n    } = useSsrBoot();\n    const height = computed(() => props.height ?? (props.window ? 32 : 24));\n    const {\n      layoutItemStyles\n    } = useLayoutItem({\n      id: props.name,\n      order: computed(() => parseInt(props.order, 10)),\n      position: shallowRef('top'),\n      layoutSize: height,\n      elementSize: height,\n      active: computed(() => true),\n      absolute: toRef(props, 'absolute')\n    });\n    useRender(() => _createVNode(props.tag, {\n      \"class\": ['v-system-bar', {\n        'v-system-bar--window': props.window\n      }, themeClasses.value, backgroundColorClasses.value, elevationClasses.value, roundedClasses.value, props.class],\n      \"style\": [backgroundColorStyles.value, layoutItemStyles.value, ssrBootStyles.value, props.style]\n    }, slots));\n    return {};\n  }\n\n});","map":{"version":3,"mappings":"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","names":["useBackgroundColor","makeComponentProps","makeElevationProps","useElevation","makeLayoutItemProps","useLayoutItem","makeRoundedProps","useRounded","useSsrBoot","makeTagProps","makeThemeProps","provideTheme","computed","shallowRef","toRef","genericComponent","propsFactory","useRender","makeVSystemBarProps","color","String","height","Number","window","Boolean","VSystemBar","name","props","setup","_ref","slots","themeClasses","backgroundColorClasses","backgroundColorStyles","elevationClasses","roundedClasses","ssrBootStyles","layoutItemStyles","id","order","parseInt","position","layoutSize","elementSize","active","absolute","value","class","style"],"sources":["../../../src/components/VSystemBar/VSystemBar.tsx"],"sourcesContent":["// Styles\nimport './VSystemBar.sass'\n\n// Composables\nimport { useBackgroundColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeLayoutItemProps, useLayoutItem } from '@/composables/layout'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { useSsrBoot } from '@/composables/ssrBoot'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\n\n// Utilities\nimport { computed, shallowRef, toRef } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVSystemBarProps = propsFactory({\n  color: String,\n  height: [Number, String],\n  window: Boolean,\n\n  ...makeComponentProps(),\n  ...makeElevationProps(),\n  ...makeLayoutItemProps(),\n  ...makeRoundedProps(),\n  ...makeTagProps(),\n  ...makeThemeProps(),\n}, 'VSystemBar')\n\nexport const VSystemBar = genericComponent()({\n  name: 'VSystemBar',\n\n  props: makeVSystemBarProps(),\n\n  setup (props, { slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'color'))\n    const { elevationClasses } = useElevation(props)\n    const { roundedClasses } = useRounded(props)\n    const { ssrBootStyles } = useSsrBoot()\n    const height = computed(() => props.height ?? (props.window ? 32 : 24))\n    const { layoutItemStyles } = useLayoutItem({\n      id: props.name,\n      order: computed(() => parseInt(props.order, 10)),\n      position: shallowRef('top'),\n      layoutSize: height,\n      elementSize: height,\n      active: computed(() => true),\n      absolute: toRef(props, 'absolute'),\n    })\n\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-system-bar',\n          { 'v-system-bar--window': props.window },\n          themeClasses.value,\n          backgroundColorClasses.value,\n          elevationClasses.value,\n          roundedClasses.value,\n          props.class,\n        ]}\n        style={[\n          backgroundColorStyles.value,\n          layoutItemStyles.value,\n          ssrBootStyles.value,\n          props.style,\n        ]}\n        v-slots={ slots }\n      />\n    ))\n\n    return {}\n  },\n})\n\nexport type VSystemBar = InstanceType<typeof VSystemBar>\n"]},"metadata":{},"sourceType":"module"}
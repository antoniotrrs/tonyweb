{"ast":null,"code":"import _objectWithoutProperties from \"/Users/antoniotorres/Documents/tony/tonyweb/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _slicedToArray from \"/Users/antoniotorres/Documents/tony/tonyweb/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectSpread from \"/Users/antoniotorres/Documents/tony/tonyweb/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _excluded = [\"modelValue\"],\n    _excluded2 = [\"class\"];\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { resolveDirective as _resolveDirective, mergeProps as _mergeProps, createVNode as _createVNode, withDirectives as _withDirectives, Fragment as _Fragment } from \"vue\"; // Styles\n\nimport \"./VTextField.css\"; // Components\n\nimport { VCounter } from \"../VCounter/VCounter.js\";\nimport { makeVFieldProps, VField } from \"../VField/VField.js\";\nimport { makeVInputProps, VInput } from \"../VInput/VInput.js\"; // Composables\n\nimport { useFocus } from \"../../composables/focus.js\";\nimport { forwardRefs } from \"../../composables/forwardRefs.js\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.js\"; // Directives\n\nimport Intersect from \"../../directives/intersect/index.js\"; // Utilities\n\nimport { cloneVNode, computed, nextTick, ref } from 'vue';\nimport { callEvent, filterInputAttrs, genericComponent, propsFactory, useRender } from \"../../util/index.js\"; // Types\n\nvar activeTypes = ['color', 'file', 'time', 'date', 'datetime-local', 'week', 'month'];\nexport var makeVTextFieldProps = propsFactory(_objectSpread(_objectSpread({\n  autofocus: Boolean,\n  counter: [Boolean, Number, String],\n  counterValue: [Number, Function],\n  prefix: String,\n  placeholder: String,\n  persistentPlaceholder: Boolean,\n  persistentCounter: Boolean,\n  suffix: String,\n  role: String,\n  type: {\n    type: String,\n    default: 'text'\n  },\n  modelModifiers: Object\n}, makeVInputProps()), makeVFieldProps()), 'VTextField');\nexport var VTextField = genericComponent()({\n  name: 'VTextField',\n  directives: {\n    Intersect: Intersect\n  },\n  inheritAttrs: false,\n  props: makeVTextFieldProps(),\n  emits: {\n    'click:control': function clickControl(e) {\n      return true;\n    },\n    'mousedown:control': function mousedownControl(e) {\n      return true;\n    },\n    'update:focused': function updateFocused(focused) {\n      return true;\n    },\n    'update:modelValue': function updateModelValue(val) {\n      return true;\n    }\n  },\n  setup: function setup(props, _ref) {\n    var attrs = _ref.attrs,\n        emit = _ref.emit,\n        slots = _ref.slots;\n    var model = useProxiedModel(props, 'modelValue');\n\n    var _useFocus = useFocus(props),\n        isFocused = _useFocus.isFocused,\n        focus = _useFocus.focus,\n        blur = _useFocus.blur;\n\n    var counterValue = computed(function () {\n      var _model$value;\n\n      return typeof props.counterValue === 'function' ? props.counterValue(model.value) : typeof props.counterValue === 'number' ? props.counterValue : ((_model$value = model.value) !== null && _model$value !== void 0 ? _model$value : '').toString().length;\n    });\n    var max = computed(function () {\n      if (attrs.maxlength) return attrs.maxlength;\n      if (!props.counter || typeof props.counter !== 'number' && typeof props.counter !== 'string') return undefined;\n      return props.counter;\n    });\n    var isPlainOrUnderlined = computed(function () {\n      return ['plain', 'underlined'].includes(props.variant);\n    });\n\n    function onIntersect(isIntersecting, entries) {\n      var _entries$0$target, _entries$0$target$foc;\n\n      if (!props.autofocus || !isIntersecting) return;\n      (_entries$0$target = entries[0].target) === null || _entries$0$target === void 0 ? void 0 : (_entries$0$target$foc = _entries$0$target.focus) === null || _entries$0$target$foc === void 0 ? void 0 : _entries$0$target$foc.call(_entries$0$target);\n    }\n\n    var vInputRef = ref();\n    var vFieldRef = ref();\n    var inputRef = ref();\n    var isActive = computed(function () {\n      return activeTypes.includes(props.type) || props.persistentPlaceholder || isFocused.value || props.active;\n    });\n\n    function onFocus() {\n      if (inputRef.value !== document.activeElement) {\n        var _inputRef$value;\n\n        (_inputRef$value = inputRef.value) === null || _inputRef$value === void 0 ? void 0 : _inputRef$value.focus();\n      }\n\n      if (!isFocused.value) focus();\n    }\n\n    function onControlMousedown(e) {\n      emit('mousedown:control', e);\n      if (e.target === inputRef.value) return;\n      onFocus();\n      e.preventDefault();\n    }\n\n    function onControlClick(e) {\n      onFocus();\n      emit('click:control', e);\n    }\n\n    function onClear(e) {\n      e.stopPropagation();\n      onFocus();\n      nextTick(function () {\n        model.value = null;\n        callEvent(props['onClick:clear'], e);\n      });\n    }\n\n    function onInput(e) {\n      var _props$modelModifiers;\n\n      var el = e.target;\n      model.value = el.value;\n\n      if ((_props$modelModifiers = props.modelModifiers) !== null && _props$modelModifiers !== void 0 && _props$modelModifiers.trim && ['text', 'search', 'password', 'tel', 'url'].includes(props.type)) {\n        var caretPosition = [el.selectionStart, el.selectionEnd];\n        nextTick(function () {\n          el.selectionStart = caretPosition[0];\n          el.selectionEnd = caretPosition[1];\n        });\n      }\n    }\n\n    useRender(function () {\n      var hasCounter = !!(slots.counter || props.counter !== false && props.counter != null);\n      var hasDetails = !!(hasCounter || slots.details);\n\n      var _filterInputAttrs = filterInputAttrs(attrs),\n          _filterInputAttrs2 = _slicedToArray(_filterInputAttrs, 2),\n          rootAttrs = _filterInputAttrs2[0],\n          inputAttrs = _filterInputAttrs2[1];\n\n      var _VInput$filterProps = VInput.filterProps(props),\n          _ = _VInput$filterProps.modelValue,\n          inputProps = _objectWithoutProperties(_VInput$filterProps, _excluded);\n\n      var fieldProps = VField.filterProps(props);\n      return _createVNode(VInput, _mergeProps({\n        \"ref\": vInputRef,\n        \"modelValue\": model.value,\n        \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n          return model.value = $event;\n        },\n        \"class\": ['v-text-field', {\n          'v-text-field--prefixed': props.prefix,\n          'v-text-field--suffixed': props.suffix,\n          'v-input--plain-underlined': isPlainOrUnderlined.value\n        }, props.class],\n        \"style\": props.style\n      }, rootAttrs, inputProps, {\n        \"centerAffix\": !isPlainOrUnderlined.value,\n        \"focused\": isFocused.value\n      }), _objectSpread(_objectSpread({}, slots), {}, {\n        default: function _default(_ref2) {\n          var id = _ref2.id,\n              isDisabled = _ref2.isDisabled,\n              isDirty = _ref2.isDirty,\n              isReadonly = _ref2.isReadonly,\n              isValid = _ref2.isValid;\n          return _createVNode(VField, _mergeProps({\n            \"ref\": vFieldRef,\n            \"onMousedown\": onControlMousedown,\n            \"onClick\": onControlClick,\n            \"onClick:clear\": onClear,\n            \"onClick:prependInner\": props['onClick:prependInner'],\n            \"onClick:appendInner\": props['onClick:appendInner'],\n            \"role\": props.role\n          }, fieldProps, {\n            \"id\": id.value,\n            \"active\": isActive.value || isDirty.value,\n            \"dirty\": isDirty.value || props.dirty,\n            \"disabled\": isDisabled.value,\n            \"focused\": isFocused.value,\n            \"error\": isValid.value === false\n          }), _objectSpread(_objectSpread({}, slots), {}, {\n            default: function _default(_ref3) {\n              var _ref3$props = _ref3.props,\n                  fieldClass = _ref3$props.class,\n                  slotProps = _objectWithoutProperties(_ref3$props, _excluded2);\n\n              var inputNode = _withDirectives(_createVNode(\"input\", _mergeProps({\n                \"ref\": inputRef,\n                \"value\": model.value,\n                \"onInput\": onInput,\n                \"autofocus\": props.autofocus,\n                \"readonly\": isReadonly.value,\n                \"disabled\": isDisabled.value,\n                \"name\": props.name,\n                \"placeholder\": props.placeholder,\n                \"size\": 1,\n                \"type\": props.type,\n                \"onFocus\": onFocus,\n                \"onBlur\": blur\n              }, slotProps, inputAttrs), null), [[_resolveDirective(\"intersect\"), {\n                handler: onIntersect\n              }, null, {\n                once: true\n              }]]);\n\n              return _createVNode(_Fragment, null, [props.prefix && _createVNode(\"span\", {\n                \"class\": \"v-text-field__prefix\"\n              }, [_createVNode(\"span\", {\n                \"class\": \"v-text-field__prefix__text\"\n              }, [props.prefix])]), slots.default ? _createVNode(\"div\", {\n                \"class\": fieldClass,\n                \"data-no-activator\": \"\"\n              }, [slots.default(), inputNode]) : cloneVNode(inputNode, {\n                class: fieldClass\n              }), props.suffix && _createVNode(\"span\", {\n                \"class\": \"v-text-field__suffix\"\n              }, [_createVNode(\"span\", {\n                \"class\": \"v-text-field__suffix__text\"\n              }, [props.suffix])])]);\n            }\n          }));\n        },\n        details: hasDetails ? function (slotProps) {\n          var _slots$details;\n\n          return _createVNode(_Fragment, null, [(_slots$details = slots.details) === null || _slots$details === void 0 ? void 0 : _slots$details.call(slots, slotProps), hasCounter && _createVNode(_Fragment, null, [_createVNode(\"span\", null, null), _createVNode(VCounter, {\n            \"active\": props.persistentCounter || isFocused.value,\n            \"value\": counterValue.value,\n            \"max\": max.value,\n            \"disabled\": props.disabled\n          }, slots.counter)])]);\n        } : undefined\n      }));\n    });\n    return forwardRefs({}, vInputRef, vFieldRef, inputRef);\n  }\n});","map":{"version":3,"mappings":";;;;;;;;;;;+KAAA;;AACA,0B,CAEA;;AAAA,SACSA,QADT,QACiB,yBADjB;AACiB,SACRC,eADQ,EACSC,MADT,QACe,qBADf;AACe,SACvBC,eADuB,EACNC,MADM,QACA,qBADA,C,CAGhC;;AAAA,SACSC,QADT,QACiB,4BADjB;AACiB,SACRC,WADQ,QACG,kCADH;AACG,SACXC,eADW,QACI,mCADJ,C,CAGpB;;AAAA,OACOC,SADP,MACgB,qCADhB,C,CAGA;;AACA,SAASC,UAAT,EAAqBC,QAArB,EAA+BC,QAA/B,EAAyCC,GAAzC,QAAoD,KAApD;AAAyD,SAChDC,SADgD,EACrCC,gBADqC,EACnBC,gBADmB,EACDC,YADC,EACaC,SADb,QACsB,qBADtB,C,CAGzD;;AAMA,IAAMC,WAAW,GAAG,CAAC,OAAD,EAAU,MAAV,EAAkB,MAAlB,EAA0B,MAA1B,EAAkC,gBAAlC,EAAoD,MAApD,EAA4D,OAA5D,CAApB;AAEA,OAAO,IAAMC,mBAAmB,GAAGH,YAAY;AAC7CI,WAAS,EAAEC,OADkC;AAE7CC,SAAO,EAAE,CAACD,OAAD,EAAUE,MAAV,EAAkBC,MAAlB,CAFoC;AAG7CC,cAAY,EAAE,CAACF,MAAD,EAASG,QAAT,CAH+B;AAI7CC,QAAM,EAAEH,MAJqC;AAK7CI,aAAW,EAAEJ,MALgC;AAM7CK,uBAAqB,EAAER,OANsB;AAO7CS,mBAAiB,EAAET,OAP0B;AAQ7CU,QAAM,EAAEP,MARqC;AAS7CQ,MAAI,EAAER,MATuC;AAU7CS,MAAI,EAAE;AACJA,QAAI,EAAET,MADF;AAEJU,WAAO,EAAE;AAFL,GAVuC;AAc7CC,gBAAc,EAAEC;AAd6B,GAgB1CjC,eAAe,EAhB2B,GAiB1CF,eAAe,EAjB2B,GAkB5C,YAlB4C,CAAxC;AAyBP,OAAO,IAAMoC,UAAU,GAAGtB,gBAAgB,GAAoB;AAC5DuB,MAAI,EAAE,YADsD;AAG5DC,YAAU,EAAE;AAAE/B;AAAF,GAHgD;AAK5DgC,cAAY,EAAE,KAL8C;AAO5DC,OAAK,EAAEtB,mBAAmB,EAPkC;AAS5DuB,OAAK,EAAE;AACL,qBAAkBC,uBAAa;AAAA,aAAK,IAAL;AAAA,KAD1B;AAEL,yBAAsBA,2BAAa;AAAA,aAAK,IAAL;AAAA,KAF9B;AAGL,sBAAmBC,8BAAgB;AAAA,aAAK,IAAL;AAAA,KAH9B;AAIL,yBAAsBC,6BAAW;AAAA,aAAK,IAAL;AAAA;AAJ5B,GATqD;AAgB5DC,OAhB4D,iBAgBrDL,KAhBqD,EAgBhDM,IAhBgD,EAgBtB;AAAA,QAAtBC,KAAsB,GAAFD,IAAE,CAAtBC,KAAsB;AAAA,QAAfC,IAAe,GAAFF,IAAE,CAAfE,IAAe;AAAA,QAATC,KAAS,GAAFH,IAAE,CAATG,KAAS;AACpC,QAAMC,KAAK,GAAG5C,eAAe,CAACkC,KAAD,EAAQ,YAAR,CAA7B;;AACA,oBAAmCpC,QAAQ,CAACoC,KAAD,CAA3C;AAAA,QAAQW,SAAR,aAAQA,SAAR;AAAA,QAAmBC,KAAnB,aAAmBA,KAAnB;AAAA,QAA0BC,IAA1B,aAA0BA,IAA1B;;AACA,QAAM7B,YAAY,GAAGf,QAAQ,CAAC,YAAM;AAAA;;AAClC,aAAO,OAAO+B,KAAK,CAAChB,YAAb,KAA8B,UAA9B,GAA2CgB,KAAK,CAAChB,YAANgB,CAAmBU,KAAK,CAACI,KAAzBd,CAA3C,GACH,OAAOA,KAAK,CAAChB,YAAb,KAA8B,QAA9B,GAAyCgB,KAAK,CAAChB,YAA/C,GACA,iBAAC0B,KAAK,CAACI,KAAP,uDAAgB,EAAhB,EAAoBC,QAApB,GAA+BC,MAFnC;AAGD,KAJ4B,CAA7B;AAKA,QAAMC,GAAG,GAAGhD,QAAQ,CAAC,YAAM;AACzB,UAAIsC,KAAK,CAACW,SAAV,EAAqB,OAAOX,KAAK,CAACW,SAAb;AAErB,UACE,CAAClB,KAAK,CAACnB,OAAP,IACC,OAAOmB,KAAK,CAACnB,OAAb,KAAyB,QAAzB,IACD,OAAOmB,KAAK,CAACnB,OAAb,KAAyB,QAH3B,EAIE,OAAOsC,SAAP;AAEF,aAAOnB,KAAK,CAACnB,OAAb;AACD,KAVmB,CAApB;AAYA,QAAMuC,mBAAmB,GAAGnD,QAAQ,CAAC;AAAA,aAAM,CAAC,OAAD,EAAU,YAAV,EAAwBoD,QAAxB,CAAiCrB,KAAK,CAACsB,OAAvC,CAAN;AAAA,KAAD,CAApC;;AAEA,aAASC,WAAT,CACEC,cADF,EAEEC,OAFF,EAGE;AAAA;;AACA,UAAI,CAACzB,KAAK,CAACrB,SAAP,IAAoB,CAAC6C,cAAzB,EAAyC;AAExCC,kCAAO,CAAC,CAAD,CAAPA,CAAWC,MAAXD,iGAAwCb,KAAxCa;AACH;;AAEA,QAAME,SAAS,GAAGxD,GAAG,EAArB;AACA,QAAMyD,SAAS,GAAGzD,GAAG,EAArB;AACA,QAAM0D,QAAQ,GAAG1D,GAAG,EAApB;AACA,QAAM2D,QAAQ,GAAG7D,QAAQ,CAAC;AAAA,aACxBQ,WAAW,CAAC4C,QAAZ5C,CAAqBuB,KAAK,CAACR,IAA3Bf,KACAuB,KAAK,CAACZ,qBADNX,IAEAkC,SAAS,CAACG,KAFVrC,IAGAuB,KAAK,CAAC+B,MAJkB;AAAA,KAAD,CAAzB;;AAMA,aAASC,OAAT,GAAoB;AAClB,UAAIH,QAAQ,CAACf,KAATe,KAAmBI,QAAQ,CAACC,aAAhC,EAA+C;AAAA;;AAC7CL,mCAAQ,CAACf,KAATe,oEAAgBjB,KAAhBiB;AACF;;AAEA,UAAI,CAAClB,SAAS,CAACG,KAAf,EAAsBF,KAAK;AAC7B;;AACA,aAASuB,kBAAT,CAA6BjC,CAA7B,EAA4C;AAC1CM,UAAI,CAAC,mBAAD,EAAsBN,CAAtB,CAAJM;AAEA,UAAIN,CAAC,CAACwB,MAAFxB,KAAa2B,QAAQ,CAACf,KAA1B,EAAiC;AAEjCkB,aAAO;AACP9B,OAAC,CAACkC,cAAFlC;AACF;;AACA,aAASmC,cAAT,CAAyBnC,CAAzB,EAAwC;AACtC8B,aAAO;AAEPxB,UAAI,CAAC,eAAD,EAAkBN,CAAlB,CAAJM;AACF;;AACA,aAAS8B,OAAT,CAAkBpC,CAAlB,EAAiC;AAC/BA,OAAC,CAACqC,eAAFrC;AAEA8B,aAAO;AAEP9D,cAAQ,CAAC,YAAM;AACbwC,aAAK,CAACI,KAANJ,GAAc,IAAdA;AAEAtC,iBAAS,CAAC4B,KAAK,CAAC,eAAD,CAAN,EAAyBE,CAAzB,CAAT9B;AACD,OAJO,CAARF;AAKF;;AACA,aAASsE,OAAT,CAAkBtC,CAAlB,EAA4B;AAAA;;AAC1B,UAAMuC,EAAE,GAAGvC,CAAC,CAACwB,MAAb;AACAhB,WAAK,CAACI,KAANJ,GAAc+B,EAAE,CAAC3B,KAAjBJ;;AACA,UACEV,8BAAK,CAACN,cAANM,wEAAsB0C,IAAtB1C,IACA,CAAC,MAAD,EAAS,QAAT,EAAmB,UAAnB,EAA+B,KAA/B,EAAsC,KAAtC,EAA6CqB,QAA7C,CAAsDrB,KAAK,CAACR,IAA5D,CAFF,EAGE;AACA,YAAMmD,aAAa,GAAG,CAACF,EAAE,CAACG,cAAJ,EAAoBH,EAAE,CAACI,YAAvB,CAAtB;AACA3E,gBAAQ,CAAC,YAAM;AACbuE,YAAE,CAACG,cAAHH,GAAoBE,aAAa,CAAC,CAAD,CAAjCF;AACAA,YAAE,CAACI,YAAHJ,GAAkBE,aAAa,CAAC,CAAD,CAA/BF;AACD,SAHO,CAARvE;AAIF;AACF;;AAEAM,aAAS,CAAC,YAAM;AACd,UAAMsE,UAAU,GAAG,CAAC,EAAErC,KAAK,CAAC5B,OAAN4B,IAAkBT,KAAK,CAACnB,OAANmB,KAAkB,KAAlBA,IAA2BA,KAAK,CAACnB,OAANmB,IAAiB,IAAhE,CAApB;AACA,UAAM+C,UAAU,GAAG,CAAC,EAAED,UAAU,IAAIrC,KAAK,CAACuC,OAAtB,CAApB;;AACA,8BAAgC3E,gBAAgB,CAACkC,KAAD,CAAhD;AAAA;AAAA,UAAO0C,SAAP;AAAA,UAAkBC,UAAlB;;AACA,gCAAyCvF,MAAM,CAACwF,WAAPxF,CAAmBqC,KAAnBrC,CAAzC;AAAA,UAAoByF,CAApB,uBAAQC,UAAR;AAAA,UAA0BC,UAA1B;;AACA,UAAMC,UAAU,GAAG9F,MAAM,CAAC0F,WAAP1F,CAAmBuC,KAAnBvC,CAAnB;AAEA;AAAA,eAEUkE,SAFV;AAEmB,sBACLjB,KAAK,CAACI,KAHpB;AAGyB;AAAA,iBAAXJ,KAAK,CAACI,KAANJ,GAAW8C;AAAA,SAHzB;AAGyB,iBACd,CACL,cADK,EAEL;AACE,oCAA0BxD,KAAK,CAACd,MADlC;AAEE,oCAA0Bc,KAAK,CAACV,MAFlC;AAGE,uCAA6B8B,mBAAmB,CAACN;AAHnD,SAFK,EAOLd,KAAK,CAACyD,KAPD,CAJX;AAYK,iBACOzD,KAAK,CAAC0D;AAblB,SAcST,SAdT,EAeSK,UAfT,EAemB;AAAA,uBACD,CAAClC,mBAAmB,CAACN,KADpB;AACyB,mBAC9BH,SAAS,CAACG;AAFL,OAfnB,mCAoBSL,KApBT;AAqBMhB,eAAO,EAAEkE;AAAA,cACPC,EADO,GAMRD,KANQ,CACPC,EADO;AAAA,cAEPC,UAFO,GAMRF,KANQ,CAEPE,UAFO;AAAA,cAGPC,OAHO,GAMRH,KANQ,CAGPG,OAHO;AAAA,cAIPC,UAJO,GAMRJ,KANQ,CAIPI,UAJO;AAAA,cAKPC,OALO,GAMRL,KANQ,CAKPK,OALO;AAMR;AAAA,mBAESpC,SAFT;AAEkB,2BACDO,kBAHjB;AAGmC,uBACtBE,cAJb;AAI2B,6BACRC,OALnB;AAK0B,oCACAtC,KAAK,CAAC,sBAAD,CAN/B;AAMuD,mCAC9BA,KAAK,CAAC,qBAAD,CAP9B;AAOqD,oBAC3CA,KAAK,CAACT;AARhB,aASQgE,UATR,EASkB;AAAA,kBACVK,EAAE,CAAC9C,KADO;AACF,sBACJgB,QAAQ,CAAChB,KAATgB,IAAkBgC,OAAO,CAAChD,KAFpB;AAEyB,qBAChCgD,OAAO,CAAChD,KAARgD,IAAiB9D,KAAK,CAACiE,KAHhB;AAGqB,wBACzBJ,UAAU,CAAC/C,KAJP;AAIY,uBACjBH,SAAS,CAACG,KALL;AAKU,qBACjBkD,OAAO,CAAClD,KAARkD,KAAkB;AANX,WATlB,mCAkBQvD,KAlBR;AAmBKhB,mBAAO,EAAEyE,yBAEH;AAAA,gCAALA,KAAK,CADJlE,KACI;AAAA,kBADYmE,UACZ,eADKV,KACL;AAAA,kBAD2BW,SAC3B;;AACJ,kBAAMC,SAAS;AAAA,uBAELxC,QAFK;AAEG,yBACNnB,KAAK,CAACI,KAHH;AAGQ,2BACT0B,OAJC;AAIM,6BAILxC,KAAK,CAACrB,SARP;AAQgB,4BAChBoF,UAAU,CAACjD,KATX;AASgB,4BAChB+C,UAAU,CAAC/C,KAVX;AAUgB,wBACpBd,KAAK,CAACH,IAXF;AAWM,+BACHG,KAAK,CAACb,WAZT;AAYoB,wBACxB,CAbI;AAaH,wBACDa,KAAK,CAACR,IAdF;AAcM,2BACPwC,OAfC;AAeM,0BACRnB;AAhBE,iBAiBNuD,SAjBM,EAkBNlB,UAlBM,GAkBI,IAlBJ,GAkBI,kCAbD;AACZoB,uBAAO,EAAE/C;AADG,eAaC,EAXZ,IAWY,EAXR;AAAAgD;AAAA,eAWQ,EAlBJ,CAAf;;AAsBA,oDAEMvE,KAAK,CAACd,MAANc,IAAYwE;AAAA;AAAA;AAAA;AAAA,kBAGNxE,KAAK,CAACd,MAHA,IAFlB,EAUMuB,KAAK,CAAChB,OAANgB,GAAa+D;AAAA,yBAEHL,UAFG;AAEO;AAFP,iBAEO,CAGhB1D,KAAK,CAAChB,OAANgB,EAHgB,EAIhB4D,SAJgB,CAFP,CAAb5D,GAQEzC,UAAU,CAACqG,SAAD,EAAY;AAAEZ,qBAAK,EAAEU;AAAT,eAAZ,CAlBlB,EAoBMnE,KAAK,CAACV,MAANU,IAAYwE;AAAA;AAAA;AAAA;AAAA,kBAGNxE,KAAK,CAACV,MAHA,IApBlB;AA6BF;AAzEL;AA4EA,SAvGP;AAwGM0D,eAAO,EAAED,UAAU,GAAGqB,mBAAS;AAAA;;AAAA,kEAEzB3D,KAAK,CAACuC,OAFmB,mDAEzBvC,yBAAK,EAAW2D,SAAX,CAFoB,EAIzBtB,UAAU;AAAA,sBAKG9C,KAAK,CAACX,iBAANW,IAA2BW,SAAS,CAACG,KALxC;AAK6C,qBAC3C9B,YAAY,CAAC8B,KANf;AAMoB,mBACpBG,GAAG,CAACH,KAPJ;AAOS,wBACJd,KAAK,CAACyE;AARX,aASYhE,KAAK,CAAC5B,OATlB,GAJe;AAAA,SAAZ,GAkBfsC;AA1HV;AA8HD,KArIQ,CAAT3C;AAuIA,WAAOX,WAAW,CAAC,EAAD,EAAK8D,SAAL,EAAgBC,SAAhB,EAA2BC,QAA3B,CAAlB;AACF;AA9O4D,CAApB,CAAnC","names":["VCounter","makeVFieldProps","VField","makeVInputProps","VInput","useFocus","forwardRefs","useProxiedModel","Intersect","cloneVNode","computed","nextTick","ref","callEvent","filterInputAttrs","genericComponent","propsFactory","useRender","activeTypes","makeVTextFieldProps","autofocus","Boolean","counter","Number","String","counterValue","Function","prefix","placeholder","persistentPlaceholder","persistentCounter","suffix","role","type","default","modelModifiers","Object","VTextField","name","directives","inheritAttrs","props","emits","e","focused","val","setup","_ref","attrs","emit","slots","model","isFocused","focus","blur","value","toString","length","max","maxlength","undefined","isPlainOrUnderlined","includes","variant","onIntersect","isIntersecting","entries","target","vInputRef","vFieldRef","inputRef","isActive","active","onFocus","document","activeElement","onControlMousedown","preventDefault","onControlClick","onClear","stopPropagation","onInput","el","trim","caretPosition","selectionStart","selectionEnd","hasCounter","hasDetails","details","rootAttrs","inputAttrs","filterProps","_","modelValue","inputProps","fieldProps","$event","class","style","_ref2","id","isDisabled","isDirty","isReadonly","isValid","dirty","_ref3","fieldClass","slotProps","inputNode","handler","once","_createVNode","disabled"],"sources":["../../../src/components/VTextField/VTextField.tsx"],"sourcesContent":["// Styles\nimport './VTextField.sass'\n\n// Components\nimport { VCounter } from '@/components/VCounter/VCounter'\nimport { makeVFieldProps, VField } from '@/components/VField/VField'\nimport { makeVInputProps, VInput } from '@/components/VInput/VInput'\n\n// Composables\nimport { useFocus } from '@/composables/focus'\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Directives\nimport Intersect from '@/directives/intersect'\n\n// Utilities\nimport { cloneVNode, computed, nextTick, ref } from 'vue'\nimport { callEvent, filterInputAttrs, genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { VCounterSlot } from '@/components/VCounter/VCounter'\nimport type { VFieldSlots } from '@/components/VField/VField'\nimport type { VInputSlots } from '@/components/VInput/VInput'\n\nconst activeTypes = ['color', 'file', 'time', 'date', 'datetime-local', 'week', 'month']\n\nexport const makeVTextFieldProps = propsFactory({\n  autofocus: Boolean,\n  counter: [Boolean, Number, String],\n  counterValue: [Number, Function] as PropType<number | ((value: any) => number)>,\n  prefix: String,\n  placeholder: String,\n  persistentPlaceholder: Boolean,\n  persistentCounter: Boolean,\n  suffix: String,\n  role: String,\n  type: {\n    type: String,\n    default: 'text',\n  },\n  modelModifiers: Object as PropType<Record<string, boolean>>,\n\n  ...makeVInputProps(),\n  ...makeVFieldProps(),\n}, 'VTextField')\n\nexport type VTextFieldSlots = Omit<VInputSlots & VFieldSlots, 'default'> & {\n  default: never\n  counter: VCounterSlot\n}\n\nexport const VTextField = genericComponent<VTextFieldSlots>()({\n  name: 'VTextField',\n\n  directives: { Intersect },\n\n  inheritAttrs: false,\n\n  props: makeVTextFieldProps(),\n\n  emits: {\n    'click:control': (e: MouseEvent) => true,\n    'mousedown:control': (e: MouseEvent) => true,\n    'update:focused': (focused: boolean) => true,\n    'update:modelValue': (val: string) => true,\n  },\n\n  setup (props, { attrs, emit, slots }) {\n    const model = useProxiedModel(props, 'modelValue')\n    const { isFocused, focus, blur } = useFocus(props)\n    const counterValue = computed(() => {\n      return typeof props.counterValue === 'function' ? props.counterValue(model.value)\n        : typeof props.counterValue === 'number' ? props.counterValue\n        : (model.value ?? '').toString().length\n    })\n    const max = computed(() => {\n      if (attrs.maxlength) return attrs.maxlength as unknown as undefined\n\n      if (\n        !props.counter ||\n        (typeof props.counter !== 'number' &&\n        typeof props.counter !== 'string')\n      ) return undefined\n\n      return props.counter\n    })\n\n    const isPlainOrUnderlined = computed(() => ['plain', 'underlined'].includes(props.variant))\n\n    function onIntersect (\n      isIntersecting: boolean,\n      entries: IntersectionObserverEntry[]\n    ) {\n      if (!props.autofocus || !isIntersecting) return\n\n      (entries[0].target as HTMLInputElement)?.focus?.()\n    }\n\n    const vInputRef = ref<VInput>()\n    const vFieldRef = ref<VField>()\n    const inputRef = ref<HTMLInputElement>()\n    const isActive = computed(() => (\n      activeTypes.includes(props.type) ||\n      props.persistentPlaceholder ||\n      isFocused.value ||\n      props.active\n    ))\n    function onFocus () {\n      if (inputRef.value !== document.activeElement) {\n        inputRef.value?.focus()\n      }\n\n      if (!isFocused.value) focus()\n    }\n    function onControlMousedown (e: MouseEvent) {\n      emit('mousedown:control', e)\n\n      if (e.target === inputRef.value) return\n\n      onFocus()\n      e.preventDefault()\n    }\n    function onControlClick (e: MouseEvent) {\n      onFocus()\n\n      emit('click:control', e)\n    }\n    function onClear (e: MouseEvent) {\n      e.stopPropagation()\n\n      onFocus()\n\n      nextTick(() => {\n        model.value = null\n\n        callEvent(props['onClick:clear'], e)\n      })\n    }\n    function onInput (e: Event) {\n      const el = e.target as HTMLInputElement\n      model.value = el.value\n      if (\n        props.modelModifiers?.trim &&\n        ['text', 'search', 'password', 'tel', 'url'].includes(props.type)\n      ) {\n        const caretPosition = [el.selectionStart, el.selectionEnd]\n        nextTick(() => {\n          el.selectionStart = caretPosition[0]\n          el.selectionEnd = caretPosition[1]\n        })\n      }\n    }\n\n    useRender(() => {\n      const hasCounter = !!(slots.counter || (props.counter !== false && props.counter != null))\n      const hasDetails = !!(hasCounter || slots.details)\n      const [rootAttrs, inputAttrs] = filterInputAttrs(attrs)\n      const { modelValue: _, ...inputProps } = VInput.filterProps(props)\n      const fieldProps = VField.filterProps(props)\n\n      return (\n        <VInput\n          ref={ vInputRef }\n          v-model={ model.value }\n          class={[\n            'v-text-field',\n            {\n              'v-text-field--prefixed': props.prefix,\n              'v-text-field--suffixed': props.suffix,\n              'v-input--plain-underlined': isPlainOrUnderlined.value,\n            },\n            props.class,\n          ]}\n          style={ props.style }\n          { ...rootAttrs }\n          { ...inputProps }\n          centerAffix={ !isPlainOrUnderlined.value }\n          focused={ isFocused.value }\n        >\n          {{\n            ...slots,\n            default: ({\n              id,\n              isDisabled,\n              isDirty,\n              isReadonly,\n              isValid,\n            }) => (\n              <VField\n                ref={ vFieldRef }\n                onMousedown={ onControlMousedown }\n                onClick={ onControlClick }\n                onClick:clear={ onClear }\n                onClick:prependInner={ props['onClick:prependInner'] }\n                onClick:appendInner={ props['onClick:appendInner'] }\n                role={ props.role }\n                { ...fieldProps }\n                id={ id.value }\n                active={ isActive.value || isDirty.value }\n                dirty={ isDirty.value || props.dirty }\n                disabled={ isDisabled.value }\n                focused={ isFocused.value }\n                error={ isValid.value === false }\n              >\n                {{\n                  ...slots,\n                  default: ({\n                    props: { class: fieldClass, ...slotProps },\n                  }) => {\n                    const inputNode = (\n                      <input\n                        ref={ inputRef }\n                        value={ model.value }\n                        onInput={ onInput }\n                        v-intersect={[{\n                          handler: onIntersect,\n                        }, null, ['once']]}\n                        autofocus={ props.autofocus }\n                        readonly={ isReadonly.value }\n                        disabled={ isDisabled.value }\n                        name={ props.name }\n                        placeholder={ props.placeholder }\n                        size={ 1 }\n                        type={ props.type }\n                        onFocus={ onFocus }\n                        onBlur={ blur }\n                        { ...slotProps }\n                        { ...inputAttrs }\n                      />\n                    )\n\n                    return (\n                      <>\n                        { props.prefix && (\n                          <span class=\"v-text-field__prefix\">\n                            <span class=\"v-text-field__prefix__text\">\n                              { props.prefix }\n                            </span>\n                          </span>\n                        )}\n\n                        { slots.default ? (\n                          <div\n                            class={ fieldClass }\n                            data-no-activator=\"\"\n                          >\n                            { slots.default() }\n                            { inputNode }\n                          </div>\n                        ) : cloneVNode(inputNode, { class: fieldClass })}\n\n                        { props.suffix && (\n                          <span class=\"v-text-field__suffix\">\n                            <span class=\"v-text-field__suffix__text\">\n                              { props.suffix }\n                            </span>\n                          </span>\n                        )}\n                      </>\n                    )\n                  },\n                }}\n              </VField>\n            ),\n            details: hasDetails ? slotProps => (\n              <>\n                { slots.details?.(slotProps) }\n\n                { hasCounter && (\n                  <>\n                    <span />\n\n                    <VCounter\n                      active={ props.persistentCounter || isFocused.value }\n                      value={ counterValue.value }\n                      max={ max.value }\n                      disabled={ props.disabled }\n                      v-slots:default={ slots.counter }\n                    />\n                  </>\n                )}\n              </>\n            ) : undefined,\n          }}\n        </VInput>\n      )\n    })\n\n    return forwardRefs({}, vInputRef, vFieldRef, inputRef)\n  },\n})\n\nexport type VTextField = InstanceType<typeof VTextField>\n"]},"metadata":{},"sourceType":"module"}
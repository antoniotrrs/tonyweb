{"ast":null,"code":"import _defineProperty from \"/Users/antoniotorres/Documents/tony/tonyweb/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/Users/antoniotorres/Documents/tony/tonyweb/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport { Fragment as _Fragment, createVNode as _createVNode } from \"vue\"; // Styles\n\nimport \"./VEmptyState.css\"; // Components\n\nimport { VBtn } from \"../VBtn/index.js\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.js\";\nimport { VIcon } from \"../VIcon/index.js\";\nimport { VImg } from \"../VImg/index.js\"; // Composables\n\nimport { useBackgroundColor } from \"../../composables/color.js\";\nimport { makeComponentProps } from \"../../composables/component.js\";\nimport { makeDimensionProps, useDimension } from \"../../composables/dimensions.js\";\nimport { useDisplay } from \"../../composables/display.js\";\nimport { IconValue } from \"../../composables/icons.js\";\nimport { makeSizeProps } from \"../../composables/size.js\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.js\"; // Utilities\n\nimport { toRef } from 'vue';\nimport { convertToUnit, genericComponent, propsFactory, useRender } from \"../../util/index.js\"; // Types\n// Types\n\nexport var makeVEmptyStateProps = propsFactory(_objectSpread(_objectSpread(_objectSpread(_objectSpread({\n  actionText: String,\n  bgColor: String,\n  color: String,\n  icon: IconValue,\n  image: String,\n  justify: {\n    type: String,\n    default: 'center'\n  },\n  headline: String,\n  title: String,\n  text: String,\n  textWidth: {\n    type: [Number, String],\n    default: 500\n  },\n  href: String,\n  to: String\n}, makeComponentProps()), makeDimensionProps()), makeSizeProps({\n  size: undefined\n})), makeThemeProps()), 'VEmptyState');\nexport var VEmptyState = genericComponent()({\n  name: 'VEmptyState',\n  props: makeVEmptyStateProps(),\n  emits: {\n    'click:action': function clickAction(e) {\n      return true;\n    }\n  },\n  setup: function setup(props, _ref) {\n    var emit = _ref.emit,\n        slots = _ref.slots;\n\n    var _provideTheme = provideTheme(props),\n        themeClasses = _provideTheme.themeClasses;\n\n    var _useBackgroundColor = useBackgroundColor(toRef(props, 'bgColor')),\n        backgroundColorClasses = _useBackgroundColor.backgroundColorClasses,\n        backgroundColorStyles = _useBackgroundColor.backgroundColorStyles;\n\n    var _useDimension = useDimension(props),\n        dimensionStyles = _useDimension.dimensionStyles;\n\n    var _useDisplay = useDisplay(),\n        displayClasses = _useDisplay.displayClasses;\n\n    function onClickAction(e) {\n      emit('click:action', e);\n    }\n\n    useRender(function () {\n      var _slots$headline, _slots$headline2, _slots$title, _slots$title2, _slots$text, _slots$text2, _props$color;\n\n      var hasActions = !!(slots.actions || props.actionText);\n      var hasHeadline = !!(slots.headline || props.headline);\n      var hasTitle = !!(slots.title || props.title);\n      var hasText = !!(slots.text || props.text);\n      var hasMedia = !!(slots.media || props.image || props.icon);\n      var size = props.size || (props.image ? 200 : 96);\n      return _createVNode(\"div\", {\n        \"class\": ['v-empty-state', _defineProperty({}, \"v-empty-state--\".concat(props.justify), true), themeClasses.value, backgroundColorClasses.value, displayClasses.value, props.class],\n        \"style\": [backgroundColorStyles.value, dimensionStyles.value, props.style]\n      }, [hasMedia && _createVNode(\"div\", {\n        \"key\": \"media\",\n        \"class\": \"v-empty-state__media\"\n      }, [!slots.media ? _createVNode(_Fragment, null, [props.image ? _createVNode(VImg, {\n        \"key\": \"image\",\n        \"src\": props.image,\n        \"height\": size\n      }, null) : props.icon ? _createVNode(VIcon, {\n        \"key\": \"icon\",\n        \"color\": props.color,\n        \"size\": size,\n        \"icon\": props.icon\n      }, null) : undefined]) : _createVNode(VDefaultsProvider, {\n        \"key\": \"media-defaults\",\n        \"defaults\": {\n          VImg: {\n            src: props.image,\n            height: size\n          },\n          VIcon: {\n            size: size,\n            icon: props.icon\n          }\n        }\n      }, {\n        default: function _default() {\n          return [slots.media()];\n        }\n      })]), hasHeadline && _createVNode(\"div\", {\n        \"key\": \"headline\",\n        \"class\": \"v-empty-state__headline\"\n      }, [(_slots$headline = (_slots$headline2 = slots.headline) === null || _slots$headline2 === void 0 ? void 0 : _slots$headline2.call(slots)) !== null && _slots$headline !== void 0 ? _slots$headline : props.headline]), hasTitle && _createVNode(\"div\", {\n        \"key\": \"title\",\n        \"class\": \"v-empty-state__title\"\n      }, [(_slots$title = (_slots$title2 = slots.title) === null || _slots$title2 === void 0 ? void 0 : _slots$title2.call(slots)) !== null && _slots$title !== void 0 ? _slots$title : props.title]), hasText && _createVNode(\"div\", {\n        \"key\": \"text\",\n        \"class\": \"v-empty-state__text\",\n        \"style\": {\n          maxWidth: convertToUnit(props.textWidth)\n        }\n      }, [(_slots$text = (_slots$text2 = slots.text) === null || _slots$text2 === void 0 ? void 0 : _slots$text2.call(slots)) !== null && _slots$text !== void 0 ? _slots$text : props.text]), slots.default && _createVNode(\"div\", {\n        \"key\": \"content\",\n        \"class\": \"v-empty-state__content\"\n      }, [slots.default()]), hasActions && _createVNode(\"div\", {\n        \"key\": \"actions\",\n        \"class\": \"v-empty-state__actions\"\n      }, [_createVNode(VDefaultsProvider, {\n        \"defaults\": {\n          VBtn: {\n            class: 'v-empty-state__action-btn',\n            color: (_props$color = props.color) !== null && _props$color !== void 0 ? _props$color : 'surface-variant',\n            href: props.href,\n            text: props.actionText,\n            to: props.to\n          }\n        }\n      }, {\n        default: function _default() {\n          var _slots$actions, _slots$actions2;\n\n          return [(_slots$actions = (_slots$actions2 = slots.actions) === null || _slots$actions2 === void 0 ? void 0 : _slots$actions2.call(slots, {\n            props: {\n              onClick: onClickAction\n            }\n          })) !== null && _slots$actions !== void 0 ? _slots$actions : _createVNode(VBtn, {\n            \"onClick\": onClickAction\n          }, null)];\n        }\n      })])]);\n    });\n    return {};\n  }\n});","map":{"version":3,"mappings":"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","names":["VBtn","VDefaultsProvider","VIcon","VImg","useBackgroundColor","makeComponentProps","makeDimensionProps","useDimension","useDisplay","IconValue","makeSizeProps","makeThemeProps","provideTheme","toRef","convertToUnit","genericComponent","propsFactory","useRender","makeVEmptyStateProps","actionText","String","bgColor","color","icon","image","justify","type","default","headline","title","text","textWidth","Number","href","to","size","undefined","VEmptyState","name","props","emits","e","setup","_ref","emit","slots","themeClasses","backgroundColorClasses","backgroundColorStyles","dimensionStyles","displayClasses","onClickAction","hasActions","actions","hasHeadline","hasTitle","hasText","hasMedia","media","value","class","style","_createVNode","src","height","maxWidth","onClick"],"sources":["../../../src/components/VEmptyState/VEmptyState.tsx"],"sourcesContent":["// Styles\nimport './VEmptyState.sass'\n\n// Components\nimport { VBtn } from '@/components/VBtn'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VIcon } from '@/components/VIcon'\nimport { VImg } from '@/components/VImg'\n\n// Composables\nimport { useBackgroundColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { useDisplay } from '@/composables/display'\nimport { IconValue } from '@/composables/icons'\nimport { makeSizeProps } from '@/composables/size'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\n\n// Utilities\nimport { toRef } from 'vue'\nimport { convertToUnit, genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\n// Types\n\nexport type VEmptyStateSlots = {\n  actions: {\n    props: {\n      onClick: (e: Event) => void\n    }\n  }\n  default: never\n  headline: never\n  title: never\n  media: never\n  text: never\n}\n\nexport const makeVEmptyStateProps = propsFactory({\n  actionText: String,\n  bgColor: String,\n  color: String,\n  icon: IconValue,\n  image: String,\n  justify: {\n    type: String as PropType<'start' | 'center' | 'end'>,\n    default: 'center',\n  },\n  headline: String,\n  title: String,\n  text: String,\n  textWidth: {\n    type: [Number, String],\n    default: 500,\n  },\n  href: String,\n  to: String,\n\n  ...makeComponentProps(),\n  ...makeDimensionProps(),\n  ...makeSizeProps({ size: undefined }),\n  ...makeThemeProps(),\n}, 'VEmptyState')\n\nexport const VEmptyState = genericComponent<VEmptyStateSlots>()({\n  name: 'VEmptyState',\n\n  props: makeVEmptyStateProps(),\n\n  emits: {\n    'click:action': (e: Event) => true,\n  },\n\n  setup (props, { emit, slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'bgColor'))\n    const { dimensionStyles } = useDimension(props)\n    const { displayClasses } = useDisplay()\n\n    function onClickAction (e: Event) {\n      emit('click:action', e)\n    }\n\n    useRender(() => {\n      const hasActions = !!(slots.actions || props.actionText)\n      const hasHeadline = !!(slots.headline || props.headline)\n      const hasTitle = !!(slots.title || props.title)\n      const hasText = !!(slots.text || props.text)\n      const hasMedia = !!(slots.media || props.image || props.icon)\n      const size = props.size || (props.image ? 200 : 96)\n\n      return (\n        <div\n          class={[\n            'v-empty-state',\n            {\n              [`v-empty-state--${props.justify}`]: true,\n            },\n            themeClasses.value,\n            backgroundColorClasses.value,\n            displayClasses.value,\n            props.class,\n          ]}\n          style={[\n            backgroundColorStyles.value,\n            dimensionStyles.value,\n            props.style,\n          ]}\n        >\n          { hasMedia && (\n            <div key=\"media\" class=\"v-empty-state__media\">\n              { !slots.media ? (\n                <>\n                  { props.image ? (\n                    <VImg\n                      key=\"image\"\n                      src={ props.image }\n                      height={ size }\n                    />\n                  ) : props.icon ? (\n                    <VIcon\n                      key=\"icon\"\n                      color={ props.color }\n                      size={ size }\n                      icon={ props.icon }\n                    />\n                  ) : undefined }\n                </>\n              ) : (\n                <VDefaultsProvider\n                  key=\"media-defaults\"\n                  defaults={{\n                    VImg: {\n                      src: props.image,\n                      height: size,\n                    },\n                    VIcon: {\n                      size,\n                      icon: props.icon,\n                    },\n                  }}\n                >\n                  { slots.media() }\n                </VDefaultsProvider>\n              )}\n            </div>\n          )}\n\n          { hasHeadline && (\n            <div key=\"headline\" class=\"v-empty-state__headline\">\n              { slots.headline?.() ?? props.headline }\n            </div>\n          )}\n\n          { hasTitle && (\n            <div key=\"title\" class=\"v-empty-state__title\">\n              { slots.title?.() ?? props.title }\n            </div>\n          )}\n\n          { hasText && (\n            <div\n              key=\"text\"\n              class=\"v-empty-state__text\"\n              style={{\n                maxWidth: convertToUnit(props.textWidth),\n              }}\n            >\n              { slots.text?.() ?? props.text }\n            </div>\n          )}\n\n          { slots.default && (\n            <div key=\"content\" class=\"v-empty-state__content\">\n              { slots.default() }\n            </div>\n          )}\n\n          { hasActions && (\n            <div key=\"actions\" class=\"v-empty-state__actions\">\n              <VDefaultsProvider\n                defaults={{\n                  VBtn: {\n                    class: 'v-empty-state__action-btn',\n                    color: props.color ?? 'surface-variant',\n                    href: props.href,\n                    text: props.actionText,\n                    to: props.to,\n                  },\n                }}\n              >\n                {\n                  slots.actions?.({ props: { onClick: onClickAction } }) ?? (\n                    <VBtn onClick={ onClickAction } />\n                  )\n                }\n              </VDefaultsProvider>\n            </div>\n          )}\n        </div>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VEmptyState = InstanceType<typeof VEmptyState>\n"]},"metadata":{},"sourceType":"module"}
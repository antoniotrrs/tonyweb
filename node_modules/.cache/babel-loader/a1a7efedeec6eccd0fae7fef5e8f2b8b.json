{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n// Utilities\nimport { computed, inject, provide, ref, shallowRef, watch, watchEffect } from 'vue';\nimport { createRange, darken, getCurrentInstance, getForeground, getLuma, IN_BROWSER, lighten, mergeDeep, parseColor, propsFactory, RGBtoHex } from \"../util/index.js\"; // Types\n\nexport const ThemeSymbol = Symbol.for('vuetify:theme');\nexport const makeThemeProps = propsFactory({\n  theme: String\n}, 'theme');\n\nfunction genDefaults() {\n  return {\n    defaultTheme: 'light',\n    variations: {\n      colors: [],\n      lighten: 0,\n      darken: 0\n    },\n    themes: {\n      light: {\n        dark: false,\n        colors: {\n          background: '#FFFFFF',\n          surface: '#FFFFFF',\n          'surface-bright': '#FFFFFF',\n          'surface-light': '#EEEEEE',\n          'surface-variant': '#424242',\n          'on-surface-variant': '#EEEEEE',\n          primary: '#1867C0',\n          'primary-darken-1': '#1F5592',\n          secondary: '#48A9A6',\n          'secondary-darken-1': '#018786',\n          error: '#B00020',\n          info: '#2196F3',\n          success: '#4CAF50',\n          warning: '#FB8C00'\n        },\n        variables: {\n          'border-color': '#000000',\n          'border-opacity': 0.12,\n          'high-emphasis-opacity': 0.87,\n          'medium-emphasis-opacity': 0.60,\n          'disabled-opacity': 0.38,\n          'idle-opacity': 0.04,\n          'hover-opacity': 0.04,\n          'focus-opacity': 0.12,\n          'selected-opacity': 0.08,\n          'activated-opacity': 0.12,\n          'pressed-opacity': 0.12,\n          'dragged-opacity': 0.08,\n          'theme-kbd': '#212529',\n          'theme-on-kbd': '#FFFFFF',\n          'theme-code': '#F5F5F5',\n          'theme-on-code': '#000000'\n        }\n      },\n      dark: {\n        dark: true,\n        colors: {\n          background: '#121212',\n          surface: '#212121',\n          'surface-bright': '#ccbfd6',\n          'surface-light': '#424242',\n          'surface-variant': '#c8c8c8',\n          'on-surface-variant': '#000000',\n          primary: '#2196F3',\n          'primary-darken-1': '#277CC1',\n          secondary: '#54B6B2',\n          'secondary-darken-1': '#48A9A6',\n          error: '#CF6679',\n          info: '#2196F3',\n          success: '#4CAF50',\n          warning: '#FB8C00'\n        },\n        variables: {\n          'border-color': '#FFFFFF',\n          'border-opacity': 0.12,\n          'high-emphasis-opacity': 1,\n          'medium-emphasis-opacity': 0.70,\n          'disabled-opacity': 0.50,\n          'idle-opacity': 0.10,\n          'hover-opacity': 0.04,\n          'focus-opacity': 0.12,\n          'selected-opacity': 0.08,\n          'activated-opacity': 0.12,\n          'pressed-opacity': 0.16,\n          'dragged-opacity': 0.08,\n          'theme-kbd': '#212529',\n          'theme-on-kbd': '#FFFFFF',\n          'theme-code': '#343434',\n          'theme-on-code': '#CCCCCC'\n        }\n      }\n    },\n    stylesheetId: 'vuetify-theme-stylesheet'\n  };\n}\n\nfunction parseThemeOptions() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : genDefaults();\n  const defaults = genDefaults();\n  if (!options) return { ...defaults,\n    isDisabled: true\n  };\n  const themes = {};\n\n  for (const [key, theme] of Object.entries(options.themes ?? {})) {\n    const defaultTheme = theme.dark || key === 'dark' ? defaults.themes?.dark : defaults.themes?.light;\n    themes[key] = mergeDeep(defaultTheme, theme);\n  }\n\n  return mergeDeep(defaults, { ...options,\n    themes\n  });\n}\n\nfunction createCssClass(lines, selector, content, scope) {\n  lines.push(`${getScopedSelector(selector, scope)} {\\n`, ...content.map(line => `  ${line};\\n`), '}\\n');\n}\n\nfunction genCssVariables(theme) {\n  const lightOverlay = theme.dark ? 2 : 1;\n  const darkOverlay = theme.dark ? 1 : 2;\n  const variables = [];\n\n  for (const [key, value] of Object.entries(theme.colors)) {\n    const rgb = parseColor(value);\n    variables.push(`--v-theme-${key}: ${rgb.r},${rgb.g},${rgb.b}`);\n\n    if (!key.startsWith('on-')) {\n      variables.push(`--v-theme-${key}-overlay-multiplier: ${getLuma(value) > 0.18 ? lightOverlay : darkOverlay}`);\n    }\n  }\n\n  for (const [key, value] of Object.entries(theme.variables)) {\n    const color = typeof value === 'string' && value.startsWith('#') ? parseColor(value) : undefined;\n    const rgb = color ? `${color.r}, ${color.g}, ${color.b}` : undefined;\n    variables.push(`--v-${key}: ${rgb ?? value}`);\n  }\n\n  return variables;\n}\n\nfunction genVariation(name, color, variations) {\n  const object = {};\n\n  if (variations) {\n    for (const variation of ['lighten', 'darken']) {\n      const fn = variation === 'lighten' ? lighten : darken;\n\n      for (const amount of createRange(variations[variation], 1)) {\n        object[`${name}-${variation}-${amount}`] = RGBtoHex(fn(parseColor(color), amount));\n      }\n    }\n  }\n\n  return object;\n}\n\nfunction genVariations(colors, variations) {\n  if (!variations) return {};\n  let variationColors = {};\n\n  for (const name of variations.colors) {\n    const color = colors[name];\n    if (!color) continue;\n    variationColors = { ...variationColors,\n      ...genVariation(name, color, variations)\n    };\n  }\n\n  return variationColors;\n}\n\nfunction genOnColors(colors) {\n  const onColors = {};\n\n  for (const color of Object.keys(colors)) {\n    if (color.startsWith('on-') || colors[`on-${color}`]) continue;\n    const onColor = `on-${color}`;\n    const colorVal = parseColor(colors[color]);\n    onColors[onColor] = getForeground(colorVal);\n  }\n\n  return onColors;\n}\n\nfunction getScopedSelector(selector, scope) {\n  if (!scope) return selector;\n  const scopeSelector = `:where(${scope})`;\n  return selector === ':root' ? scopeSelector : `${scopeSelector} ${selector}`;\n}\n\nfunction upsertStyles(styleEl, styles) {\n  if (!styleEl) return;\n  styleEl.innerHTML = styles;\n}\n\nfunction getOrCreateStyleElement(id, cspNonce) {\n  if (!IN_BROWSER) return null;\n  let style = document.getElementById(id);\n\n  if (!style) {\n    style = document.createElement('style');\n    style.id = id;\n    style.type = 'text/css';\n    if (cspNonce) style.setAttribute('nonce', cspNonce);\n    document.head.appendChild(style);\n  }\n\n  return style;\n} // Composables\n\n\nexport function createTheme(options) {\n  const parsedOptions = parseThemeOptions(options);\n  const name = shallowRef(parsedOptions.defaultTheme);\n  const themes = ref(parsedOptions.themes);\n  const computedThemes = computed(() => {\n    const acc = {};\n\n    for (const [name, original] of Object.entries(themes.value)) {\n      const colors = { ...original.colors,\n        ...genVariations(original.colors, parsedOptions.variations)\n      };\n      acc[name] = { ...original,\n        colors: { ...colors,\n          ...genOnColors(colors)\n        }\n      };\n    }\n\n    return acc;\n  });\n  const current = computed(() => computedThemes.value[name.value]);\n  const styles = computed(() => {\n    const lines = [];\n\n    if (current.value?.dark) {\n      createCssClass(lines, ':root', ['color-scheme: dark'], parsedOptions.scope);\n    }\n\n    createCssClass(lines, ':root', genCssVariables(current.value), parsedOptions.scope);\n\n    for (const [themeName, theme] of Object.entries(computedThemes.value)) {\n      createCssClass(lines, `.v-theme--${themeName}`, [`color-scheme: ${theme.dark ? 'dark' : 'normal'}`, ...genCssVariables(theme)], parsedOptions.scope);\n    }\n\n    const bgLines = [];\n    const fgLines = [];\n    const colors = new Set(Object.values(computedThemes.value).flatMap(theme => Object.keys(theme.colors)));\n\n    for (const key of colors) {\n      if (key.startsWith('on-')) {\n        createCssClass(fgLines, `.${key}`, [`color: rgb(var(--v-theme-${key})) !important`], parsedOptions.scope);\n      } else {\n        createCssClass(bgLines, `.bg-${key}`, [`--v-theme-overlay-multiplier: var(--v-theme-${key}-overlay-multiplier)`, `background-color: rgb(var(--v-theme-${key})) !important`, `color: rgb(var(--v-theme-on-${key})) !important`], parsedOptions.scope);\n        createCssClass(fgLines, `.text-${key}`, [`color: rgb(var(--v-theme-${key})) !important`], parsedOptions.scope);\n        createCssClass(fgLines, `.border-${key}`, [`--v-border-color: var(--v-theme-${key})`], parsedOptions.scope);\n      }\n    }\n\n    lines.push(...bgLines, ...fgLines);\n    return lines.map((str, i) => i === 0 ? str : `    ${str}`).join('');\n  });\n\n  function install(app) {\n    if (parsedOptions.isDisabled) return;\n    const head = app._context.provides.usehead;\n\n    if (head) {\n      function getHead() {\n        return {\n          style: [{\n            textContent: styles.value,\n            id: parsedOptions.stylesheetId,\n            nonce: parsedOptions.cspNonce || false\n          }]\n        };\n      }\n\n      if (head.push) {\n        const entry = head.push(getHead);\n\n        if (IN_BROWSER) {\n          watch(styles, () => {\n            entry.patch(getHead);\n          });\n        }\n      } else {\n        if (IN_BROWSER) {\n          head.addHeadObjs(computed(getHead));\n          watchEffect(() => head.updateDOM());\n        } else {\n          head.addHeadObjs(getHead());\n        }\n      }\n    } else {\n      if (IN_BROWSER) {\n        watch(styles, updateStyles, {\n          immediate: true\n        });\n      } else {\n        updateStyles();\n      }\n\n      function updateStyles() {\n        upsertStyles(getOrCreateStyleElement(parsedOptions.stylesheetId, parsedOptions.cspNonce), styles.value);\n      }\n    }\n  }\n\n  const themeClasses = computed(() => parsedOptions.isDisabled ? undefined : `v-theme--${name.value}`);\n  return {\n    install,\n    isDisabled: parsedOptions.isDisabled,\n    name,\n    themes,\n    current,\n    computedThemes,\n    themeClasses,\n    styles,\n    global: {\n      name,\n      current\n    }\n  };\n}\nexport function provideTheme(props) {\n  getCurrentInstance('provideTheme');\n  const theme = inject(ThemeSymbol, null);\n  if (!theme) throw new Error('Could not find Vuetify theme injection');\n  const name = computed(() => props.theme ?? theme.name.value);\n  const current = computed(() => theme.themes.value[name.value]);\n  const themeClasses = computed(() => theme.isDisabled ? undefined : `v-theme--${name.value}`);\n  const newTheme = { ...theme,\n    name,\n    current,\n    themeClasses\n  };\n  provide(ThemeSymbol, newTheme);\n  return newTheme;\n}\nexport function useTheme() {\n  getCurrentInstance('useTheme');\n  const theme = inject(ThemeSymbol, null);\n  if (!theme) throw new Error('Could not find Vuetify theme injection');\n  return theme;\n}","map":{"version":3,"mappings":";AAAA;AACA,SACEA,QADF,EAEEC,MAFF,EAGEC,OAHF,EAIEC,GAJF,EAKEC,UALF,EAMEC,KANF,EAOEC,WAPF,QAQO,KARP;AAQY,SAEVC,WAFU,EAGVC,MAHU,EAIVC,kBAJU,EAKVC,aALU,EAMVC,OANU,EAOVC,UAPU,EAQVC,OARU,EASVC,SATU,EAUVC,UAVU,EAWVC,YAXU,EAYVC,QAZU,QAYF,kBAZE,C,CAeZ;;AAkFA,OAAO,MAAMC,WAAwC,GAAGC,MAAM,CAACC,GAAPD,CAAW,eAAXA,CAAjD;AAEP,OAAO,MAAME,cAAc,GAAGL,YAAY,CAAC;AACzCM,OAAK,EAAEC;AADkC,CAAD,EAEvC,OAFuC,CAAnC;;AAIP,SAASC,WAAT,GAAwB;AACtB,SAAO;AACLC,gBAAY,EAAE,OADT;AAELC,cAAU,EAAE;AAAEC,YAAM,EAAE,EAAV;AAAcd,aAAO,EAAE,CAAvB;AAA0BL,YAAM,EAAE;AAAlC,KAFP;AAGLoB,UAAM,EAAE;AACNC,WAAK,EAAE;AACLC,YAAI,EAAE,KADD;AAELH,cAAM,EAAE;AACNI,oBAAU,EAAE,SADN;AAENC,iBAAO,EAAE,SAFH;AAGN,4BAAkB,SAHZ;AAIN,2BAAiB,SAJX;AAKN,6BAAmB,SALb;AAMN,gCAAsB,SANhB;AAONC,iBAAO,EAAE,SAPH;AAQN,8BAAoB,SARd;AASNC,mBAAS,EAAE,SATL;AAUN,gCAAsB,SAVhB;AAWNC,eAAK,EAAE,SAXD;AAYNC,cAAI,EAAE,SAZA;AAaNC,iBAAO,EAAE,SAbH;AAcNC,iBAAO,EAAE;AAdH,SAFH;AAkBLC,iBAAS,EAAE;AACT,0BAAgB,SADP;AAET,4BAAkB,IAFT;AAGT,mCAAyB,IAHhB;AAIT,qCAA2B,IAJlB;AAKT,8BAAoB,IALX;AAMT,0BAAgB,IANP;AAOT,2BAAiB,IAPR;AAQT,2BAAiB,IARR;AAST,8BAAoB,IATX;AAUT,+BAAqB,IAVZ;AAWT,6BAAmB,IAXV;AAYT,6BAAmB,IAZV;AAaT,uBAAa,SAbJ;AAcT,0BAAgB,SAdP;AAeT,wBAAc,SAfL;AAgBT,2BAAiB;AAhBR;AAlBN,OADD;AAsCNT,UAAI,EAAE;AACJA,YAAI,EAAE,IADF;AAEJH,cAAM,EAAE;AACNI,oBAAU,EAAE,SADN;AAENC,iBAAO,EAAE,SAFH;AAGN,4BAAkB,SAHZ;AAIN,2BAAiB,SAJX;AAKN,6BAAmB,SALb;AAMN,gCAAsB,SANhB;AAONC,iBAAO,EAAE,SAPH;AAQN,8BAAoB,SARd;AASNC,mBAAS,EAAE,SATL;AAUN,gCAAsB,SAVhB;AAWNC,eAAK,EAAE,SAXD;AAYNC,cAAI,EAAE,SAZA;AAaNC,iBAAO,EAAE,SAbH;AAcNC,iBAAO,EAAE;AAdH,SAFJ;AAkBJC,iBAAS,EAAE;AACT,0BAAgB,SADP;AAET,4BAAkB,IAFT;AAGT,mCAAyB,CAHhB;AAIT,qCAA2B,IAJlB;AAKT,8BAAoB,IALX;AAMT,0BAAgB,IANP;AAOT,2BAAiB,IAPR;AAQT,2BAAiB,IARR;AAST,8BAAoB,IATX;AAUT,+BAAqB,IAVZ;AAWT,6BAAmB,IAXV;AAYT,6BAAmB,IAZV;AAaT,uBAAa,SAbJ;AAcT,0BAAgB,SAdP;AAeT,wBAAc,SAfL;AAgBT,2BAAiB;AAhBR;AAlBP;AAtCA,KAHH;AA+ELC,gBAAY,EAAE;AA/ET,GAAP;AAiFF;;AAEA,SAASC,iBAAT,GAAyF;AAAA,MAA7DC,OAAqB,uEAAGlB,WAAW,EAA0B;AACvF,QAAMmB,QAAQ,GAAGnB,WAAW,EAA5B;AAEA,MAAI,CAACkB,OAAL,EAAc,OAAO,EAAE,GAAGC,QAAL;AAAeC,cAAU,EAAE;AAA3B,GAAP;AAEd,QAAMhB,MAA+C,GAAG,EAAxD;;AACA,OAAK,MAAM,CAACiB,GAAD,EAAMvB,KAAN,CAAX,IAA2BwB,MAAM,CAACC,OAAPD,CAAeJ,OAAO,CAACd,MAARc,IAAkB,EAAjCI,CAA3B,EAAiE;AAC/D,UAAMrB,YAAY,GAAGH,KAAK,CAACQ,IAANR,IAAcuB,GAAG,KAAK,MAAtBvB,GACjBqB,QAAQ,CAACf,MAATe,EAAiBb,IADAR,GAEjBqB,QAAQ,CAACf,MAATe,EAAiBd,KAFrB;AAGAD,UAAM,CAACiB,GAAD,CAANjB,GAAcd,SAAS,CAACW,YAAD,EAAeH,KAAf,CAAvBM;AACF;;AAEA,SAAOd,SAAS,CACd6B,QADc,EAEd,EAAE,GAAGD,OAAL;AAAcd;AAAd,GAFc,CAAhB;AAIF;;AAEA,SAASoB,cAAT,CAAyBC,KAAzB,EAA0CC,QAA1C,EAA4DC,OAA5D,EAA+EC,KAA/E,EAA+F;AAC7FH,OAAK,CAACI,IAANJ,CACE,GAAGK,iBAAiB,CAACJ,QAAD,EAAWE,KAAX,CAAiB,MADvCH,EAEE,GAAGE,OAAO,CAACI,GAARJ,CAAYK,IAAI,IAAI,KAAKA,IAAI,KAA7BL,CAFLF,EAGE,KAHFA;AAKF;;AAEA,SAASQ,eAAT,CAA0BnC,KAA1B,EAA0D;AACxD,QAAMoC,YAAY,GAAGpC,KAAK,CAACQ,IAANR,GAAa,CAAbA,GAAiB,CAAtC;AACA,QAAMqC,WAAW,GAAGrC,KAAK,CAACQ,IAANR,GAAa,CAAbA,GAAiB,CAArC;AAEA,QAAMiB,SAAmB,GAAG,EAA5B;;AACA,OAAK,MAAM,CAACM,GAAD,EAAMe,KAAN,CAAX,IAA2Bd,MAAM,CAACC,OAAPD,CAAexB,KAAK,CAACK,MAArBmB,CAA3B,EAAyD;AACvD,UAAMe,GAAG,GAAG9C,UAAU,CAAC6C,KAAD,CAAtB;AACArB,aAAS,CAACc,IAAVd,CAAe,aAAaM,GAAG,KAAKgB,GAAG,CAACC,CAAC,IAAID,GAAG,CAACE,CAAC,IAAIF,GAAG,CAACG,CAAC,EAA3DzB;;AACA,QAAI,CAACM,GAAG,CAACoB,UAAJpB,CAAe,KAAfA,CAAL,EAA4B;AAC1BN,eAAS,CAACc,IAAVd,CAAe,aAAaM,GAAG,wBAAwBlC,OAAO,CAACiD,KAAD,CAAPjD,GAAiB,IAAjBA,GAAwB+C,YAAxB/C,GAAuCgD,WAAW,EAAzGpB;AACF;AACF;;AAEA,OAAK,MAAM,CAACM,GAAD,EAAMe,KAAN,CAAX,IAA2Bd,MAAM,CAACC,OAAPD,CAAexB,KAAK,CAACiB,SAArBO,CAA3B,EAA4D;AAC1D,UAAMoB,KAAK,GAAG,OAAON,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,CAACK,UAANL,CAAiB,GAAjBA,CAA7B,GAAqD7C,UAAU,CAAC6C,KAAD,CAA/D,GAAyEO,SAAvF;AACA,UAAMN,GAAG,GAAGK,KAAK,GAAG,GAAGA,KAAK,CAACJ,CAAC,KAAKI,KAAK,CAACH,CAAC,KAAKG,KAAK,CAACF,CAAC,EAArC,GAA0CG,SAA3D;AACA5B,aAAS,CAACc,IAAVd,CAAe,OAAOM,GAAG,KAAKgB,GAAG,IAAID,KAAK,EAA1CrB;AACF;;AAEA,SAAOA,SAAP;AACF;;AAEA,SAAS6B,YAAT,CAAuBC,IAAvB,EAAqCH,KAArC,EAAoDxC,UAApD,EAA2F;AACzF,QAAM4C,MAA8B,GAAG,EAAvC;;AACA,MAAI5C,UAAJ,EAAgB;AACd,SAAK,MAAM6C,SAAX,IAAyB,CAAC,SAAD,EAAY,QAAZ,CAAzB,EAA0D;AACxD,YAAMC,EAAE,GAAGD,SAAS,KAAK,SAAdA,GAA0B1D,OAA1B0D,GAAoC/D,MAA/C;;AACA,WAAK,MAAMiE,MAAX,IAAqBlE,WAAW,CAACmB,UAAU,CAAC6C,SAAD,CAAX,EAAwB,CAAxB,CAAhC,EAA4D;AAC1DD,cAAM,CAAC,GAAGD,IAAI,IAAIE,SAAS,IAAIE,MAAM,EAA/B,CAANH,GAA2CrD,QAAQ,CAACuD,EAAE,CAACzD,UAAU,CAACmD,KAAD,CAAX,EAAoBO,MAApB,CAAH,CAAnDH;AACF;AACF;AACF;;AACA,SAAOA,MAAP;AACF;;AAEA,SAASI,aAAT,CAAwB/C,MAAxB,EAAmED,UAAnE,EAA0G;AACxG,MAAI,CAACA,UAAL,EAAiB,OAAO,EAAP;AAEjB,MAAIiD,eAAe,GAAG,EAAtB;;AACA,OAAK,MAAMN,IAAX,IAAmB3C,UAAU,CAACC,MAA9B,EAAsC;AACpC,UAAMuC,KAAK,GAAGvC,MAAM,CAAC0C,IAAD,CAApB;AAEA,QAAI,CAACH,KAAL,EAAY;AAEZS,mBAAe,GAAG,EAChB,GAAGA,eADa;AAEhB,SAAGP,YAAY,CAACC,IAAD,EAAOH,KAAP,EAAcxC,UAAd;AAFC,KAAlBiD;AAIF;;AACA,SAAOA,eAAP;AACF;;AAEA,SAASC,WAAT,CAAsBjD,MAAtB,EAAiE;AAC/D,QAAMkD,QAAQ,GAAG,EAAjB;;AAEA,OAAK,MAAMX,KAAX,IAAoBpB,MAAM,CAACgC,IAAPhC,CAAYnB,MAAZmB,CAApB,EAAyC;AACvC,QAAIoB,KAAK,CAACD,UAANC,CAAiB,KAAjBA,KAA2BvC,MAAM,CAAC,MAAMuC,KAAK,EAAZ,CAArC,EAAsD;AAEtD,UAAMa,OAAO,GAAG,MAAMb,KAAK,EAA3B;AACA,UAAMc,QAAQ,GAAGjE,UAAU,CAACY,MAAM,CAACuC,KAAD,CAAP,CAA3B;AAEAW,YAAQ,CAACE,OAAD,CAARF,GAAoBnE,aAAa,CAACsE,QAAD,CAAjCH;AACF;;AAEA,SAAOA,QAAP;AACF;;AAEA,SAASvB,iBAAT,CAA4BJ,QAA5B,EAA8CE,KAA9C,EAA8D;AAC5D,MAAI,CAACA,KAAL,EAAY,OAAOF,QAAP;AAEZ,QAAM+B,aAAa,GAAG,UAAU7B,KAAK,GAArC;AAEA,SAAOF,QAAQ,KAAK,OAAbA,GAAuB+B,aAAvB/B,GAAuC,GAAG+B,aAAa,IAAI/B,QAAQ,EAA1E;AACF;;AAEA,SAASgC,YAAT,CAAuBC,OAAvB,EAAyDC,MAAzD,EAAyE;AACvE,MAAI,CAACD,OAAL,EAAc;AAEdA,SAAO,CAACE,SAARF,GAAoBC,MAApBD;AACF;;AAEA,SAASG,uBAAT,CAAkCC,EAAlC,EAA8CC,QAA9C,EAAiE;AAC/D,MAAI,CAAC5E,UAAL,EAAiB,OAAO,IAAP;AAEjB,MAAI6E,KAAK,GAAGC,QAAQ,CAACC,cAATD,CAAwBH,EAAxBG,CAAZ;;AAEA,MAAI,CAACD,KAAL,EAAY;AACVA,SAAK,GAAGC,QAAQ,CAACE,aAATF,CAAuB,OAAvBA,CAARD;AACAA,SAAK,CAACF,EAANE,GAAWF,EAAXE;AACAA,SAAK,CAACI,IAANJ,GAAa,UAAbA;AAEA,QAAID,QAAJ,EAAcC,KAAK,CAACK,YAANL,CAAmB,OAAnBA,EAA4BD,QAA5BC;AAEdC,YAAQ,CAACK,IAATL,CAAcM,WAAdN,CAA0BD,KAA1BC;AACF;;AAEA,SAAOD,KAAP;AACF,C,CAEA;;;AACA,OAAO,SAASQ,WAAT,CAAsBvD,OAAtB,EAA+F;AACpG,QAAMwD,aAAa,GAAGzD,iBAAiB,CAACC,OAAD,CAAvC;AACA,QAAM2B,IAAI,GAAGjE,UAAU,CAAC8F,aAAa,CAACzE,YAAf,CAAvB;AACA,QAAMG,MAAM,GAAGzB,GAAG,CAAC+F,aAAa,CAACtE,MAAf,CAAlB;AAEA,QAAMuE,cAAc,GAAGnG,QAAQ,CAAC,MAAM;AACpC,UAAMoG,GAA4C,GAAG,EAArD;;AACA,SAAK,MAAM,CAAC/B,IAAD,EAAOgC,QAAP,CAAX,IAA+BvD,MAAM,CAACC,OAAPD,CAAelB,MAAM,CAACgC,KAAtBd,CAA/B,EAA6D;AAC3D,YAAMnB,MAAM,GAAG,EACb,GAAG0E,QAAQ,CAAC1E,MADC;AAEb,WAAG+C,aAAa,CAAC2B,QAAQ,CAAC1E,MAAV,EAAkBuE,aAAa,CAACxE,UAAhC;AAFH,OAAf;AAKA0E,SAAG,CAAC/B,IAAD,CAAH+B,GAAY,EACV,GAAGC,QADO;AAEV1E,cAAM,EAAE,EACN,GAAGA,MADG;AAEN,aAAGiD,WAAW,CAACjD,MAAD;AAFR;AAFE,OAAZyE;AAOF;;AACA,WAAOA,GAAP;AACD,GAjB8B,CAA/B;AAmBA,QAAME,OAAO,GAAGtG,QAAQ,CAAC,MAAMmG,cAAc,CAACvC,KAAfuC,CAAqB9B,IAAI,CAACT,KAA1BuC,CAAP,CAAxB;AAEA,QAAMf,MAAM,GAAGpF,QAAQ,CAAC,MAAM;AAC5B,UAAMiD,KAAe,GAAG,EAAxB;;AAEA,QAAIqD,OAAO,CAAC1C,KAAR0C,EAAexE,IAAnB,EAAyB;AACvBkB,oBAAc,CAACC,KAAD,EAAQ,OAAR,EAAiB,CAAC,oBAAD,CAAjB,EAAyCiD,aAAa,CAAC9C,KAAvD,CAAdJ;AACF;;AAEAA,kBAAc,CAACC,KAAD,EAAQ,OAAR,EAAiBQ,eAAe,CAAC6C,OAAO,CAAC1C,KAAT,CAAhC,EAAiDsC,aAAa,CAAC9C,KAA/D,CAAdJ;;AAEA,SAAK,MAAM,CAACuD,SAAD,EAAYjF,KAAZ,CAAX,IAAiCwB,MAAM,CAACC,OAAPD,CAAeqD,cAAc,CAACvC,KAA9Bd,CAAjC,EAAuE;AACrEE,oBAAc,CAACC,KAAD,EAAQ,aAAasD,SAAS,EAA9B,EAAkC,CAC9C,iBAAiBjF,KAAK,CAACQ,IAANR,GAAa,MAAbA,GAAsB,QAAQ,EADD,EAE9C,GAAGmC,eAAe,CAACnC,KAAD,CAF4B,CAAlC,EAGX4E,aAAa,CAAC9C,KAHH,CAAdJ;AAIF;;AAEA,UAAMwD,OAAiB,GAAG,EAA1B;AACA,UAAMC,OAAiB,GAAG,EAA1B;AAEA,UAAM9E,MAAM,GAAG,IAAI+E,GAAJ,CAAQ5D,MAAM,CAAC6D,MAAP7D,CAAcqD,cAAc,CAACvC,KAA7Bd,EAAoC8D,OAApC9D,CAA4CxB,KAAK,IAAIwB,MAAM,CAACgC,IAAPhC,CAAYxB,KAAK,CAACK,MAAlBmB,CAArDA,CAAR,CAAf;;AACA,SAAK,MAAMD,GAAX,IAAkBlB,MAAlB,EAA0B;AACxB,UAAIkB,GAAG,CAACoB,UAAJpB,CAAe,KAAfA,CAAJ,EAA2B;AACzBG,sBAAc,CAACyD,OAAD,EAAU,IAAI5D,GAAG,EAAjB,EAAqB,CAAC,4BAA4BA,GAAG,eAAhC,CAArB,EAAuEqD,aAAa,CAAC9C,KAArF,CAAdJ;AACD,OAFD,MAEO;AACLA,sBAAc,CAACwD,OAAD,EAAU,OAAO3D,GAAG,EAApB,EAAwB,CACpC,+CAA+CA,GAAG,sBADd,EAEpC,uCAAuCA,GAAG,eAFN,EAGpC,+BAA+BA,GAAG,eAHE,CAAxB,EAIXqD,aAAa,CAAC9C,KAJH,CAAdJ;AAKAA,sBAAc,CAACyD,OAAD,EAAU,SAAS5D,GAAG,EAAtB,EAA0B,CAAC,4BAA4BA,GAAG,eAAhC,CAA1B,EAA4EqD,aAAa,CAAC9C,KAA1F,CAAdJ;AACAA,sBAAc,CAACyD,OAAD,EAAU,WAAW5D,GAAG,EAAxB,EAA4B,CAAC,mCAAmCA,GAAG,GAAvC,CAA5B,EAAyEqD,aAAa,CAAC9C,KAAvF,CAAdJ;AACF;AACF;;AAEAC,SAAK,CAACI,IAANJ,CAAW,GAAGuD,OAAdvD,EAAuB,GAAGwD,OAA1BxD;AAEA,WAAOA,KAAK,CAACM,GAANN,CAAU,CAAC4D,GAAD,EAAMC,CAAN,KAAYA,CAAC,KAAK,CAANA,GAAUD,GAAVC,GAAgB,OAAOD,GAAG,EAAhD5D,EAAoD8D,IAApD9D,CAAyD,EAAzDA,CAAP;AACD,GArCsB,CAAvB;;AAuCA,WAAS+D,OAAT,CAAkBC,GAAlB,EAA4B;AAC1B,QAAIf,aAAa,CAACtD,UAAlB,EAA8B;AAE9B,UAAMmD,IAAI,GAAGkB,GAAG,CAACC,QAAJD,CAAaE,QAAbF,CAAsBG,OAAnC;;AACA,QAAIrB,IAAJ,EAAU;AACR,eAASsB,OAAT,GAAoB;AAClB,eAAO;AACL5B,eAAK,EAAE,CAAC;AACN6B,uBAAW,EAAElC,MAAM,CAACxB,KADd;AAEN2B,cAAE,EAAEW,aAAa,CAAC1D,YAFZ;AAGN+E,iBAAK,EAAErB,aAAa,CAACV,QAAdU,IAA0B;AAH3B,WAAD;AADF,SAAP;AAOF;;AAEA,UAAIH,IAAI,CAAC1C,IAAT,EAAe;AACb,cAAMmE,KAAK,GAAGzB,IAAI,CAAC1C,IAAL0C,CAAUsB,OAAVtB,CAAd;;AACA,YAAInF,UAAJ,EAAgB;AACdP,eAAK,CAAC+E,MAAD,EAAS,MAAM;AAAEoC,iBAAK,CAACC,KAAND,CAAYH,OAAZG;AAAsB,WAAvC,CAALnH;AACF;AACD,OALD,MAKO;AACL,YAAIO,UAAJ,EAAgB;AACdmF,cAAI,CAAC2B,WAAL3B,CAAiB/F,QAAQ,CAACqH,OAAD,CAAzBtB;AACAzF,qBAAW,CAAC,MAAMyF,IAAI,CAAC4B,SAAL5B,EAAP,CAAXzF;AACD,SAHD,MAGO;AACLyF,cAAI,CAAC2B,WAAL3B,CAAiBsB,OAAO,EAAxBtB;AACF;AACF;AACD,KAxBD,MAwBO;AACL,UAAInF,UAAJ,EAAgB;AACdP,aAAK,CAAC+E,MAAD,EAASwC,YAAT,EAAuB;AAAEC,mBAAS,EAAE;AAAb,SAAvB,CAALxH;AACD,OAFD,MAEO;AACLuH,oBAAY;AACd;;AAEA,eAASA,YAAT,GAAyB;AACvB1C,oBAAY,CACVI,uBAAuB,CAACY,aAAa,CAAC1D,YAAf,EAA6B0D,aAAa,CAACV,QAA3C,CADb,EAEVJ,MAAM,CAACxB,KAFG,CAAZsB;AAIF;AACF;AACF;;AAEA,QAAM4C,YAAY,GAAG9H,QAAQ,CAAC,MAAMkG,aAAa,CAACtD,UAAdsD,GAA2B/B,SAA3B+B,GAAuC,YAAY7B,IAAI,CAACT,KAAK,EAApE,CAA7B;AAEA,SAAO;AACLoD,WADK;AAELpE,cAAU,EAAEsD,aAAa,CAACtD,UAFrB;AAGLyB,QAHK;AAILzC,UAJK;AAKL0E,WALK;AAMLH,kBANK;AAOL2B,gBAPK;AAQL1C,UARK;AASL2C,UAAM,EAAE;AACN1D,UADM;AAENiC;AAFM;AATH,GAAP;AAcF;AAEA,OAAO,SAAS0B,YAAT,CAAuBC,KAAvB,EAAkD;AACvDxH,oBAAkB,CAAC,cAAD,CAAlBA;AAEA,QAAMa,KAAK,GAAGrB,MAAM,CAACiB,WAAD,EAAc,IAAd,CAApB;AAEA,MAAI,CAACI,KAAL,EAAY,MAAM,IAAI4G,KAAJ,CAAU,wCAAV,CAAN;AAEZ,QAAM7D,IAAI,GAAGrE,QAAQ,CAAC,MAAMiI,KAAK,CAAC3G,KAAN2G,IAAe3G,KAAK,CAAC+C,IAAN/C,CAAWsC,KAAjC,CAArB;AACA,QAAM0C,OAAO,GAAGtG,QAAQ,CAAC,MAAMsB,KAAK,CAACM,MAANN,CAAasC,KAAbtC,CAAmB+C,IAAI,CAACT,KAAxBtC,CAAP,CAAxB;AAEA,QAAMwG,YAAY,GAAG9H,QAAQ,CAAC,MAAMsB,KAAK,CAACsB,UAANtB,GAAmB6C,SAAnB7C,GAA+B,YAAY+C,IAAI,CAACT,KAAK,EAA5D,CAA7B;AAEA,QAAMuE,QAAuB,GAAG,EAC9B,GAAG7G,KAD2B;AAE9B+C,QAF8B;AAG9BiC,WAH8B;AAI9BwB;AAJ8B,GAAhC;AAOA5H,SAAO,CAACgB,WAAD,EAAciH,QAAd,CAAPjI;AAEA,SAAOiI,QAAP;AACF;AAEA,OAAO,SAASC,QAAT,GAAqB;AAC1B3H,oBAAkB,CAAC,UAAD,CAAlBA;AAEA,QAAMa,KAAK,GAAGrB,MAAM,CAACiB,WAAD,EAAc,IAAd,CAApB;AAEA,MAAI,CAACI,KAAL,EAAY,MAAM,IAAI4G,KAAJ,CAAU,wCAAV,CAAN;AAEZ,SAAO5G,KAAP;AACF","names":["computed","inject","provide","ref","shallowRef","watch","watchEffect","createRange","darken","getCurrentInstance","getForeground","getLuma","IN_BROWSER","lighten","mergeDeep","parseColor","propsFactory","RGBtoHex","ThemeSymbol","Symbol","for","makeThemeProps","theme","String","genDefaults","defaultTheme","variations","colors","themes","light","dark","background","surface","primary","secondary","error","info","success","warning","variables","stylesheetId","parseThemeOptions","options","defaults","isDisabled","key","Object","entries","createCssClass","lines","selector","content","scope","push","getScopedSelector","map","line","genCssVariables","lightOverlay","darkOverlay","value","rgb","r","g","b","startsWith","color","undefined","genVariation","name","object","variation","fn","amount","genVariations","variationColors","genOnColors","onColors","keys","onColor","colorVal","scopeSelector","upsertStyles","styleEl","styles","innerHTML","getOrCreateStyleElement","id","cspNonce","style","document","getElementById","createElement","type","setAttribute","head","appendChild","createTheme","parsedOptions","computedThemes","acc","original","current","themeName","bgLines","fgLines","Set","values","flatMap","str","i","join","install","app","_context","provides","usehead","getHead","textContent","nonce","entry","patch","addHeadObjs","updateDOM","updateStyles","immediate","themeClasses","global","provideTheme","props","Error","newTheme","useTheme"],"sources":["../../src/composables/theme.ts"],"sourcesContent":["// Utilities\nimport {\n  computed,\n  inject,\n  provide,\n  ref,\n  shallowRef,\n  watch,\n  watchEffect,\n} from 'vue'\nimport {\n  createRange,\n  darken,\n  getCurrentInstance,\n  getForeground,\n  getLuma,\n  IN_BROWSER,\n  lighten,\n  mergeDeep,\n  parseColor,\n  propsFactory,\n  RGBtoHex,\n} from '@/util'\n\n// Types\nimport type { VueHeadClient } from '@unhead/vue/client'\nimport type { HeadClient } from '@vueuse/head'\nimport type { App, DeepReadonly, InjectionKey, Ref } from 'vue'\n\ntype DeepPartial<T> = T extends object ? { [P in keyof T]?: DeepPartial<T[P]> } : T\n\nexport type ThemeOptions = false | {\n  cspNonce?: string\n  defaultTheme?: string\n  variations?: false | VariationsOptions\n  themes?: Record<string, ThemeDefinition>\n  stylesheetId?: string\n  scope?: string\n}\nexport type ThemeDefinition = DeepPartial<InternalThemeDefinition>\n\ninterface InternalThemeOptions {\n  cspNonce?: string\n  isDisabled: boolean\n  defaultTheme: string\n  variations: false | VariationsOptions\n  themes: Record<string, InternalThemeDefinition>\n  stylesheetId: string\n  scope?: string\n}\n\ninterface VariationsOptions {\n  colors: string[]\n  lighten: number\n  darken: number\n}\n\ninterface InternalThemeDefinition {\n  dark: boolean\n  colors: Colors\n  variables: Record<string, string | number>\n}\n\nexport interface Colors extends BaseColors, OnColors {\n  [key: string]: string\n}\n\ninterface BaseColors {\n  background: string\n  surface: string\n  primary: string\n  secondary: string\n  success: string\n  warning: string\n  error: string\n  info: string\n}\n\ninterface OnColors {\n  'on-background': string\n  'on-surface': string\n  'on-primary': string\n  'on-secondary': string\n  'on-success': string\n  'on-warning': string\n  'on-error': string\n  'on-info': string\n}\n\nexport interface ThemeInstance {\n  readonly isDisabled: boolean\n  readonly themes: Ref<Record<string, InternalThemeDefinition>>\n\n  readonly name: Readonly<Ref<string>>\n  readonly current: DeepReadonly<Ref<InternalThemeDefinition>>\n  readonly computedThemes: DeepReadonly<Ref<Record<string, InternalThemeDefinition>>>\n\n  readonly themeClasses: Readonly<Ref<string | undefined>>\n  readonly styles: Readonly<Ref<string>>\n\n  readonly global: {\n    readonly name: Ref<string>\n    readonly current: DeepReadonly<Ref<InternalThemeDefinition>>\n  }\n}\n\nexport const ThemeSymbol: InjectionKey<ThemeInstance> = Symbol.for('vuetify:theme')\n\nexport const makeThemeProps = propsFactory({\n  theme: String,\n}, 'theme')\n\nfunction genDefaults () {\n  return {\n    defaultTheme: 'light',\n    variations: { colors: [], lighten: 0, darken: 0 },\n    themes: {\n      light: {\n        dark: false,\n        colors: {\n          background: '#FFFFFF',\n          surface: '#FFFFFF',\n          'surface-bright': '#FFFFFF',\n          'surface-light': '#EEEEEE',\n          'surface-variant': '#424242',\n          'on-surface-variant': '#EEEEEE',\n          primary: '#1867C0',\n          'primary-darken-1': '#1F5592',\n          secondary: '#48A9A6',\n          'secondary-darken-1': '#018786',\n          error: '#B00020',\n          info: '#2196F3',\n          success: '#4CAF50',\n          warning: '#FB8C00',\n        },\n        variables: {\n          'border-color': '#000000',\n          'border-opacity': 0.12,\n          'high-emphasis-opacity': 0.87,\n          'medium-emphasis-opacity': 0.60,\n          'disabled-opacity': 0.38,\n          'idle-opacity': 0.04,\n          'hover-opacity': 0.04,\n          'focus-opacity': 0.12,\n          'selected-opacity': 0.08,\n          'activated-opacity': 0.12,\n          'pressed-opacity': 0.12,\n          'dragged-opacity': 0.08,\n          'theme-kbd': '#212529',\n          'theme-on-kbd': '#FFFFFF',\n          'theme-code': '#F5F5F5',\n          'theme-on-code': '#000000',\n        },\n      },\n      dark: {\n        dark: true,\n        colors: {\n          background: '#121212',\n          surface: '#212121',\n          'surface-bright': '#ccbfd6',\n          'surface-light': '#424242',\n          'surface-variant': '#c8c8c8',\n          'on-surface-variant': '#000000',\n          primary: '#2196F3',\n          'primary-darken-1': '#277CC1',\n          secondary: '#54B6B2',\n          'secondary-darken-1': '#48A9A6',\n          error: '#CF6679',\n          info: '#2196F3',\n          success: '#4CAF50',\n          warning: '#FB8C00',\n        },\n        variables: {\n          'border-color': '#FFFFFF',\n          'border-opacity': 0.12,\n          'high-emphasis-opacity': 1,\n          'medium-emphasis-opacity': 0.70,\n          'disabled-opacity': 0.50,\n          'idle-opacity': 0.10,\n          'hover-opacity': 0.04,\n          'focus-opacity': 0.12,\n          'selected-opacity': 0.08,\n          'activated-opacity': 0.12,\n          'pressed-opacity': 0.16,\n          'dragged-opacity': 0.08,\n          'theme-kbd': '#212529',\n          'theme-on-kbd': '#FFFFFF',\n          'theme-code': '#343434',\n          'theme-on-code': '#CCCCCC',\n        },\n      },\n    },\n    stylesheetId: 'vuetify-theme-stylesheet',\n  }\n}\n\nfunction parseThemeOptions (options: ThemeOptions = genDefaults()): InternalThemeOptions {\n  const defaults = genDefaults()\n\n  if (!options) return { ...defaults, isDisabled: true } as any\n\n  const themes: Record<string, InternalThemeDefinition> = {}\n  for (const [key, theme] of Object.entries(options.themes ?? {})) {\n    const defaultTheme = theme.dark || key === 'dark'\n      ? defaults.themes?.dark\n      : defaults.themes?.light\n    themes[key] = mergeDeep(defaultTheme, theme) as InternalThemeDefinition\n  }\n\n  return mergeDeep(\n    defaults,\n    { ...options, themes },\n  ) as InternalThemeOptions\n}\n\nfunction createCssClass (lines: string[], selector: string, content: string[], scope?: string) {\n  lines.push(\n    `${getScopedSelector(selector, scope)} {\\n`,\n    ...content.map(line => `  ${line};\\n`),\n    '}\\n',\n  )\n}\n\nfunction genCssVariables (theme: InternalThemeDefinition) {\n  const lightOverlay = theme.dark ? 2 : 1\n  const darkOverlay = theme.dark ? 1 : 2\n\n  const variables: string[] = []\n  for (const [key, value] of Object.entries(theme.colors)) {\n    const rgb = parseColor(value)\n    variables.push(`--v-theme-${key}: ${rgb.r},${rgb.g},${rgb.b}`)\n    if (!key.startsWith('on-')) {\n      variables.push(`--v-theme-${key}-overlay-multiplier: ${getLuma(value) > 0.18 ? lightOverlay : darkOverlay}`)\n    }\n  }\n\n  for (const [key, value] of Object.entries(theme.variables)) {\n    const color = typeof value === 'string' && value.startsWith('#') ? parseColor(value) : undefined\n    const rgb = color ? `${color.r}, ${color.g}, ${color.b}` : undefined\n    variables.push(`--v-${key}: ${rgb ?? value}`)\n  }\n\n  return variables\n}\n\nfunction genVariation (name: string, color: string, variations: VariationsOptions | false) {\n  const object: Record<string, string> = {}\n  if (variations) {\n    for (const variation of (['lighten', 'darken'] as const)) {\n      const fn = variation === 'lighten' ? lighten : darken\n      for (const amount of createRange(variations[variation], 1)) {\n        object[`${name}-${variation}-${amount}`] = RGBtoHex(fn(parseColor(color), amount))\n      }\n    }\n  }\n  return object\n}\n\nfunction genVariations (colors: InternalThemeDefinition['colors'], variations: VariationsOptions | false) {\n  if (!variations) return {}\n\n  let variationColors = {}\n  for (const name of variations.colors) {\n    const color = colors[name]\n\n    if (!color) continue\n\n    variationColors = {\n      ...variationColors,\n      ...genVariation(name, color, variations),\n    }\n  }\n  return variationColors\n}\n\nfunction genOnColors (colors: InternalThemeDefinition['colors']) {\n  const onColors = {} as InternalThemeDefinition['colors']\n\n  for (const color of Object.keys(colors)) {\n    if (color.startsWith('on-') || colors[`on-${color}`]) continue\n\n    const onColor = `on-${color}` as keyof OnColors\n    const colorVal = parseColor(colors[color])\n\n    onColors[onColor] = getForeground(colorVal)\n  }\n\n  return onColors\n}\n\nfunction getScopedSelector (selector: string, scope?: string) {\n  if (!scope) return selector\n\n  const scopeSelector = `:where(${scope})`\n\n  return selector === ':root' ? scopeSelector : `${scopeSelector} ${selector}`\n}\n\nfunction upsertStyles (styleEl: HTMLStyleElement | null, styles: string) {\n  if (!styleEl) return\n\n  styleEl.innerHTML = styles\n}\n\nfunction getOrCreateStyleElement (id: string, cspNonce?: string) {\n  if (!IN_BROWSER) return null\n\n  let style = document.getElementById(id) as HTMLStyleElement | null\n\n  if (!style) {\n    style = document.createElement('style')\n    style.id = id\n    style.type = 'text/css'\n\n    if (cspNonce) style.setAttribute('nonce', cspNonce)\n\n    document.head.appendChild(style)\n  }\n\n  return style\n}\n\n// Composables\nexport function createTheme (options?: ThemeOptions): ThemeInstance & { install: (app: App) => void } {\n  const parsedOptions = parseThemeOptions(options)\n  const name = shallowRef(parsedOptions.defaultTheme)\n  const themes = ref(parsedOptions.themes)\n\n  const computedThemes = computed(() => {\n    const acc: Record<string, InternalThemeDefinition> = {}\n    for (const [name, original] of Object.entries(themes.value)) {\n      const colors = {\n        ...original.colors,\n        ...genVariations(original.colors, parsedOptions.variations),\n      }\n\n      acc[name] = {\n        ...original,\n        colors: {\n          ...colors,\n          ...genOnColors(colors),\n        },\n      }\n    }\n    return acc\n  })\n\n  const current = computed(() => computedThemes.value[name.value])\n\n  const styles = computed(() => {\n    const lines: string[] = []\n\n    if (current.value?.dark) {\n      createCssClass(lines, ':root', ['color-scheme: dark'], parsedOptions.scope)\n    }\n\n    createCssClass(lines, ':root', genCssVariables(current.value), parsedOptions.scope)\n\n    for (const [themeName, theme] of Object.entries(computedThemes.value)) {\n      createCssClass(lines, `.v-theme--${themeName}`, [\n        `color-scheme: ${theme.dark ? 'dark' : 'normal'}`,\n        ...genCssVariables(theme),\n      ], parsedOptions.scope)\n    }\n\n    const bgLines: string[] = []\n    const fgLines: string[] = []\n\n    const colors = new Set(Object.values(computedThemes.value).flatMap(theme => Object.keys(theme.colors)))\n    for (const key of colors) {\n      if (key.startsWith('on-')) {\n        createCssClass(fgLines, `.${key}`, [`color: rgb(var(--v-theme-${key})) !important`], parsedOptions.scope)\n      } else {\n        createCssClass(bgLines, `.bg-${key}`, [\n          `--v-theme-overlay-multiplier: var(--v-theme-${key}-overlay-multiplier)`,\n          `background-color: rgb(var(--v-theme-${key})) !important`,\n          `color: rgb(var(--v-theme-on-${key})) !important`,\n        ], parsedOptions.scope)\n        createCssClass(fgLines, `.text-${key}`, [`color: rgb(var(--v-theme-${key})) !important`], parsedOptions.scope)\n        createCssClass(fgLines, `.border-${key}`, [`--v-border-color: var(--v-theme-${key})`], parsedOptions.scope)\n      }\n    }\n\n    lines.push(...bgLines, ...fgLines)\n\n    return lines.map((str, i) => i === 0 ? str : `    ${str}`).join('')\n  })\n\n  function install (app: App) {\n    if (parsedOptions.isDisabled) return\n\n    const head = app._context.provides.usehead as HeadClient & VueHeadClient<any> | undefined\n    if (head) {\n      function getHead () {\n        return {\n          style: [{\n            textContent: styles.value,\n            id: parsedOptions.stylesheetId,\n            nonce: parsedOptions.cspNonce || false as never,\n          }],\n        }\n      }\n\n      if (head.push) {\n        const entry = head.push(getHead)\n        if (IN_BROWSER) {\n          watch(styles, () => { entry.patch(getHead) })\n        }\n      } else {\n        if (IN_BROWSER) {\n          head.addHeadObjs(computed(getHead))\n          watchEffect(() => head.updateDOM())\n        } else {\n          head.addHeadObjs(getHead())\n        }\n      }\n    } else {\n      if (IN_BROWSER) {\n        watch(styles, updateStyles, { immediate: true })\n      } else {\n        updateStyles()\n      }\n\n      function updateStyles () {\n        upsertStyles(\n          getOrCreateStyleElement(parsedOptions.stylesheetId, parsedOptions.cspNonce),\n          styles.value\n        )\n      }\n    }\n  }\n\n  const themeClasses = computed(() => parsedOptions.isDisabled ? undefined : `v-theme--${name.value}`)\n\n  return {\n    install,\n    isDisabled: parsedOptions.isDisabled,\n    name,\n    themes,\n    current,\n    computedThemes,\n    themeClasses,\n    styles,\n    global: {\n      name,\n      current,\n    },\n  }\n}\n\nexport function provideTheme (props: { theme?: string }) {\n  getCurrentInstance('provideTheme')\n\n  const theme = inject(ThemeSymbol, null)\n\n  if (!theme) throw new Error('Could not find Vuetify theme injection')\n\n  const name = computed(() => props.theme ?? theme.name.value)\n  const current = computed(() => theme.themes.value[name.value])\n\n  const themeClasses = computed(() => theme.isDisabled ? undefined : `v-theme--${name.value}`)\n\n  const newTheme: ThemeInstance = {\n    ...theme,\n    name,\n    current,\n    themeClasses,\n  }\n\n  provide(ThemeSymbol, newTheme)\n\n  return newTheme\n}\n\nexport function useTheme () {\n  getCurrentInstance('useTheme')\n\n  const theme = inject(ThemeSymbol, null)\n\n  if (!theme) throw new Error('Could not find Vuetify theme injection')\n\n  return theme\n}\n"]},"metadata":{},"sourceType":"module"}
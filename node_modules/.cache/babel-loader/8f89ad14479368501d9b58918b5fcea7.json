{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\"; // Styles\n\nimport \"./VList.css\"; // Components\n\nimport { VListChildren } from \"./VListChildren.js\"; // Composables\n\nimport { createList } from \"./list.js\";\nimport { makeBorderProps, useBorder } from \"../../composables/border.js\";\nimport { useBackgroundColor } from \"../../composables/color.js\";\nimport { makeComponentProps } from \"../../composables/component.js\";\nimport { provideDefaults } from \"../../composables/defaults.js\";\nimport { makeDensityProps, useDensity } from \"../../composables/density.js\";\nimport { makeDimensionProps, useDimension } from \"../../composables/dimensions.js\";\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.js\";\nimport { IconValue } from \"../../composables/icons.js\";\nimport { makeItemsProps } from \"../../composables/list-items.js\";\nimport { makeNestedProps, useNested } from \"../../composables/nested/nested.js\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.js\";\nimport { makeTagProps } from \"../../composables/tag.js\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.js\";\nimport { makeVariantProps } from \"../../composables/variant.js\"; // Utilities\n\nimport { computed, ref, shallowRef, toRef } from 'vue';\nimport { EventProp, focusChild, genericComponent, getPropertyFromItem, isPrimitive, omit, propsFactory, useRender } from \"../../util/index.js\"; // Types\n\nfunction transformItem(props, item) {\n  const type = getPropertyFromItem(item, props.itemType, 'item');\n  const title = isPrimitive(item) ? item : getPropertyFromItem(item, props.itemTitle);\n  const value = getPropertyFromItem(item, props.itemValue, undefined);\n  const children = getPropertyFromItem(item, props.itemChildren);\n  const itemProps = props.itemProps === true ? omit(item, ['children']) : getPropertyFromItem(item, props.itemProps);\n  const _props = {\n    title,\n    value,\n    ...itemProps\n  };\n  return {\n    type,\n    title: _props.title,\n    value: _props.value,\n    props: _props,\n    children: type === 'item' && children ? transformItems(props, children) : undefined,\n    raw: item\n  };\n}\n\nfunction transformItems(props, items) {\n  const array = [];\n\n  for (const item of items) {\n    array.push(transformItem(props, item));\n  }\n\n  return array;\n}\n\nexport function useListItems(props) {\n  const items = computed(() => transformItems(props, props.items));\n  return {\n    items\n  };\n}\nexport const makeVListProps = propsFactory({\n  baseColor: String,\n\n  /* @deprecated */\n  activeColor: String,\n  activeClass: String,\n  bgColor: String,\n  disabled: Boolean,\n  expandIcon: IconValue,\n  collapseIcon: IconValue,\n  lines: {\n    type: [Boolean, String],\n    default: 'one'\n  },\n  slim: Boolean,\n  nav: Boolean,\n  'onClick:open': EventProp(),\n  'onClick:select': EventProp(),\n  'onUpdate:opened': EventProp(),\n  ...makeNestedProps({\n    selectStrategy: 'single-leaf',\n    openStrategy: 'list'\n  }),\n  ...makeBorderProps(),\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n  ...makeDimensionProps(),\n  ...makeElevationProps(),\n  itemType: {\n    type: String,\n    default: 'type'\n  },\n  ...makeItemsProps(),\n  ...makeRoundedProps(),\n  ...makeTagProps(),\n  ...makeThemeProps(),\n  ...makeVariantProps({\n    variant: 'text'\n  })\n}, 'VList');\nexport const VList = genericComponent()({\n  name: 'VList',\n  props: makeVListProps(),\n  emits: {\n    'update:selected': value => true,\n    'update:activated': value => true,\n    'update:opened': value => true,\n    'click:open': value => true,\n    'click:activate': value => true,\n    'click:select': value => true\n  },\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      items\n    } = useListItems(props);\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      backgroundColorClasses,\n      backgroundColorStyles\n    } = useBackgroundColor(toRef(props, 'bgColor'));\n    const {\n      borderClasses\n    } = useBorder(props);\n    const {\n      densityClasses\n    } = useDensity(props);\n    const {\n      dimensionStyles\n    } = useDimension(props);\n    const {\n      elevationClasses\n    } = useElevation(props);\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const {\n      children,\n      open,\n      parents,\n      select,\n      getPath\n    } = useNested(props);\n    const lineClasses = computed(() => props.lines ? `v-list--${props.lines}-line` : undefined);\n    const activeColor = toRef(props, 'activeColor');\n    const baseColor = toRef(props, 'baseColor');\n    const color = toRef(props, 'color');\n    createList();\n    provideDefaults({\n      VListGroup: {\n        activeColor,\n        baseColor,\n        color,\n        expandIcon: toRef(props, 'expandIcon'),\n        collapseIcon: toRef(props, 'collapseIcon')\n      },\n      VListItem: {\n        activeClass: toRef(props, 'activeClass'),\n        activeColor,\n        baseColor,\n        color,\n        density: toRef(props, 'density'),\n        disabled: toRef(props, 'disabled'),\n        lines: toRef(props, 'lines'),\n        nav: toRef(props, 'nav'),\n        slim: toRef(props, 'slim'),\n        variant: toRef(props, 'variant')\n      }\n    });\n    const isFocused = shallowRef(false);\n    const contentRef = ref();\n\n    function onFocusin(e) {\n      isFocused.value = true;\n    }\n\n    function onFocusout(e) {\n      isFocused.value = false;\n    }\n\n    function onFocus(e) {\n      if (!isFocused.value && !(e.relatedTarget && contentRef.value?.contains(e.relatedTarget))) focus();\n    }\n\n    function onKeydown(e) {\n      const target = e.target;\n      if (!contentRef.value || ['INPUT', 'TEXTAREA'].includes(target.tagName)) return;\n\n      if (e.key === 'ArrowDown') {\n        focus('next');\n      } else if (e.key === 'ArrowUp') {\n        focus('prev');\n      } else if (e.key === 'Home') {\n        focus('first');\n      } else if (e.key === 'End') {\n        focus('last');\n      } else {\n        return;\n      }\n\n      e.preventDefault();\n    }\n\n    function onMousedown(e) {\n      isFocused.value = true;\n    }\n\n    function focus(location) {\n      if (contentRef.value) {\n        return focusChild(contentRef.value, location);\n      }\n    }\n\n    useRender(() => {\n      return _createVNode(props.tag, {\n        \"ref\": contentRef,\n        \"class\": ['v-list', {\n          'v-list--disabled': props.disabled,\n          'v-list--nav': props.nav,\n          'v-list--slim': props.slim\n        }, themeClasses.value, backgroundColorClasses.value, borderClasses.value, densityClasses.value, elevationClasses.value, lineClasses.value, roundedClasses.value, props.class],\n        \"style\": [backgroundColorStyles.value, dimensionStyles.value, props.style],\n        \"tabindex\": props.disabled ? -1 : 0,\n        \"role\": \"listbox\",\n        \"aria-activedescendant\": undefined,\n        \"onFocusin\": onFocusin,\n        \"onFocusout\": onFocusout,\n        \"onFocus\": onFocus,\n        \"onKeydown\": onKeydown,\n        \"onMousedown\": onMousedown\n      }, {\n        default: () => [_createVNode(VListChildren, {\n          \"items\": items.value,\n          \"returnObject\": props.returnObject\n        }, slots)]\n      });\n    });\n    return {\n      open,\n      select,\n      focus,\n      children,\n      parents,\n      getPath\n    };\n  }\n\n});","map":{"version":3,"mappings":"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","names":["VListChildren","createList","makeBorderProps","useBorder","useBackgroundColor","makeComponentProps","provideDefaults","makeDensityProps","useDensity","makeDimensionProps","useDimension","makeElevationProps","useElevation","IconValue","makeItemsProps","makeNestedProps","useNested","makeRoundedProps","useRounded","makeTagProps","makeThemeProps","provideTheme","makeVariantProps","computed","ref","shallowRef","toRef","EventProp","focusChild","genericComponent","getPropertyFromItem","isPrimitive","omit","propsFactory","useRender","transformItem","props","item","type","itemType","title","itemTitle","value","itemValue","undefined","children","itemChildren","itemProps","_props","transformItems","raw","items","array","push","useListItems","makeVListProps","baseColor","String","activeColor","activeClass","bgColor","disabled","Boolean","expandIcon","collapseIcon","lines","default","slim","nav","selectStrategy","openStrategy","variant","VList","name","emits","setup","_ref","slots","themeClasses","backgroundColorClasses","backgroundColorStyles","borderClasses","densityClasses","dimensionStyles","elevationClasses","roundedClasses","open","parents","select","getPath","lineClasses","color","VListGroup","VListItem","density","isFocused","contentRef","onFocusin","e","onFocusout","onFocus","relatedTarget","contains","focus","onKeydown","target","includes","tagName","key","preventDefault","onMousedown","location","class","style","returnObject"],"sources":["../../../src/components/VList/VList.tsx"],"sourcesContent":["// Styles\nimport './VList.sass'\n\n// Components\nimport { VListChildren } from './VListChildren'\n\n// Composables\nimport { createList } from './list'\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { useBackgroundColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { provideDefaults } from '@/composables/defaults'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { IconValue } from '@/composables/icons'\nimport { makeItemsProps } from '@/composables/list-items'\nimport { makeNestedProps, useNested } from '@/composables/nested/nested'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { makeVariantProps } from '@/composables/variant'\n\n// Utilities\nimport { computed, ref, shallowRef, toRef } from 'vue'\nimport {\n  EventProp,\n  focusChild,\n  genericComponent,\n  getPropertyFromItem,\n  isPrimitive,\n  omit,\n  propsFactory,\n  useRender,\n} from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { VListChildrenSlots } from './VListChildren'\nimport type { ItemProps, ListItem } from '@/composables/list-items'\nimport type { GenericProps, SelectItemKey } from '@/util'\n\nexport interface InternalListItem<T = any> extends ListItem<T> {\n  type?: 'item' | 'subheader' | 'divider'\n}\n\nfunction transformItem (props: ItemProps & { itemType?: string }, item: any): InternalListItem {\n  const type = getPropertyFromItem(item, props.itemType, 'item')\n  const title = isPrimitive(item) ? item : getPropertyFromItem(item, props.itemTitle)\n  const value = getPropertyFromItem(item, props.itemValue, undefined)\n  const children = getPropertyFromItem(item, props.itemChildren)\n  const itemProps = props.itemProps === true\n    ? omit(item, ['children'])\n    : getPropertyFromItem(item, props.itemProps)\n\n  const _props = {\n    title,\n    value,\n    ...itemProps,\n  }\n\n  return {\n    type,\n    title: _props.title,\n    value: _props.value,\n    props: _props,\n    children: type === 'item' && children ? transformItems(props, children) : undefined,\n    raw: item,\n  }\n}\n\nfunction transformItems (props: ItemProps & { itemType?: string }, items: (string | object)[]) {\n  const array: InternalListItem[] = []\n\n  for (const item of items) {\n    array.push(transformItem(props, item))\n  }\n\n  return array\n}\n\nexport function useListItems (props: ItemProps & { itemType?: string }) {\n  const items = computed(() => transformItems(props, props.items))\n\n  return { items }\n}\n\nexport const makeVListProps = propsFactory({\n  baseColor: String,\n  /* @deprecated */\n  activeColor: String,\n  activeClass: String,\n  bgColor: String,\n  disabled: Boolean,\n  expandIcon: IconValue,\n  collapseIcon: IconValue,\n  lines: {\n    type: [Boolean, String] as PropType<'one' | 'two' | 'three' | false>,\n    default: 'one',\n  },\n  slim: Boolean,\n  nav: Boolean,\n\n  'onClick:open': EventProp<[{ id: unknown, value: boolean, path: unknown[] }]>(),\n  'onClick:select': EventProp<[{ id: unknown, value: boolean, path: unknown[] }]>(),\n  'onUpdate:opened': EventProp<[]>(),\n  ...makeNestedProps({\n    selectStrategy: 'single-leaf' as const,\n    openStrategy: 'list' as const,\n  }),\n  ...makeBorderProps(),\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n  ...makeDimensionProps(),\n  ...makeElevationProps(),\n  itemType: {\n    type: String,\n    default: 'type',\n  },\n  ...makeItemsProps(),\n  ...makeRoundedProps(),\n  ...makeTagProps(),\n  ...makeThemeProps(),\n  ...makeVariantProps({ variant: 'text' } as const),\n}, 'VList')\n\ntype ItemType<T> = T extends readonly (infer U)[] ? U : never\n\nexport const VList = genericComponent<new <\n  T extends readonly any[],\n  S = unknown,\n  O = unknown\n>(\n  props: {\n    items?: T\n    itemTitle?: SelectItemKey<ItemType<T>>\n    itemValue?: SelectItemKey<ItemType<T>>\n    itemChildren?: SelectItemKey<ItemType<T>>\n    itemProps?: SelectItemKey<ItemType<T>>\n    selected?: S\n    'onUpdate:selected'?: (value: S) => void\n    'onClick:open'?: (value: { id: unknown, value: boolean, path: unknown[] }) => void\n    'onClick:select'?: (value: { id: unknown, value: boolean, path: unknown[] }) => void\n    opened?: O\n    'onUpdate:opened'?: (value: O) => void\n  },\n  slots: VListChildrenSlots<ItemType<T>>\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VList',\n\n  props: makeVListProps(),\n\n  emits: {\n    'update:selected': (value: unknown) => true,\n    'update:activated': (value: unknown) => true,\n    'update:opened': (value: unknown) => true,\n    'click:open': (value: { id: unknown, value: boolean, path: unknown[] }) => true,\n    'click:activate': (value: { id: unknown, value: boolean, path: unknown[] }) => true,\n    'click:select': (value: { id: unknown, value: boolean, path: unknown[] }) => true,\n  },\n\n  setup (props, { slots }) {\n    const { items } = useListItems(props)\n    const { themeClasses } = provideTheme(props)\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'bgColor'))\n    const { borderClasses } = useBorder(props)\n    const { densityClasses } = useDensity(props)\n    const { dimensionStyles } = useDimension(props)\n    const { elevationClasses } = useElevation(props)\n    const { roundedClasses } = useRounded(props)\n    const { children, open, parents, select, getPath } = useNested(props)\n    const lineClasses = computed(() => props.lines ? `v-list--${props.lines}-line` : undefined)\n    const activeColor = toRef(props, 'activeColor')\n    const baseColor = toRef(props, 'baseColor')\n    const color = toRef(props, 'color')\n\n    createList()\n\n    provideDefaults({\n      VListGroup: {\n        activeColor,\n        baseColor,\n        color,\n        expandIcon: toRef(props, 'expandIcon'),\n        collapseIcon: toRef(props, 'collapseIcon'),\n      },\n      VListItem: {\n        activeClass: toRef(props, 'activeClass'),\n        activeColor,\n        baseColor,\n        color,\n        density: toRef(props, 'density'),\n        disabled: toRef(props, 'disabled'),\n        lines: toRef(props, 'lines'),\n        nav: toRef(props, 'nav'),\n        slim: toRef(props, 'slim'),\n        variant: toRef(props, 'variant'),\n      },\n    })\n\n    const isFocused = shallowRef(false)\n    const contentRef = ref<HTMLElement>()\n    function onFocusin (e: FocusEvent) {\n      isFocused.value = true\n    }\n\n    function onFocusout (e: FocusEvent) {\n      isFocused.value = false\n    }\n\n    function onFocus (e: FocusEvent) {\n      if (\n        !isFocused.value &&\n        !(e.relatedTarget && contentRef.value?.contains(e.relatedTarget as Node))\n      ) focus()\n    }\n\n    function onKeydown (e: KeyboardEvent) {\n      const target = e.target as HTMLElement\n\n      if (!contentRef.value || ['INPUT', 'TEXTAREA'].includes(target.tagName)) return\n\n      if (e.key === 'ArrowDown') {\n        focus('next')\n      } else if (e.key === 'ArrowUp') {\n        focus('prev')\n      } else if (e.key === 'Home') {\n        focus('first')\n      } else if (e.key === 'End') {\n        focus('last')\n      } else {\n        return\n      }\n\n      e.preventDefault()\n    }\n\n    function onMousedown (e: MouseEvent) {\n      isFocused.value = true\n    }\n\n    function focus (location?: 'next' | 'prev' | 'first' | 'last') {\n      if (contentRef.value) {\n        return focusChild(contentRef.value, location)\n      }\n    }\n\n    useRender(() => {\n      return (\n        <props.tag\n          ref={ contentRef }\n          class={[\n            'v-list',\n            {\n              'v-list--disabled': props.disabled,\n              'v-list--nav': props.nav,\n              'v-list--slim': props.slim,\n            },\n            themeClasses.value,\n            backgroundColorClasses.value,\n            borderClasses.value,\n            densityClasses.value,\n            elevationClasses.value,\n            lineClasses.value,\n            roundedClasses.value,\n            props.class,\n          ]}\n          style={[\n            backgroundColorStyles.value,\n            dimensionStyles.value,\n            props.style,\n          ]}\n          tabindex={ props.disabled ? -1 : 0 }\n          role=\"listbox\"\n          aria-activedescendant={ undefined }\n          onFocusin={ onFocusin }\n          onFocusout={ onFocusout }\n          onFocus={ onFocus }\n          onKeydown={ onKeydown }\n          onMousedown={ onMousedown }\n        >\n          <VListChildren\n            items={ items.value }\n            returnObject={ props.returnObject }\n            v-slots={ slots }\n          />\n        </props.tag>\n      )\n    })\n\n    return {\n      open,\n      select,\n      focus,\n      children,\n      parents,\n      getPath,\n    }\n  },\n})\n\nexport type VList = InstanceType<typeof VList>\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { createVNode as _createVNode, resolveDirective as _resolveDirective, withDirectives as _withDirectives } from \"vue\"; // Composables\n\nimport { makeComponentProps } from \"../../composables/component.js\";\nimport { makeDimensionProps, useDimension } from \"../../composables/dimensions.js\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.js\";\nimport { makeTagProps } from \"../../composables/tag.js\";\nimport { makeTransitionProps, MaybeTransition } from \"../../composables/transition.js\"; // Directives\n\nimport intersect from \"../../directives/intersect/index.js\"; // Utilities\n\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.js\"; // Types\n\nexport const makeVLazyProps = propsFactory({\n  modelValue: Boolean,\n  options: {\n    type: Object,\n    // For more information on types, navigate to:\n    // https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n    default: () => ({\n      root: undefined,\n      rootMargin: undefined,\n      threshold: undefined\n    })\n  },\n  ...makeComponentProps(),\n  ...makeDimensionProps(),\n  ...makeTagProps(),\n  ...makeTransitionProps({\n    transition: 'fade-transition'\n  })\n}, 'VLazy');\nexport const VLazy = genericComponent()({\n  name: 'VLazy',\n  directives: {\n    intersect\n  },\n  props: makeVLazyProps(),\n  emits: {\n    'update:modelValue': value => true\n  },\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      dimensionStyles\n    } = useDimension(props);\n    const isActive = useProxiedModel(props, 'modelValue');\n\n    function onIntersect(isIntersecting) {\n      if (isActive.value) return;\n      isActive.value = isIntersecting;\n    }\n\n    useRender(() => _withDirectives(_createVNode(props.tag, {\n      \"class\": ['v-lazy', props.class],\n      \"style\": [dimensionStyles.value, props.style]\n    }, {\n      default: () => [isActive.value && _createVNode(MaybeTransition, {\n        \"transition\": props.transition,\n        \"appear\": true\n      }, {\n        default: () => [slots.default?.()]\n      })]\n    }), [[_resolveDirective(\"intersect\"), {\n      handler: onIntersect,\n      options: props.options\n    }, null]]));\n    return {};\n  }\n\n});","map":{"version":3,"mappings":"6HAAA;;AAAA,SACSA,kBADT,QAC2B,gCAD3B;AAC2B,SAClBC,kBADkB,EACEC,YADF,QACc,iCADd;AACc,SAChCC,eADgC,QACjB,mCADiB;AACjB,SACfC,YADe,QACH,0BADG;AACH,SACZC,mBADY,EACSC,eADT,QACwB,iCADxB,C,CAGrB;;AAAA,OACOC,SADP,MACgB,qCADhB,C,CAGA;;AAAA,SACSC,gBADT,EAC2BC,YAD3B,EACyCC,SADzC,QACkD,qBADlD,C,CAGA;;AAGA,OAAO,MAAMC,cAAc,GAAGF,YAAY,CAAC;AACzCG,YAAU,EAAEC,OAD6B;AAEzCC,SAAO,EAAE;AACPC,QAAI,EAAEC,MADC;AAEP;AACA;AACAC,WAAO,EAAEA,OAAO;AACdC,UAAI,EAAEC,SADQ;AAEdC,gBAAU,EAAED,SAFE;AAGdE,eAAS,EAAEF;AAHG,KAAPF;AAJF,GAFgC;AAazC,KAAGjB,kBAAkB,EAboB;AAczC,KAAGC,kBAAkB,EAdoB;AAezC,KAAGG,YAAY,EAf0B;AAgBzC,KAAGC,mBAAmB,CAAC;AAAEiB,cAAU,EAAE;AAAd,GAAD;AAhBmB,CAAD,EAiBvC,OAjBuC,CAAnC;AAmBP,OAAO,MAAMC,KAAK,GAAGf,gBAAgB,GAAG;AACtCgB,MAAI,EAAE,OADgC;AAGtCC,YAAU,EAAE;AAAElB;AAAF,GAH0B;AAKtCmB,OAAK,EAAEf,cAAc,EALiB;AAOtCgB,OAAK,EAAE;AACL,yBAAsBC,KAAc,IAAK;AADpC,GAP+B;;AAWtCC,OAAKA,CAAEH,KAAFG,EAAOC,IAAPD,EAAoB;AAAA,QAAX;AAAEE;AAAF,QAASD,IAAE;AACvB,UAAM;AAAEE;AAAF,QAAsB9B,YAAY,CAACwB,KAAD,CAAxC;AAEA,UAAMO,QAAQ,GAAG9B,eAAe,CAACuB,KAAD,EAAQ,YAAR,CAAhC;;AAEA,aAASQ,WAAT,CAAsBC,cAAtB,EAA+C;AAC7C,UAAIF,QAAQ,CAACL,KAAb,EAAoB;AAEpBK,cAAQ,CAACL,KAATK,GAAiBE,cAAjBF;AACF;;AAEAvB,aAAS,CAAC;AAAA,eAEC,CACL,QADK,EAELgB,KAAK,CAACU,KAFD,CAFD;AAKL,eASM,CACLJ,eAAe,CAACJ,KADX,EAELF,KAAK,CAACW,KAFD;AAdD,OAiBL;AAAApB,sBAECgB,QAAQ,CAACL,KAATK,IAAcK;AAAA,sBACgBZ,KAAK,CAACJ,UADtB;AACgC;AADhC,SACgC;AAAAL,wBAC1Cc,KAAK,CAACd,OAANc,IAD0C;AAAA,OADhC,CAFf;AAAA,KAjBK,GAuBL,kCAhBC;AACEQ,aAAO,EAAEL,WADX;AAEEpB,aAAO,EAAEY,KAAK,CAACZ;AAFjB,KAgBD,EAZC,IAYD,EAvBK,CAAD,CAATJ;AA2BA,WAAO,EAAP;AACF;;AAlDsC,CAAH,CAA9B","names":["makeComponentProps","makeDimensionProps","useDimension","useProxiedModel","makeTagProps","makeTransitionProps","MaybeTransition","intersect","genericComponent","propsFactory","useRender","makeVLazyProps","modelValue","Boolean","options","type","Object","default","root","undefined","rootMargin","threshold","transition","VLazy","name","directives","props","emits","value","setup","_ref","slots","dimensionStyles","isActive","onIntersect","isIntersecting","class","style","_createVNode","handler"],"sources":["../../../src/components/VLazy/VLazy.tsx"],"sourcesContent":["// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeTransitionProps, MaybeTransition } from '@/composables/transition'\n\n// Directives\nimport intersect from '@/directives/intersect'\n\n// Utilities\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\nexport const makeVLazyProps = propsFactory({\n  modelValue: Boolean,\n  options: {\n    type: Object as PropType<IntersectionObserverInit>,\n    // For more information on types, navigate to:\n    // https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n    default: () => ({\n      root: undefined,\n      rootMargin: undefined,\n      threshold: undefined,\n    }),\n  },\n\n  ...makeComponentProps(),\n  ...makeDimensionProps(),\n  ...makeTagProps(),\n  ...makeTransitionProps({ transition: 'fade-transition' }),\n}, 'VLazy')\n\nexport const VLazy = genericComponent()({\n  name: 'VLazy',\n\n  directives: { intersect },\n\n  props: makeVLazyProps(),\n\n  emits: {\n    'update:modelValue': (value: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const { dimensionStyles } = useDimension(props)\n\n    const isActive = useProxiedModel(props, 'modelValue')\n\n    function onIntersect (isIntersecting: boolean) {\n      if (isActive.value) return\n\n      isActive.value = isIntersecting\n    }\n\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-lazy',\n          props.class,\n        ]}\n        v-intersect={[\n          {\n            handler: onIntersect,\n            options: props.options,\n          },\n          null,\n          isActive.value ? [] : ['once'],\n        ]}\n        style={[\n          dimensionStyles.value,\n          props.style,\n        ]}\n      >\n        { isActive.value && (\n          <MaybeTransition transition={ props.transition } appear>\n            { slots.default?.() }\n          </MaybeTransition>\n        )}\n      </props.tag>\n    ))\n\n    return {}\n  },\n})\n\nexport type VLazy = InstanceType<typeof VLazy>\n"]},"metadata":{},"sourceType":"module"}
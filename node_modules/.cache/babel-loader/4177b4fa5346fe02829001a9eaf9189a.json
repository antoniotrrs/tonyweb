{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/antoniotorres/Documents/tony/tonyweb/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _asyncToGenerator from \"/Users/antoniotorres/Documents/tony/tonyweb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _defineProperty from \"/Users/antoniotorres/Documents/tony/tonyweb/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/Users/antoniotorres/Documents/tony/tonyweb/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.function.name.js\";\n// Composables\nimport { makeFocusProps } from \"./focus.js\";\nimport { useForm } from \"./form.js\";\nimport { useProxiedModel } from \"./proxiedModel.js\";\nimport { useToggleScope } from \"./toggleScope.js\"; // import { useRules } from '@/labs/rules'\n// Utilities\n\nimport { computed, nextTick, onBeforeMount, onBeforeUnmount, onMounted, ref, shallowRef, unref, useId, watch } from 'vue';\nimport { getCurrentInstance, getCurrentInstanceName, propsFactory, wrapInArray } from \"../util/index.js\"; // Types\n// type ValidationRuleParams = [any, string?]\n// type ValidationAlias = string | [string, ...ValidationRuleParams]\n\nexport var makeValidationProps = propsFactory(_objectSpread({\n  disabled: {\n    type: Boolean,\n    default: null\n  },\n  error: Boolean,\n  errorMessages: {\n    type: [Array, String],\n    default: function _default() {\n      return [];\n    }\n  },\n  maxErrors: {\n    type: [Number, String],\n    default: 1\n  },\n  name: String,\n  label: String,\n  readonly: {\n    type: Boolean,\n    default: null\n  },\n  rules: {\n    type: Array,\n    // type: Array as PropType<readonly (ValidationRule | ValidationAlias)[]>,\n    default: function _default() {\n      return [];\n    }\n  },\n  modelValue: null,\n  validateOn: String,\n  validationValue: null\n}, makeFocusProps()), 'validation');\nexport function useValidation(props) {\n  var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getCurrentInstanceName();\n  var id = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : useId();\n  var model = useProxiedModel(props, 'modelValue');\n  var validationModel = computed(function () {\n    return props.validationValue === undefined ? model.value : props.validationValue;\n  });\n  var form = useForm(props); // const rules = useRules()\n\n  var internalErrorMessages = ref([]);\n  var isPristine = shallowRef(true);\n  var isDirty = computed(function () {\n    return !!(wrapInArray(model.value === '' ? null : model.value).length || wrapInArray(validationModel.value === '' ? null : validationModel.value).length);\n  });\n  var errorMessages = computed(function () {\n    var _props$errorMessages;\n\n    return (_props$errorMessages = props.errorMessages) !== null && _props$errorMessages !== void 0 && _props$errorMessages.length ? wrapInArray(props.errorMessages).concat(internalErrorMessages.value).slice(0, Math.max(0, Number(props.maxErrors))) : internalErrorMessages.value;\n  });\n  var validateOn = computed(function () {\n    var _props$validateOn, _form$validateOn, _value$split, _value;\n\n    var value = ((_props$validateOn = props.validateOn) !== null && _props$validateOn !== void 0 ? _props$validateOn : (_form$validateOn = form.validateOn) === null || _form$validateOn === void 0 ? void 0 : _form$validateOn.value) || 'input';\n    if (value === 'lazy') value = 'input lazy';\n    if (value === 'eager') value = 'input eager';\n    var set = new Set((_value$split = (_value = value) === null || _value === void 0 ? void 0 : _value.split(' ')) !== null && _value$split !== void 0 ? _value$split : []);\n    return {\n      input: set.has('input'),\n      blur: set.has('blur') || set.has('input') || set.has('invalid-input'),\n      invalidInput: set.has('invalid-input'),\n      lazy: set.has('lazy'),\n      eager: set.has('eager')\n    };\n  });\n  var isValid = computed(function () {\n    var _props$errorMessages2;\n\n    if (props.error || (_props$errorMessages2 = props.errorMessages) !== null && _props$errorMessages2 !== void 0 && _props$errorMessages2.length) return false;\n    if (!props.rules.length) return true;\n\n    if (isPristine.value) {\n      return internalErrorMessages.value.length || validateOn.value.lazy ? null : true;\n    } else {\n      return !internalErrorMessages.value.length;\n    }\n  });\n  var isValidating = shallowRef(false);\n  var validationClasses = computed(function () {\n    var _ref;\n\n    return _ref = {}, _defineProperty(_ref, \"\".concat(name, \"--error\"), isValid.value === false), _defineProperty(_ref, \"\".concat(name, \"--dirty\"), isDirty.value), _defineProperty(_ref, \"\".concat(name, \"--disabled\"), form.isDisabled.value), _defineProperty(_ref, \"\".concat(name, \"--readonly\"), form.isReadonly.value), _ref;\n  });\n  var vm = getCurrentInstance('validation');\n  var uid = computed(function () {\n    var _props$name;\n\n    return (_props$name = props.name) !== null && _props$name !== void 0 ? _props$name : unref(id);\n  }); // const resolvedRules = computed(() => props.rules.map(rule => {\n  //   let ruleName: string | null = null\n  //   let ruleParams: ValidationRuleParams = [undefined]\n  //   if (Array.isArray(rule)) {\n  //     ruleName = rule[0]\n  //     ruleParams = rule.slice(1) as ValidationRuleParams\n  //   } else if (typeof rule === 'string') {\n  //     ruleName = rule\n  //   }\n  //   if (ruleName !== null) {\n  //     if (ruleName.startsWith('$')) {\n  //       ruleName = ruleName.slice(1)\n  //     }\n  //     return rules?.[ruleName]?.(...ruleParams)\n  //   } else {\n  //     return rule\n  //   }\n  // }))\n\n  onBeforeMount(function () {\n    var _form$register;\n\n    (_form$register = form.register) === null || _form$register === void 0 ? void 0 : _form$register.call(form, {\n      id: uid.value,\n      vm: vm,\n      validate: validate,\n      reset: reset,\n      resetValidation: resetValidation\n    });\n  });\n  onBeforeUnmount(function () {\n    var _form$unregister;\n\n    (_form$unregister = form.unregister) === null || _form$unregister === void 0 ? void 0 : _form$unregister.call(form, uid.value);\n  });\n  onMounted( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    var _form$update;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (validateOn.value.lazy) {\n              _context.next = 3;\n              break;\n            }\n\n            _context.next = 3;\n            return validate(!validateOn.value.eager);\n\n          case 3:\n            (_form$update = form.update) === null || _form$update === void 0 ? void 0 : _form$update.call(form, uid.value, isValid.value, errorMessages.value);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })));\n  useToggleScope(function () {\n    return validateOn.value.input || validateOn.value.invalidInput && isValid.value === false;\n  }, function () {\n    watch(validationModel, function () {\n      if (validationModel.value != null) {\n        validate();\n      } else if (props.focused) {\n        var unwatch = watch(function () {\n          return props.focused;\n        }, function (val) {\n          if (!val) validate();\n          unwatch();\n        });\n      }\n    });\n  });\n  useToggleScope(function () {\n    return validateOn.value.blur;\n  }, function () {\n    watch(function () {\n      return props.focused;\n    }, function (val) {\n      if (!val) validate();\n    });\n  });\n  watch([isValid, errorMessages], function () {\n    var _form$update2;\n\n    (_form$update2 = form.update) === null || _form$update2 === void 0 ? void 0 : _form$update2.call(form, uid.value, isValid.value, errorMessages.value);\n  });\n\n  function reset() {\n    return _reset.apply(this, arguments);\n  }\n\n  function _reset() {\n    _reset = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              model.value = null;\n              _context2.next = 3;\n              return nextTick();\n\n            case 3:\n              _context2.next = 5;\n              return resetValidation();\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _reset.apply(this, arguments);\n  }\n\n  function resetValidation() {\n    return _resetValidation.apply(this, arguments);\n  }\n\n  function _resetValidation() {\n    _resetValidation = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              isPristine.value = true;\n\n              if (validateOn.value.lazy) {\n                _context3.next = 6;\n                break;\n              }\n\n              _context3.next = 4;\n              return validate(!validateOn.value.eager);\n\n            case 4:\n              _context3.next = 7;\n              break;\n\n            case 6:\n              internalErrorMessages.value = [];\n\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    return _resetValidation.apply(this, arguments);\n  }\n\n  function validate() {\n    return _validate.apply(this, arguments);\n  }\n\n  function _validate() {\n    _validate = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n      var silent,\n          results,\n          _iterator,\n          _step,\n          _loop,\n          _ret,\n          _args5 = arguments;\n\n      return regeneratorRuntime.wrap(function _callee4$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              silent = _args5.length > 0 && _args5[0] !== undefined ? _args5[0] : false;\n\n              if (!(props.disabled || props.readonly)) {\n                _context5.next = 5;\n                break;\n              }\n\n              internalErrorMessages.value = [];\n              isValidating.value = false;\n              return _context5.abrupt(\"return\", internalErrorMessages.value);\n\n            case 5:\n              results = [];\n              isValidating.value = true;\n              _iterator = _createForOfIteratorHelper(props.rules);\n              _context5.prev = 8;\n              _loop = /*#__PURE__*/regeneratorRuntime.mark(function _loop() {\n                var _props$maxErrors;\n\n                var rule, handler, result;\n                return regeneratorRuntime.wrap(function _loop$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        rule = _step.value;\n\n                        if (!(results.length >= Number((_props$maxErrors = props.maxErrors) !== null && _props$maxErrors !== void 0 ? _props$maxErrors : 1))) {\n                          _context4.next = 3;\n                          break;\n                        }\n\n                        return _context4.abrupt(\"return\", \"break\");\n\n                      case 3:\n                        handler = typeof rule === 'function' ? rule : function () {\n                          return rule;\n                        };\n                        _context4.next = 6;\n                        return handler(validationModel.value);\n\n                      case 6:\n                        result = _context4.sent;\n\n                        if (!(result === true)) {\n                          _context4.next = 9;\n                          break;\n                        }\n\n                        return _context4.abrupt(\"return\", \"continue\");\n\n                      case 9:\n                        if (!(result !== false && typeof result !== 'string')) {\n                          _context4.next = 12;\n                          break;\n                        }\n\n                        // eslint-disable-next-line no-console\n                        console.warn(\"\".concat(result, \" is not a valid value. Rule functions must return boolean true or a string.\"));\n                        return _context4.abrupt(\"return\", \"continue\");\n\n                      case 12:\n                        results.push(result || '');\n\n                      case 13:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _loop);\n              });\n\n              _iterator.s();\n\n            case 11:\n              if ((_step = _iterator.n()).done) {\n                _context5.next = 20;\n                break;\n              }\n\n              return _context5.delegateYield(_loop(), \"t0\", 13);\n\n            case 13:\n              _ret = _context5.t0;\n\n              if (!(_ret === \"break\")) {\n                _context5.next = 16;\n                break;\n              }\n\n              return _context5.abrupt(\"break\", 20);\n\n            case 16:\n              if (!(_ret === \"continue\")) {\n                _context5.next = 18;\n                break;\n              }\n\n              return _context5.abrupt(\"continue\", 18);\n\n            case 18:\n              _context5.next = 11;\n              break;\n\n            case 20:\n              _context5.next = 25;\n              break;\n\n            case 22:\n              _context5.prev = 22;\n              _context5.t1 = _context5[\"catch\"](8);\n\n              _iterator.e(_context5.t1);\n\n            case 25:\n              _context5.prev = 25;\n\n              _iterator.f();\n\n              return _context5.finish(25);\n\n            case 28:\n              internalErrorMessages.value = results;\n              isValidating.value = false;\n              isPristine.value = silent;\n              return _context5.abrupt(\"return\", internalErrorMessages.value);\n\n            case 32:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee4, null, [[8, 22, 25, 28]]);\n    }));\n    return _validate.apply(this, arguments);\n  }\n\n  return {\n    errorMessages: errorMessages,\n    isDirty: isDirty,\n    isDisabled: form.isDisabled,\n    isReadonly: form.isReadonly,\n    isPristine: isPristine,\n    isValid: isValid,\n    isValidating: isValidating,\n    reset: reset,\n    resetValidation: resetValidation,\n    validate: validate,\n    validationClasses: validationClasses\n  };\n}","map":{"version":3,"mappings":"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","names":["makeFocusProps","useForm","useProxiedModel","useToggleScope","computed","nextTick","onBeforeMount","onBeforeUnmount","onMounted","ref","shallowRef","unref","useId","watch","getCurrentInstance","getCurrentInstanceName","propsFactory","wrapInArray","makeValidationProps","disabled","type","Boolean","default","error","errorMessages","Array","String","maxErrors","Number","name","label","readonly","rules","modelValue","validateOn","validationValue","useValidation","props","id","model","validationModel","undefined","value","form","internalErrorMessages","isPristine","isDirty","length","concat","slice","Math","max","set","Set","split","input","has","blur","invalidInput","lazy","eager","isValid","isValidating","validationClasses","isDisabled","isReadonly","vm","uid","register","validate","reset","resetValidation","unregister","update","focused","unwatch","val","silent","arguments","results","rule","handler","result","console","warn","push"],"sources":["../../src/composables/validation.ts"],"sourcesContent":["// Composables\nimport { makeFocusProps } from '@/composables/focus'\nimport { useForm } from '@/composables/form'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useToggleScope } from '@/composables/toggleScope'\n// import { useRules } from '@/labs/rules'\n\n// Utilities\nimport { computed, nextTick, onBeforeMount, onBeforeUnmount, onMounted, ref, shallowRef, unref, useId, watch } from 'vue'\nimport { getCurrentInstance, getCurrentInstanceName, propsFactory, wrapInArray } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { EventProp, MaybeRef } from '@/util'\n\nexport type ValidationResult = string | boolean\nexport type ValidationRule =\n  | ValidationResult\n  | PromiseLike<ValidationResult>\n  | ((value: any) => ValidationResult)\n  | ((value: any) => PromiseLike<ValidationResult>)\n\ntype ValidateOnValue = 'blur' | 'input' | 'submit' | 'invalid-input'\ntype ValidateOn =\n  | ValidateOnValue\n  | `${ValidateOnValue} lazy`\n  | `${ValidateOnValue} eager`\n  | `lazy ${ValidateOnValue}`\n  | `eager ${ValidateOnValue}`\n  | 'lazy'\n  | 'eager'\n\n// type ValidationRuleParams = [any, string?]\n// type ValidationAlias = string | [string, ...ValidationRuleParams]\n\nexport interface ValidationProps {\n  disabled: boolean | null\n  error: boolean\n  errorMessages: string | readonly string[] | null\n  focused: boolean\n  maxErrors: string | number\n  name: string | undefined\n  label: string | undefined\n  readonly: boolean | null\n  rules: readonly ValidationRule[]\n  // rules: readonly (ValidationRule | ValidationAlias)[]\n  modelValue: any\n  'onUpdate:modelValue': EventProp | undefined\n  validateOn?: ValidateOn\n  validationValue: any\n}\n\nexport const makeValidationProps = propsFactory({\n  disabled: {\n    type: Boolean as PropType<boolean | null>,\n    default: null,\n  },\n  error: Boolean,\n  errorMessages: {\n    type: [Array, String] as PropType<string | readonly string[] | null>,\n    default: () => ([]),\n  },\n  maxErrors: {\n    type: [Number, String],\n    default: 1,\n  },\n  name: String,\n  label: String,\n  readonly: {\n    type: Boolean as PropType<boolean | null>,\n    default: null,\n  },\n  rules: {\n    type: Array as PropType<readonly ValidationRule[]>,\n    // type: Array as PropType<readonly (ValidationRule | ValidationAlias)[]>,\n    default: () => ([]),\n  },\n  modelValue: null,\n  validateOn: String as PropType<ValidationProps['validateOn']>,\n  validationValue: null,\n\n  ...makeFocusProps(),\n}, 'validation')\n\nexport function useValidation (\n  props: ValidationProps,\n  name = getCurrentInstanceName(),\n  id: MaybeRef<string | number> = useId(),\n) {\n  const model = useProxiedModel(props, 'modelValue')\n  const validationModel = computed(() => props.validationValue === undefined ? model.value : props.validationValue)\n  const form = useForm(props)\n  // const rules = useRules()\n  const internalErrorMessages = ref<string[]>([])\n  const isPristine = shallowRef(true)\n  const isDirty = computed(() => !!(\n    wrapInArray(model.value === '' ? null : model.value).length ||\n    wrapInArray(validationModel.value === '' ? null : validationModel.value).length\n  ))\n  const errorMessages = computed(() => {\n    return props.errorMessages?.length\n      ? wrapInArray(props.errorMessages).concat(internalErrorMessages.value).slice(0, Math.max(0, Number(props.maxErrors)))\n      : internalErrorMessages.value\n  })\n  const validateOn = computed(() => {\n    let value = (props.validateOn ?? form.validateOn?.value) || 'input'\n    if (value === 'lazy') value = 'input lazy'\n    if (value === 'eager') value = 'input eager'\n    const set = new Set(value?.split(' ') ?? [])\n\n    return {\n      input: set.has('input'),\n      blur: set.has('blur') || set.has('input') || set.has('invalid-input'),\n      invalidInput: set.has('invalid-input'),\n      lazy: set.has('lazy'),\n      eager: set.has('eager'),\n    }\n  })\n  const isValid = computed(() => {\n    if (props.error || props.errorMessages?.length) return false\n    if (!props.rules.length) return true\n    if (isPristine.value) {\n      return internalErrorMessages.value.length || validateOn.value.lazy ? null : true\n    } else {\n      return !internalErrorMessages.value.length\n    }\n  })\n  const isValidating = shallowRef(false)\n  const validationClasses = computed(() => {\n    return {\n      [`${name}--error`]: isValid.value === false,\n      [`${name}--dirty`]: isDirty.value,\n      [`${name}--disabled`]: form.isDisabled.value,\n      [`${name}--readonly`]: form.isReadonly.value,\n    }\n  })\n\n  const vm = getCurrentInstance('validation')\n  const uid = computed(() => props.name ?? unref(id))\n\n  // const resolvedRules = computed(() => props.rules.map(rule => {\n  //   let ruleName: string | null = null\n  //   let ruleParams: ValidationRuleParams = [undefined]\n  //   if (Array.isArray(rule)) {\n  //     ruleName = rule[0]\n  //     ruleParams = rule.slice(1) as ValidationRuleParams\n  //   } else if (typeof rule === 'string') {\n  //     ruleName = rule\n  //   }\n\n  //   if (ruleName !== null) {\n  //     if (ruleName.startsWith('$')) {\n  //       ruleName = ruleName.slice(1)\n  //     }\n\n  //     return rules?.[ruleName]?.(...ruleParams)\n  //   } else {\n  //     return rule\n  //   }\n  // }))\n\n  onBeforeMount(() => {\n    form.register?.({\n      id: uid.value,\n      vm,\n      validate,\n      reset,\n      resetValidation,\n    })\n  })\n\n  onBeforeUnmount(() => {\n    form.unregister?.(uid.value)\n  })\n\n  onMounted(async () => {\n    if (!validateOn.value.lazy) {\n      await validate(!validateOn.value.eager)\n    }\n    form.update?.(uid.value, isValid.value, errorMessages.value)\n  })\n\n  useToggleScope(() => validateOn.value.input || (validateOn.value.invalidInput && isValid.value === false), () => {\n    watch(validationModel, () => {\n      if (validationModel.value != null) {\n        validate()\n      } else if (props.focused) {\n        const unwatch = watch(() => props.focused, val => {\n          if (!val) validate()\n\n          unwatch()\n        })\n      }\n    })\n  })\n\n  useToggleScope(() => validateOn.value.blur, () => {\n    watch(() => props.focused, val => {\n      if (!val) validate()\n    })\n  })\n\n  watch([isValid, errorMessages], () => {\n    form.update?.(uid.value, isValid.value, errorMessages.value)\n  })\n\n  async function reset () {\n    model.value = null\n    await nextTick()\n    await resetValidation()\n  }\n\n  async function resetValidation () {\n    isPristine.value = true\n    if (!validateOn.value.lazy) {\n      await validate(!validateOn.value.eager)\n    } else {\n      internalErrorMessages.value = []\n    }\n  }\n\n  async function validate (silent = false) {\n    if (props.disabled || props.readonly) {\n      internalErrorMessages.value = []\n      isValidating.value = false\n      return internalErrorMessages.value\n    }\n\n    const results = []\n\n    isValidating.value = true\n\n    for (const rule of props.rules) {\n      if (results.length >= Number(props.maxErrors ?? 1)) {\n        break\n      }\n\n      const handler = typeof rule === 'function' ? rule : () => rule\n      const result = await handler(validationModel.value)\n\n      if (result === true) continue\n\n      if (result !== false && typeof result !== 'string') {\n        // eslint-disable-next-line no-console\n        console.warn(`${result} is not a valid value. Rule functions must return boolean true or a string.`)\n\n        continue\n      }\n\n      results.push(result || '')\n    }\n\n    internalErrorMessages.value = results\n    isValidating.value = false\n    isPristine.value = silent\n\n    return internalErrorMessages.value\n  }\n\n  return {\n    errorMessages,\n    isDirty,\n    isDisabled: form.isDisabled,\n    isReadonly: form.isReadonly,\n    isPristine,\n    isValid,\n    isValidating,\n    reset,\n    resetValidation,\n    validate,\n    validationClasses,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
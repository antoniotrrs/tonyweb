{"ast":null,"code":"import _slicedToArray from \"/Users/antoniotorres/Documents/tony/tonyweb/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectSpread from \"/Users/antoniotorres/Documents/tony/tonyweb/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport { Fragment as _Fragment, createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\"; // Styles\n\nimport \"./VRadioGroup.css\"; // Components\n\nimport { makeVInputProps, VInput } from \"../VInput/VInput.js\";\nimport { VLabel } from \"../VLabel/index.js\";\nimport { VSelectionControl } from \"../VSelectionControl/index.js\";\nimport { makeSelectionControlGroupProps, VSelectionControlGroup } from \"../VSelectionControlGroup/VSelectionControlGroup.js\"; // Composables\n\nimport { IconValue } from \"../../composables/icons.js\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.js\"; // Utilities\n\nimport { computed, useId } from 'vue';\nimport { filterInputAttrs, genericComponent, omit, propsFactory, useRender } from \"../../util/index.js\"; // Types\n\nexport var makeVRadioGroupProps = propsFactory(_objectSpread(_objectSpread(_objectSpread({\n  height: {\n    type: [Number, String],\n    default: 'auto'\n  }\n}, makeVInputProps()), omit(makeSelectionControlGroupProps(), ['multiple'])), {}, {\n  trueIcon: {\n    type: IconValue,\n    default: '$radioOn'\n  },\n  falseIcon: {\n    type: IconValue,\n    default: '$radioOff'\n  },\n  type: {\n    type: String,\n    default: 'radio'\n  }\n}), 'VRadioGroup');\nexport var VRadioGroup = genericComponent()({\n  name: 'VRadioGroup',\n  inheritAttrs: false,\n  props: makeVRadioGroupProps(),\n  emits: {\n    'update:modelValue': function updateModelValue(value) {\n      return true;\n    }\n  },\n  setup: function setup(props, _ref) {\n    var attrs = _ref.attrs,\n        slots = _ref.slots;\n    var uid = useId();\n    var id = computed(function () {\n      return props.id || \"radio-group-\".concat(uid);\n    });\n    var model = useProxiedModel(props, 'modelValue');\n    useRender(function () {\n      var _filterInputAttrs = filterInputAttrs(attrs),\n          _filterInputAttrs2 = _slicedToArray(_filterInputAttrs, 2),\n          rootAttrs = _filterInputAttrs2[0],\n          controlAttrs = _filterInputAttrs2[1];\n\n      var inputProps = VInput.filterProps(props);\n      var controlProps = VSelectionControl.filterProps(props);\n      var label = slots.label ? slots.label({\n        label: props.label,\n        props: {\n          for: id.value\n        }\n      }) : props.label;\n      return _createVNode(VInput, _mergeProps({\n        \"class\": ['v-radio-group', props.class],\n        \"style\": props.style\n      }, rootAttrs, inputProps, {\n        \"modelValue\": model.value,\n        \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n          return model.value = $event;\n        },\n        \"id\": id.value\n      }), _objectSpread(_objectSpread({}, slots), {}, {\n        default: function _default(_ref2) {\n          var id = _ref2.id,\n              messagesId = _ref2.messagesId,\n              isDisabled = _ref2.isDisabled,\n              isReadonly = _ref2.isReadonly;\n          return _createVNode(_Fragment, null, [label && _createVNode(VLabel, {\n            \"id\": id.value\n          }, {\n            default: function _default() {\n              return [label];\n            }\n          }), _createVNode(VSelectionControlGroup, _mergeProps(controlProps, {\n            \"id\": id.value,\n            \"aria-describedby\": messagesId.value,\n            \"defaultsTarget\": \"VRadio\",\n            \"trueIcon\": props.trueIcon,\n            \"falseIcon\": props.falseIcon,\n            \"type\": props.type,\n            \"disabled\": isDisabled.value,\n            \"readonly\": isReadonly.value,\n            \"aria-labelledby\": label ? id.value : undefined,\n            \"multiple\": false\n          }, controlAttrs, {\n            \"modelValue\": model.value,\n            \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n              return model.value = $event;\n            }\n          }), slots)]);\n        }\n      }));\n    });\n    return {};\n  }\n});","map":{"version":3,"mappings":"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","names":["makeVInputProps","VInput","VLabel","VSelectionControl","makeSelectionControlGroupProps","VSelectionControlGroup","IconValue","useProxiedModel","computed","useId","filterInputAttrs","genericComponent","omit","propsFactory","useRender","makeVRadioGroupProps","height","type","Number","String","default","trueIcon","falseIcon","VRadioGroup","name","inheritAttrs","props","emits","value","setup","_ref","attrs","slots","uid","id","model","rootAttrs","controlAttrs","inputProps","filterProps","controlProps","label","for","class","style","$event","_ref2","messagesId","isDisabled","isReadonly","_createVNode","undefined"],"sources":["../../../src/components/VRadioGroup/VRadioGroup.tsx"],"sourcesContent":["// Styles\nimport './VRadioGroup.sass'\n\n// Components\nimport { makeVInputProps, VInput } from '@/components/VInput/VInput'\nimport { VLabel } from '@/components/VLabel'\nimport { VSelectionControl } from '@/components/VSelectionControl'\nimport { makeSelectionControlGroupProps, VSelectionControlGroup } from '@/components/VSelectionControlGroup/VSelectionControlGroup'\n\n// Composables\nimport { IconValue } from '@/composables/icons'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed, useId } from 'vue'\nimport { filterInputAttrs, genericComponent, omit, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { VInputSlots } from '@/components/VInput/VInput'\nimport type { GenericProps } from '@/util'\n\nexport type VRadioGroupSlots = Omit<VInputSlots, 'default'> & {\n  default: never\n  label: {\n    label: string | undefined\n    props: Record<string, any>\n  }\n}\n\nexport const makeVRadioGroupProps = propsFactory({\n  height: {\n    type: [Number, String],\n    default: 'auto',\n  },\n\n  ...makeVInputProps(),\n  ...omit(makeSelectionControlGroupProps(), ['multiple']),\n\n  trueIcon: {\n    type: IconValue,\n    default: '$radioOn',\n  },\n  falseIcon: {\n    type: IconValue,\n    default: '$radioOff',\n  },\n  type: {\n    type: String,\n    default: 'radio',\n  },\n}, 'VRadioGroup')\n\nexport const VRadioGroup = genericComponent<new <T>(\n  props: {\n    modelValue?: T | null\n    'onUpdate:modelValue'?: (value: T | null) => void\n  },\n  slots: VRadioGroupSlots,\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VRadioGroup',\n\n  inheritAttrs: false,\n\n  props: makeVRadioGroupProps(),\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { attrs, slots }) {\n    const uid = useId()\n    const id = computed(() => props.id || `radio-group-${uid}`)\n    const model = useProxiedModel(props, 'modelValue')\n\n    useRender(() => {\n      const [rootAttrs, controlAttrs] = filterInputAttrs(attrs)\n      const inputProps = VInput.filterProps(props)\n      const controlProps = VSelectionControl.filterProps(props)\n      const label = slots.label\n        ? slots.label({\n          label: props.label,\n          props: { for: id.value },\n        })\n        : props.label\n\n      return (\n        <VInput\n          class={[\n            'v-radio-group',\n            props.class,\n          ]}\n          style={ props.style }\n          { ...rootAttrs }\n          { ...inputProps }\n          v-model={ model.value }\n          id={ id.value }\n        >\n          {{\n            ...slots,\n            default: ({\n              id,\n              messagesId,\n              isDisabled,\n              isReadonly,\n            }) => (\n              <>\n                { label && (\n                  <VLabel id={ id.value }>\n                    { label }\n                  </VLabel>\n                )}\n\n                <VSelectionControlGroup\n                  { ...controlProps }\n                  id={ id.value }\n                  aria-describedby={ messagesId.value }\n                  defaultsTarget=\"VRadio\"\n                  trueIcon={ props.trueIcon }\n                  falseIcon={ props.falseIcon }\n                  type={ props.type }\n                  disabled={ isDisabled.value }\n                  readonly={ isReadonly.value }\n                  aria-labelledby={ label ? id.value : undefined }\n                  multiple={ false }\n                  { ...controlAttrs }\n                  v-model={ model.value }\n                  v-slots={ slots }\n                />\n              </>\n            ),\n          }}\n        </VInput>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VRadioGroup = InstanceType<typeof VRadioGroup>\n"]},"metadata":{},"sourceType":"module"}
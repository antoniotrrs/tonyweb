{"ast":null,"code":"import { Fragment as _Fragment, mergeProps as _mergeProps, createVNode as _createVNode } from \"vue\"; // Styles\n\nimport \"./VTabs.css\"; // Components\n\nimport { VTab } from \"./VTab.js\";\nimport { VTabsWindow } from \"./VTabsWindow.js\";\nimport { VTabsWindowItem } from \"./VTabsWindowItem.js\";\nimport { makeVSlideGroupProps, VSlideGroup } from \"../VSlideGroup/VSlideGroup.js\"; // Composables\n\nimport { useBackgroundColor } from \"../../composables/color.js\";\nimport { provideDefaults } from \"../../composables/defaults.js\";\nimport { makeDensityProps, useDensity } from \"../../composables/density.js\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.js\";\nimport { useScopeId } from \"../../composables/scopeId.js\";\nimport { makeTagProps } from \"../../composables/tag.js\"; // Utilities\n\nimport { computed, toRef } from 'vue';\nimport { VTabsSymbol } from \"./shared.js\";\nimport { convertToUnit, genericComponent, isObject, propsFactory, useRender } from \"../../util/index.js\"; // Types\n\nfunction parseItems(items) {\n  if (!items) return [];\n  return items.map(item => {\n    if (!isObject(item)) return {\n      text: item,\n      value: item\n    };\n    return item;\n  });\n}\n\nexport const makeVTabsProps = propsFactory({\n  alignTabs: {\n    type: String,\n    default: 'start'\n  },\n  color: String,\n  fixedTabs: Boolean,\n  items: {\n    type: Array,\n    default: () => []\n  },\n  stacked: Boolean,\n  bgColor: String,\n  grow: Boolean,\n  height: {\n    type: [Number, String],\n    default: undefined\n  },\n  hideSlider: Boolean,\n  sliderColor: String,\n  ...makeVSlideGroupProps({\n    mandatory: 'force',\n    selectedClass: 'v-tab-item--selected'\n  }),\n  ...makeDensityProps(),\n  ...makeTagProps()\n}, 'VTabs');\nexport const VTabs = genericComponent()({\n  name: 'VTabs',\n  props: makeVTabsProps(),\n  emits: {\n    'update:modelValue': v => true\n  },\n\n  setup(props, _ref) {\n    let {\n      attrs,\n      slots\n    } = _ref;\n    const model = useProxiedModel(props, 'modelValue');\n    const items = computed(() => parseItems(props.items));\n    const {\n      densityClasses\n    } = useDensity(props);\n    const {\n      backgroundColorClasses,\n      backgroundColorStyles\n    } = useBackgroundColor(toRef(props, 'bgColor'));\n    const {\n      scopeId\n    } = useScopeId();\n    provideDefaults({\n      VTab: {\n        color: toRef(props, 'color'),\n        direction: toRef(props, 'direction'),\n        stacked: toRef(props, 'stacked'),\n        fixed: toRef(props, 'fixedTabs'),\n        sliderColor: toRef(props, 'sliderColor'),\n        hideSlider: toRef(props, 'hideSlider')\n      }\n    });\n    useRender(() => {\n      const slideGroupProps = VSlideGroup.filterProps(props);\n      const hasWindow = !!(slots.window || props.items.length > 0);\n      return _createVNode(_Fragment, null, [_createVNode(VSlideGroup, _mergeProps(slideGroupProps, {\n        \"modelValue\": model.value,\n        \"onUpdate:modelValue\": $event => model.value = $event,\n        \"class\": ['v-tabs', `v-tabs--${props.direction}`, `v-tabs--align-tabs-${props.alignTabs}`, {\n          'v-tabs--fixed-tabs': props.fixedTabs,\n          'v-tabs--grow': props.grow,\n          'v-tabs--stacked': props.stacked\n        }, densityClasses.value, backgroundColorClasses.value, props.class],\n        \"style\": [{\n          '--v-tabs-height': convertToUnit(props.height)\n        }, backgroundColorStyles.value, props.style],\n        \"role\": \"tablist\",\n        \"symbol\": VTabsSymbol\n      }, scopeId, attrs), {\n        default: () => [slots.default?.() ?? items.value.map(item => slots.tab?.({\n          item\n        }) ?? _createVNode(VTab, _mergeProps(item, {\n          \"key\": item.text,\n          \"value\": item.value\n        }), {\n          default: slots[`tab.${item.value}`] ? () => slots[`tab.${item.value}`]?.({\n            item\n          }) : undefined\n        }))]\n      }), hasWindow && _createVNode(VTabsWindow, _mergeProps({\n        \"modelValue\": model.value,\n        \"onUpdate:modelValue\": $event => model.value = $event,\n        \"key\": \"tabs-window\"\n      }, scopeId), {\n        default: () => [items.value.map(item => slots.item?.({\n          item\n        }) ?? _createVNode(VTabsWindowItem, {\n          \"value\": item.value\n        }, {\n          default: () => slots[`item.${item.value}`]?.({\n            item\n          })\n        })), slots.window?.()]\n      })]);\n    });\n    return {};\n  }\n\n});","map":{"version":3,"mappings":"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","names":["VTab","VTabsWindow","VTabsWindowItem","makeVSlideGroupProps","VSlideGroup","useBackgroundColor","provideDefaults","makeDensityProps","useDensity","useProxiedModel","useScopeId","makeTagProps","computed","toRef","VTabsSymbol","convertToUnit","genericComponent","isObject","propsFactory","useRender","parseItems","items","map","item","text","value","makeVTabsProps","alignTabs","type","String","default","color","fixedTabs","Boolean","Array","stacked","bgColor","grow","height","Number","undefined","hideSlider","sliderColor","mandatory","selectedClass","VTabs","name","props","emits","v","setup","_ref","attrs","slots","model","densityClasses","backgroundColorClasses","backgroundColorStyles","scopeId","direction","fixed","slideGroupProps","filterProps","hasWindow","window","length","$event","class","style","tab","_createVNode"],"sources":["../../../src/components/VTabs/VTabs.tsx"],"sourcesContent":["// Styles\nimport './VTabs.sass'\n\n// Components\nimport { VTab } from './VTab'\nimport { VTabsWindow } from './VTabsWindow'\nimport { VTabsWindowItem } from './VTabsWindowItem'\nimport { makeVSlideGroupProps, VSlideGroup } from '@/components/VSlideGroup/VSlideGroup'\n\n// Composables\nimport { useBackgroundColor } from '@/composables/color'\nimport { provideDefaults } from '@/composables/defaults'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useScopeId } from '@/composables/scopeId'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { computed, toRef } from 'vue'\nimport { VTabsSymbol } from './shared'\nimport { convertToUnit, genericComponent, isObject, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { GenericProps } from '@/util'\n\nexport type TabItem = string | number | Record<string, any>\n\nexport type VTabsSlot<T> = {\n  item: T\n}\n\nexport type VTabsSlots<T> = {\n  default: never\n  tab: VTabsSlot<T>\n  item: VTabsSlot<T>\n  window: never\n} & {\n  [key: `tab.${string}`]: VTabsSlot<T>\n  [key: `item.${string}`]: VTabsSlot<T>\n}\n\nfunction parseItems (items: readonly TabItem[] | undefined) {\n  if (!items) return []\n\n  return items.map(item => {\n    if (!isObject(item)) return { text: item, value: item }\n\n    return item\n  })\n}\n\nexport const makeVTabsProps = propsFactory({\n  alignTabs: {\n    type: String as PropType<'start' | 'title' | 'center' | 'end'>,\n    default: 'start',\n  },\n  color: String,\n  fixedTabs: Boolean,\n  items: {\n    type: Array as PropType<readonly TabItem[]>,\n    default: () => ([]),\n  },\n  stacked: Boolean,\n  bgColor: String,\n  grow: Boolean,\n  height: {\n    type: [Number, String],\n    default: undefined,\n  },\n  hideSlider: Boolean,\n  sliderColor: String,\n\n  ...makeVSlideGroupProps({\n    mandatory: 'force' as const,\n    selectedClass: 'v-tab-item--selected',\n  }),\n  ...makeDensityProps(),\n  ...makeTagProps(),\n}, 'VTabs')\n\nexport const VTabs = genericComponent<new <T = TabItem>(\n  props: {\n    items?: T[]\n  },\n  slots: VTabsSlots<T>\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VTabs',\n\n  props: makeVTabsProps(),\n\n  emits: {\n    'update:modelValue': (v: unknown) => true,\n  },\n\n  setup (props, { attrs, slots }) {\n    const model = useProxiedModel(props, 'modelValue')\n    const items = computed(() => parseItems(props.items))\n    const { densityClasses } = useDensity(props)\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'bgColor'))\n    const { scopeId } = useScopeId()\n\n    provideDefaults({\n      VTab: {\n        color: toRef(props, 'color'),\n        direction: toRef(props, 'direction'),\n        stacked: toRef(props, 'stacked'),\n        fixed: toRef(props, 'fixedTabs'),\n        sliderColor: toRef(props, 'sliderColor'),\n        hideSlider: toRef(props, 'hideSlider'),\n      },\n    })\n\n    useRender(() => {\n      const slideGroupProps = VSlideGroup.filterProps(props)\n      const hasWindow = !!(slots.window || props.items.length > 0)\n\n      return (\n        <>\n          <VSlideGroup\n            { ...slideGroupProps }\n            v-model={ model.value }\n            class={[\n              'v-tabs',\n              `v-tabs--${props.direction}`,\n              `v-tabs--align-tabs-${props.alignTabs}`,\n              {\n                'v-tabs--fixed-tabs': props.fixedTabs,\n                'v-tabs--grow': props.grow,\n                'v-tabs--stacked': props.stacked,\n              },\n              densityClasses.value,\n              backgroundColorClasses.value,\n              props.class,\n            ]}\n            style={[\n              { '--v-tabs-height': convertToUnit(props.height) },\n              backgroundColorStyles.value,\n              props.style,\n            ]}\n            role=\"tablist\"\n            symbol={ VTabsSymbol }\n            { ...scopeId }\n            { ...attrs }\n          >\n            { slots.default?.() ?? items.value.map(item => (\n              slots.tab?.({ item }) ?? (\n                <VTab\n                  { ...item }\n                  key={ item.text }\n                  value={ item.value }\n                  v-slots={{\n                    default: slots[`tab.${item.value}`] ? () => slots[`tab.${item.value}`]?.({ item }) : undefined,\n                  }}\n                />\n              )\n            ))}\n          </VSlideGroup>\n\n          { hasWindow && (\n            <VTabsWindow\n              v-model={ model.value }\n              key=\"tabs-window\"\n              { ...scopeId }\n            >\n              { items.value.map(item => slots.item?.({ item }) ?? (\n                <VTabsWindowItem\n                  value={ item.value }\n                  v-slots={{\n                    default: () => slots[`item.${item.value}`]?.({ item }),\n                  }}\n                />\n              ))}\n\n              { slots.window?.() }\n            </VTabsWindow>\n          )}\n        </>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VTabs = InstanceType<typeof VTabs>\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"/Users/antoniotorres/Documents/tony/tonyweb/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/Users/antoniotorres/Documents/tony/tonyweb/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.flat.js\";\nimport \"core-js/modules/es.array.unscopables.flat.js\";\nimport { createVNode as _createVNode, vShow as _vShow, withDirectives as _withDirectives, Fragment as _Fragment, mergeProps as _mergeProps } from \"vue\"; // Styles\n\nimport \"./VField.css\"; // Components\n\nimport { VFieldLabel } from \"./VFieldLabel.js\";\nimport { VExpandXTransition } from \"../transitions/index.js\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.js\";\nimport { useInputIcon } from \"../VInput/InputIcon.js\"; // Composables\n\nimport { useBackgroundColor, useTextColor } from \"../../composables/color.js\";\nimport { makeComponentProps } from \"../../composables/component.js\";\nimport { makeFocusProps, useFocus } from \"../../composables/focus.js\";\nimport { IconValue } from \"../../composables/icons.js\";\nimport { LoaderSlot, makeLoaderProps, useLoader } from \"../../composables/loader.js\";\nimport { useRtl } from \"../../composables/locale.js\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.js\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.js\"; // Utilities\n\nimport { computed, ref, toRef, useId, watch } from 'vue';\nimport { animate, convertToUnit, EventProp, genericComponent, nullifyTransforms, propsFactory, standardEasing, useRender } from \"../../util/index.js\"; // Types\n\nvar allowedVariants = ['underlined', 'outlined', 'filled', 'solo', 'solo-inverted', 'solo-filled', 'plain'];\nexport var makeVFieldProps = propsFactory(_objectSpread(_objectSpread(_objectSpread(_objectSpread({\n  appendInnerIcon: IconValue,\n  bgColor: String,\n  clearable: Boolean,\n  clearIcon: {\n    type: IconValue,\n    default: '$clear'\n  },\n  active: Boolean,\n  centerAffix: {\n    type: Boolean,\n    default: undefined\n  },\n  color: String,\n  baseColor: String,\n  dirty: Boolean,\n  disabled: {\n    type: Boolean,\n    default: null\n  },\n  glow: Boolean,\n  error: Boolean,\n  flat: Boolean,\n  iconColor: [Boolean, String],\n  label: String,\n  persistentClear: Boolean,\n  prependInnerIcon: IconValue,\n  reverse: Boolean,\n  singleLine: Boolean,\n  variant: {\n    type: String,\n    default: 'filled',\n    validator: function validator(v) {\n      return allowedVariants.includes(v);\n    }\n  },\n  'onClick:clear': EventProp(),\n  'onClick:appendInner': EventProp(),\n  'onClick:prependInner': EventProp()\n}, makeComponentProps()), makeLoaderProps()), makeRoundedProps()), makeThemeProps()), 'VField');\nexport var VField = genericComponent()({\n  name: 'VField',\n  inheritAttrs: false,\n  props: _objectSpread(_objectSpread({\n    id: String\n  }, makeFocusProps()), makeVFieldProps()),\n  emits: {\n    'update:focused': function updateFocused(focused) {\n      return true;\n    },\n    'update:modelValue': function updateModelValue(value) {\n      return true;\n    }\n  },\n  setup: function setup(props, _ref) {\n    var attrs = _ref.attrs,\n        emit = _ref.emit,\n        slots = _ref.slots;\n\n    var _provideTheme = provideTheme(props),\n        themeClasses = _provideTheme.themeClasses;\n\n    var _useLoader = useLoader(props),\n        loaderClasses = _useLoader.loaderClasses;\n\n    var _useFocus = useFocus(props),\n        focusClasses = _useFocus.focusClasses,\n        isFocused = _useFocus.isFocused,\n        focus = _useFocus.focus,\n        blur = _useFocus.blur;\n\n    var _useInputIcon = useInputIcon(props),\n        InputIcon = _useInputIcon.InputIcon;\n\n    var _useRounded = useRounded(props),\n        roundedClasses = _useRounded.roundedClasses;\n\n    var _useRtl = useRtl(),\n        rtlClasses = _useRtl.rtlClasses;\n\n    var isActive = computed(function () {\n      return props.dirty || props.active;\n    });\n    var hasLabel = computed(function () {\n      return !!(props.label || slots.label);\n    });\n    var hasFloatingLabel = computed(function () {\n      return !props.singleLine && hasLabel.value;\n    });\n    var uid = useId();\n    var id = computed(function () {\n      return props.id || \"input-\".concat(uid);\n    });\n    var messagesId = computed(function () {\n      return \"\".concat(id.value, \"-messages\");\n    });\n    var labelRef = ref();\n    var floatingLabelRef = ref();\n    var controlRef = ref();\n    var isPlainOrUnderlined = computed(function () {\n      return ['plain', 'underlined'].includes(props.variant);\n    });\n    var color = computed(function () {\n      return props.error || props.disabled ? undefined : isActive.value && isFocused.value ? props.color : props.baseColor;\n    });\n    var iconColor = computed(function () {\n      if (!props.iconColor || props.glow && !isFocused.value) return undefined;\n      return props.iconColor === true ? color.value : props.iconColor;\n    });\n\n    var _useBackgroundColor = useBackgroundColor(toRef(props, 'bgColor')),\n        backgroundColorClasses = _useBackgroundColor.backgroundColorClasses,\n        backgroundColorStyles = _useBackgroundColor.backgroundColorStyles;\n\n    var _useTextColor = useTextColor(color),\n        textColorClasses = _useTextColor.textColorClasses,\n        textColorStyles = _useTextColor.textColorStyles;\n\n    watch(isActive, function (val) {\n      if (hasFloatingLabel.value) {\n        var el = labelRef.value.$el;\n        var targetEl = floatingLabelRef.value.$el;\n        requestAnimationFrame(function () {\n          var rect = nullifyTransforms(el);\n          var targetRect = targetEl.getBoundingClientRect();\n          var x = targetRect.x - rect.x;\n          var y = targetRect.y - rect.y - (rect.height / 2 - targetRect.height / 2);\n          var targetWidth = targetRect.width / 0.75;\n          var width = Math.abs(targetWidth - rect.width) > 1 ? {\n            maxWidth: convertToUnit(targetWidth)\n          } : undefined;\n          var style = getComputedStyle(el);\n          var targetStyle = getComputedStyle(targetEl);\n          var duration = parseFloat(style.transitionDuration) * 1000 || 150;\n          var scale = parseFloat(targetStyle.getPropertyValue('--v-field-label-scale'));\n          var color = targetStyle.getPropertyValue('color');\n          el.style.visibility = 'visible';\n          targetEl.style.visibility = 'hidden';\n          animate(el, _objectSpread({\n            transform: \"translate(\".concat(x, \"px, \").concat(y, \"px) scale(\").concat(scale, \")\"),\n            color: color\n          }, width), {\n            duration: duration,\n            easing: standardEasing,\n            direction: val ? 'normal' : 'reverse'\n          }).finished.then(function () {\n            el.style.removeProperty('visibility');\n            targetEl.style.removeProperty('visibility');\n          });\n        });\n      }\n    }, {\n      flush: 'post'\n    });\n    var slotProps = computed(function () {\n      return {\n        isActive: isActive,\n        isFocused: isFocused,\n        controlRef: controlRef,\n        blur: blur,\n        focus: focus\n      };\n    });\n\n    function onClick(e) {\n      if (e.target !== document.activeElement) {\n        e.preventDefault();\n      }\n    }\n\n    useRender(function () {\n      var _props$centerAffix, _slots$prependInner, _slots$default, _slots$default2, _slots$appendInner;\n\n      var isOutlined = props.variant === 'outlined';\n      var hasPrepend = !!(slots['prepend-inner'] || props.prependInnerIcon);\n      var hasClear = !!(props.clearable || slots.clear) && !props.disabled;\n      var hasAppend = !!(slots['append-inner'] || props.appendInnerIcon || hasClear);\n\n      var label = function label() {\n        return slots.label ? slots.label(_objectSpread(_objectSpread({}, slotProps.value), {}, {\n          label: props.label,\n          props: {\n            for: id.value\n          }\n        })) : props.label;\n      };\n\n      return _createVNode(\"div\", _mergeProps({\n        \"class\": ['v-field', _defineProperty({\n          'v-field--active': isActive.value,\n          'v-field--appended': hasAppend,\n          'v-field--center-affix': (_props$centerAffix = props.centerAffix) !== null && _props$centerAffix !== void 0 ? _props$centerAffix : !isPlainOrUnderlined.value,\n          'v-field--disabled': props.disabled,\n          'v-field--dirty': props.dirty,\n          'v-field--error': props.error,\n          'v-field--glow': props.glow,\n          'v-field--flat': props.flat,\n          'v-field--has-background': !!props.bgColor,\n          'v-field--persistent-clear': props.persistentClear,\n          'v-field--prepended': hasPrepend,\n          'v-field--reverse': props.reverse,\n          'v-field--single-line': props.singleLine,\n          'v-field--no-label': !label()\n        }, \"v-field--variant-\".concat(props.variant), true), themeClasses.value, backgroundColorClasses.value, focusClasses.value, loaderClasses.value, roundedClasses.value, rtlClasses.value, props.class],\n        \"style\": [backgroundColorStyles.value, props.style],\n        \"onClick\": onClick\n      }, attrs), [_createVNode(\"div\", {\n        \"class\": \"v-field__overlay\"\n      }, null), _createVNode(LoaderSlot, {\n        \"name\": \"v-field\",\n        \"active\": !!props.loading,\n        \"color\": props.error ? 'error' : typeof props.loading === 'string' ? props.loading : props.color\n      }, {\n        default: slots.loader\n      }), hasPrepend && _createVNode(\"div\", {\n        \"key\": \"prepend\",\n        \"class\": \"v-field__prepend-inner\"\n      }, [props.prependInnerIcon && _createVNode(InputIcon, {\n        \"key\": \"prepend-icon\",\n        \"name\": \"prependInner\",\n        \"color\": iconColor.value\n      }, null), (_slots$prependInner = slots['prepend-inner']) === null || _slots$prependInner === void 0 ? void 0 : _slots$prependInner.call(slots, slotProps.value)]), _createVNode(\"div\", {\n        \"class\": \"v-field__field\",\n        \"data-no-activator\": \"\"\n      }, [['filled', 'solo', 'solo-inverted', 'solo-filled'].includes(props.variant) && hasFloatingLabel.value && _createVNode(VFieldLabel, {\n        \"key\": \"floating-label\",\n        \"ref\": floatingLabelRef,\n        \"class\": [textColorClasses.value],\n        \"floating\": true,\n        \"for\": id.value,\n        \"style\": textColorStyles.value\n      }, {\n        default: function _default() {\n          return [label()];\n        }\n      }), hasLabel.value && _createVNode(VFieldLabel, {\n        \"key\": \"label\",\n        \"ref\": labelRef,\n        \"for\": id.value\n      }, {\n        default: function _default() {\n          return [label()];\n        }\n      }), (_slots$default = (_slots$default2 = slots.default) === null || _slots$default2 === void 0 ? void 0 : _slots$default2.call(slots, _objectSpread(_objectSpread({}, slotProps.value), {}, {\n        props: {\n          id: id.value,\n          class: 'v-field__input',\n          'aria-describedby': messagesId.value\n        },\n        focus: focus,\n        blur: blur\n      }))) !== null && _slots$default !== void 0 ? _slots$default : _createVNode(\"div\", {\n        \"id\": id.value,\n        \"class\": \"v-field__input\",\n        \"aria-describedby\": messagesId.value\n      }, null)]), hasClear && _createVNode(VExpandXTransition, {\n        \"key\": \"clear\"\n      }, {\n        default: function _default() {\n          return [_withDirectives(_createVNode(\"div\", {\n            \"class\": \"v-field__clearable\",\n            \"onMousedown\": function onMousedown(e) {\n              e.preventDefault();\n              e.stopPropagation();\n            }\n          }, [_createVNode(VDefaultsProvider, {\n            \"defaults\": {\n              VIcon: {\n                icon: props.clearIcon\n              }\n            }\n          }, {\n            default: function _default() {\n              return [slots.clear ? slots.clear(_objectSpread(_objectSpread({}, slotProps.value), {}, {\n                props: {\n                  onFocus: focus,\n                  onBlur: blur,\n                  onClick: props['onClick:clear']\n                }\n              })) : _createVNode(InputIcon, {\n                \"name\": \"clear\",\n                \"onFocus\": focus,\n                \"onBlur\": blur\n              }, null)];\n            }\n          })]), [[_vShow, props.dirty]])];\n        }\n      }), hasAppend && _createVNode(\"div\", {\n        \"key\": \"append\",\n        \"class\": \"v-field__append-inner\"\n      }, [(_slots$appendInner = slots['append-inner']) === null || _slots$appendInner === void 0 ? void 0 : _slots$appendInner.call(slots, slotProps.value), props.appendInnerIcon && _createVNode(InputIcon, {\n        \"key\": \"append-icon\",\n        \"name\": \"appendInner\",\n        \"color\": iconColor.value\n      }, null)]), _createVNode(\"div\", {\n        \"class\": ['v-field__outline', textColorClasses.value],\n        \"style\": textColorStyles.value\n      }, [isOutlined && _createVNode(_Fragment, null, [_createVNode(\"div\", {\n        \"class\": \"v-field__outline__start\"\n      }, null), hasFloatingLabel.value && _createVNode(\"div\", {\n        \"class\": \"v-field__outline__notch\"\n      }, [_createVNode(VFieldLabel, {\n        \"ref\": floatingLabelRef,\n        \"floating\": true,\n        \"for\": id.value\n      }, {\n        default: function _default() {\n          return [label()];\n        }\n      })]), _createVNode(\"div\", {\n        \"class\": \"v-field__outline__end\"\n      }, null)]), isPlainOrUnderlined.value && hasFloatingLabel.value && _createVNode(VFieldLabel, {\n        \"ref\": floatingLabelRef,\n        \"floating\": true,\n        \"for\": id.value\n      }, {\n        default: function _default() {\n          return [label()];\n        }\n      })])]);\n    });\n    return {\n      controlRef: controlRef,\n      fieldIconColor: iconColor\n    };\n  }\n});","map":{"version":3,"mappings":"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","names":["VFieldLabel","VExpandXTransition","VDefaultsProvider","useInputIcon","useBackgroundColor","useTextColor","makeComponentProps","makeFocusProps","useFocus","IconValue","LoaderSlot","makeLoaderProps","useLoader","useRtl","makeRoundedProps","useRounded","makeThemeProps","provideTheme","computed","ref","toRef","useId","watch","animate","convertToUnit","EventProp","genericComponent","nullifyTransforms","propsFactory","standardEasing","useRender","allowedVariants","makeVFieldProps","appendInnerIcon","bgColor","String","clearable","Boolean","clearIcon","type","default","active","centerAffix","undefined","color","baseColor","dirty","disabled","glow","error","flat","iconColor","label","persistentClear","prependInnerIcon","reverse","singleLine","variant","validator","v","includes","VField","name","inheritAttrs","props","id","emits","focused","value","setup","_ref","attrs","emit","slots","themeClasses","loaderClasses","focusClasses","isFocused","focus","blur","InputIcon","roundedClasses","rtlClasses","isActive","hasLabel","hasFloatingLabel","uid","messagesId","labelRef","floatingLabelRef","controlRef","isPlainOrUnderlined","backgroundColorClasses","backgroundColorStyles","textColorClasses","textColorStyles","val","el","$el","targetEl","requestAnimationFrame","rect","targetRect","getBoundingClientRect","x","y","height","targetWidth","width","Math","abs","maxWidth","style","getComputedStyle","targetStyle","duration","parseFloat","transitionDuration","scale","getPropertyValue","visibility","transform","easing","direction","finished","then","removeProperty","flush","slotProps","onClick","e","target","document","activeElement","preventDefault","isOutlined","hasPrepend","hasClear","clear","hasAppend","for","class","loading","loader","_createVNode","stopPropagation","VIcon","icon","onFocus","onBlur","fieldIconColor"],"sources":["../../../src/components/VField/VField.tsx"],"sourcesContent":["// Styles\nimport './VField.sass'\n\n// Components\nimport { VFieldLabel } from './VFieldLabel'\nimport { VExpandXTransition } from '@/components/transitions'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { useInputIcon } from '@/components/VInput/InputIcon'\n\n// Composables\nimport { useBackgroundColor, useTextColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { makeFocusProps, useFocus } from '@/composables/focus'\nimport { IconValue } from '@/composables/icons'\nimport { LoaderSlot, makeLoaderProps, useLoader } from '@/composables/loader'\nimport { useRtl } from '@/composables/locale'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\n\n// Utilities\nimport { computed, ref, toRef, useId, watch } from 'vue'\nimport {\n  animate,\n  convertToUnit,\n  EventProp,\n  genericComponent,\n  nullifyTransforms,\n  propsFactory,\n  standardEasing,\n  useRender,\n} from '@/util'\n\n// Types\nimport type { PropType, Ref } from 'vue'\nimport type { LoaderSlotProps } from '@/composables/loader'\nimport type { GenericProps } from '@/util'\n\nconst allowedVariants = ['underlined', 'outlined', 'filled', 'solo', 'solo-inverted', 'solo-filled', 'plain'] as const\ntype Variant = typeof allowedVariants[number]\n\nexport interface DefaultInputSlot {\n  isActive: Ref<boolean>\n  isFocused: Ref<boolean>\n  controlRef: Ref<HTMLElement | undefined>\n  focus: () => void\n  blur: () => void\n}\n\nexport interface VFieldSlot extends DefaultInputSlot {\n  props: Record<string, unknown>\n}\n\nexport const makeVFieldProps = propsFactory({\n  appendInnerIcon: IconValue,\n  bgColor: String,\n  clearable: Boolean,\n  clearIcon: {\n    type: IconValue,\n    default: '$clear',\n  },\n  active: Boolean,\n  centerAffix: {\n    type: Boolean,\n    default: undefined,\n  },\n  color: String,\n  baseColor: String,\n  dirty: Boolean,\n  disabled: {\n    type: Boolean,\n    default: null,\n  },\n  glow: Boolean,\n  error: Boolean,\n  flat: Boolean,\n  iconColor: [Boolean, String],\n  label: String,\n  persistentClear: Boolean,\n  prependInnerIcon: IconValue,\n  reverse: Boolean,\n  singleLine: Boolean,\n  variant: {\n    type: String as PropType<Variant>,\n    default: 'filled',\n    validator: (v: any) => allowedVariants.includes(v),\n  },\n\n  'onClick:clear': EventProp<[MouseEvent]>(),\n  'onClick:appendInner': EventProp<[MouseEvent]>(),\n  'onClick:prependInner': EventProp<[MouseEvent]>(),\n\n  ...makeComponentProps(),\n  ...makeLoaderProps(),\n  ...makeRoundedProps(),\n  ...makeThemeProps(),\n}, 'VField')\n\nexport type VFieldSlots = {\n  clear: DefaultInputSlot & { props: Record<string, any> }\n  'prepend-inner': DefaultInputSlot\n  'append-inner': DefaultInputSlot\n  label: DefaultInputSlot & { label: string | undefined, props: Record<string, any> }\n  loader: LoaderSlotProps\n  default: VFieldSlot\n}\n\nexport const VField = genericComponent<new <T>(\n  props: {\n    modelValue?: T\n    'onUpdate:modelValue'?: (value: T) => void\n  },\n  slots: VFieldSlots\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VField',\n\n  inheritAttrs: false,\n\n  props: {\n    id: String,\n\n    ...makeFocusProps(),\n    ...makeVFieldProps(),\n  },\n\n  emits: {\n    'update:focused': (focused: boolean) => true,\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { attrs, emit, slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { loaderClasses } = useLoader(props)\n    const { focusClasses, isFocused, focus, blur } = useFocus(props)\n    const { InputIcon } = useInputIcon(props)\n    const { roundedClasses } = useRounded(props)\n    const { rtlClasses } = useRtl()\n\n    const isActive = computed(() => props.dirty || props.active)\n    const hasLabel = computed(() => !!(props.label || slots.label))\n    const hasFloatingLabel = computed(() => !props.singleLine && hasLabel.value)\n\n    const uid = useId()\n    const id = computed(() => props.id || `input-${uid}`)\n    const messagesId = computed(() => `${id.value}-messages`)\n\n    const labelRef = ref<VFieldLabel>()\n    const floatingLabelRef = ref<VFieldLabel>()\n    const controlRef = ref<HTMLElement>()\n    const isPlainOrUnderlined = computed(() => ['plain', 'underlined'].includes(props.variant))\n    const color = computed(() => {\n      return props.error || props.disabled ? undefined\n        : isActive.value && isFocused.value ? props.color\n        : props.baseColor\n    })\n    const iconColor = computed(() => {\n      if (!props.iconColor || (props.glow && !isFocused.value)) return undefined\n\n      return props.iconColor === true ? color.value : props.iconColor\n    })\n\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'bgColor'))\n    const { textColorClasses, textColorStyles } = useTextColor(color)\n\n    watch(isActive, val => {\n      if (hasFloatingLabel.value) {\n        const el: HTMLElement = labelRef.value!.$el\n        const targetEl: HTMLElement = floatingLabelRef.value!.$el\n\n        requestAnimationFrame(() => {\n          const rect = nullifyTransforms(el)\n          const targetRect = targetEl.getBoundingClientRect()\n\n          const x = targetRect.x - rect.x\n          const y = targetRect.y - rect.y - (rect.height / 2 - targetRect.height / 2)\n\n          const targetWidth = targetRect.width / 0.75\n          const width = Math.abs(targetWidth - rect.width) > 1\n            ? { maxWidth: convertToUnit(targetWidth) }\n            : undefined\n\n          const style = getComputedStyle(el)\n          const targetStyle = getComputedStyle(targetEl)\n          const duration = parseFloat(style.transitionDuration) * 1000 || 150\n          const scale = parseFloat(targetStyle.getPropertyValue('--v-field-label-scale'))\n          const color = targetStyle.getPropertyValue('color')\n\n          el.style.visibility = 'visible'\n          targetEl.style.visibility = 'hidden'\n\n          animate(el, {\n            transform: `translate(${x}px, ${y}px) scale(${scale})`,\n            color,\n            ...width,\n          }, {\n            duration,\n            easing: standardEasing,\n            direction: val ? 'normal' : 'reverse',\n          }).finished.then(() => {\n            el.style.removeProperty('visibility')\n            targetEl.style.removeProperty('visibility')\n          })\n        })\n      }\n    }, { flush: 'post' })\n\n    const slotProps = computed<DefaultInputSlot>(() => ({\n      isActive,\n      isFocused,\n      controlRef,\n      blur,\n      focus,\n    }))\n\n    function onClick (e: MouseEvent) {\n      if (e.target !== document.activeElement) {\n        e.preventDefault()\n      }\n    }\n\n    useRender(() => {\n      const isOutlined = props.variant === 'outlined'\n      const hasPrepend = !!(slots['prepend-inner'] || props.prependInnerIcon)\n      const hasClear = !!(props.clearable || slots.clear) && !props.disabled\n      const hasAppend = !!(slots['append-inner'] || props.appendInnerIcon || hasClear)\n      const label = () => (\n        slots.label\n          ? slots.label({\n            ...slotProps.value,\n            label: props.label,\n            props: { for: id.value },\n          })\n          : props.label\n      )\n\n      return (\n        <div\n          class={[\n            'v-field',\n            {\n              'v-field--active': isActive.value,\n              'v-field--appended': hasAppend,\n              'v-field--center-affix': props.centerAffix ?? !isPlainOrUnderlined.value,\n              'v-field--disabled': props.disabled,\n              'v-field--dirty': props.dirty,\n              'v-field--error': props.error,\n              'v-field--glow': props.glow,\n              'v-field--flat': props.flat,\n              'v-field--has-background': !!props.bgColor,\n              'v-field--persistent-clear': props.persistentClear,\n              'v-field--prepended': hasPrepend,\n              'v-field--reverse': props.reverse,\n              'v-field--single-line': props.singleLine,\n              'v-field--no-label': !label(),\n              [`v-field--variant-${props.variant}`]: true,\n            },\n            themeClasses.value,\n            backgroundColorClasses.value,\n            focusClasses.value,\n            loaderClasses.value,\n            roundedClasses.value,\n            rtlClasses.value,\n            props.class,\n          ]}\n          style={[\n            backgroundColorStyles.value,\n            props.style,\n          ]}\n          onClick={ onClick }\n          { ...attrs }\n        >\n          <div class=\"v-field__overlay\" />\n\n          <LoaderSlot\n            name=\"v-field\"\n            active={ !!props.loading }\n            color={ props.error ? 'error' : (typeof props.loading === 'string' ? props.loading : props.color) }\n            v-slots={{ default: slots.loader }}\n          />\n\n          { hasPrepend && (\n            <div key=\"prepend\" class=\"v-field__prepend-inner\">\n              { props.prependInnerIcon && (\n                <InputIcon\n                  key=\"prepend-icon\"\n                  name=\"prependInner\"\n                  color={ iconColor.value }\n                />\n              )}\n\n              { slots['prepend-inner']?.(slotProps.value) }\n            </div>\n          )}\n\n          <div class=\"v-field__field\" data-no-activator=\"\">\n            {['filled', 'solo', 'solo-inverted', 'solo-filled'].includes(props.variant) && hasFloatingLabel.value && (\n              <VFieldLabel\n                key=\"floating-label\"\n                ref={ floatingLabelRef }\n                class={[textColorClasses.value]}\n                floating\n                for={ id.value }\n                style={ textColorStyles.value }\n              >\n                { label() }\n              </VFieldLabel>\n            )}\n\n            { hasLabel.value && (\n              <VFieldLabel key=\"label\" ref={ labelRef } for={ id.value }>\n                { label() }\n              </VFieldLabel>\n            )}\n\n            { slots.default?.({\n              ...slotProps.value,\n              props: {\n                id: id.value,\n                class: 'v-field__input',\n                'aria-describedby': messagesId.value,\n              },\n              focus,\n              blur,\n            } as VFieldSlot) ?? (\n              <div\n                id={ id.value }\n                class=\"v-field__input\"\n                aria-describedby={ messagesId.value }\n              />\n            )}\n          </div>\n\n          { hasClear && (\n            <VExpandXTransition key=\"clear\">\n              <div\n                class=\"v-field__clearable\"\n                v-show={ props.dirty }\n                onMousedown={ (e: MouseEvent) => {\n                  e.preventDefault()\n                  e.stopPropagation()\n                }}\n              >\n              <VDefaultsProvider\n                defaults={{\n                  VIcon: {\n                    icon: props.clearIcon,\n                  },\n                }}\n              >\n                { slots.clear\n                  ? slots.clear({\n                    ...slotProps.value,\n                    props: {\n                      onFocus: focus,\n                      onBlur: blur,\n                      onClick: props['onClick:clear'],\n                    },\n                  })\n                  : (\n                    <InputIcon\n                      name=\"clear\"\n                      onFocus={ focus }\n                      onBlur={ blur }\n                    />\n                  )}\n                </VDefaultsProvider>\n              </div>\n            </VExpandXTransition>\n          )}\n\n          { hasAppend && (\n            <div key=\"append\" class=\"v-field__append-inner\">\n              { slots['append-inner']?.(slotProps.value) }\n\n              { props.appendInnerIcon && (\n                <InputIcon\n                  key=\"append-icon\"\n                  name=\"appendInner\"\n                  color={ iconColor.value }\n                />\n              )}\n            </div>\n          )}\n\n          <div\n            class={[\n              'v-field__outline',\n              textColorClasses.value,\n            ]}\n            style={ textColorStyles.value }\n          >\n            { isOutlined && (\n              <>\n                <div class=\"v-field__outline__start\" />\n\n                { hasFloatingLabel.value && (\n                  <div class=\"v-field__outline__notch\">\n                    <VFieldLabel ref={ floatingLabelRef } floating for={ id.value }>\n                      { label() }\n                    </VFieldLabel>\n                  </div>\n                )}\n\n                <div class=\"v-field__outline__end\" />\n              </>\n            )}\n\n            { isPlainOrUnderlined.value && hasFloatingLabel.value && (\n              <VFieldLabel ref={ floatingLabelRef } floating for={ id.value }>\n                { label() }\n              </VFieldLabel>\n            )}\n          </div>\n        </div>\n      )\n    })\n\n    return {\n      controlRef,\n      fieldIconColor: iconColor,\n    }\n  },\n})\n\nexport type VField = InstanceType<typeof VField>\n"]},"metadata":{},"sourceType":"module"}
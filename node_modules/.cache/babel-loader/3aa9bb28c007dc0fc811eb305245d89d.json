{"ast":null,"code":"import _defineProperty from \"/Users/antoniotorres/Documents/tony/tonyweb/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n// Composables\nimport { useProxiedModel } from \"./proxiedModel.js\"; // Utilities\n\nimport { computed } from 'vue';\nimport { EventProp, getCurrentInstanceName, propsFactory } from \"../util/index.js\"; // Types\n// Composables\n\nexport var makeFocusProps = propsFactory({\n  focused: Boolean,\n  'onUpdate:focused': EventProp()\n}, 'focus');\nexport function useFocus(props) {\n  var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getCurrentInstanceName();\n  var isFocused = useProxiedModel(props, 'focused');\n  var focusClasses = computed(function () {\n    return _defineProperty({}, \"\".concat(name, \"--focused\"), isFocused.value);\n  });\n\n  function focus() {\n    isFocused.value = true;\n  }\n\n  function blur() {\n    isFocused.value = false;\n  }\n\n  return {\n    focusClasses: focusClasses,\n    isFocused: isFocused,\n    focus: focus,\n    blur: blur\n  };\n}","map":{"version":3,"mappings":";AAAA;AAAA,SACSA,eADT,QACwB,mBADxB,C,CAGA;;AACA,SAASC,QAAT,QAAyB,KAAzB;AAA8B,SACrBC,SADqB,EACVC,sBADU,EACcC,YADd,QAC0B,kBAD1B,C,CAG9B;AAMA;;AACA,OAAO,IAAMC,cAAc,GAAGD,YAAY,CAAC;AACzCE,SAAO,EAAEC,OADgC;AAEzC,sBAAoBL,SAAS;AAFY,CAAD,EAGvC,OAHuC,CAAnC;AAKP,OAAO,SAASM,QAAT,CACLC,KADK,EAGL;AAAA,MADAC,IAAI,uEAAGP,sBAAsB,EAC7B;AACA,MAAMQ,SAAS,GAAGX,eAAe,CAACS,KAAD,EAAQ,SAAR,CAAjC;AACA,MAAMG,YAAY,GAAGX,QAAQ,CAAC,YAAM;AAClC,yCACMS,IADN,gBACwBC,SAAS,CAACE,KADlC;AAGD,GAJ4B,CAA7B;;AAMA,WAASC,KAAT,GAAkB;AAChBH,aAAS,CAACE,KAAVF,GAAkB,IAAlBA;AACF;;AAEA,WAASI,IAAT,GAAiB;AACfJ,aAAS,CAACE,KAAVF,GAAkB,KAAlBA;AACF;;AAEA,SAAO;AAAEC,gBAAY,EAAZA,YAAF;AAAgBD,aAAS,EAATA,SAAhB;AAA2BG,SAAK,EAALA,KAA3B;AAAkCC;AAAlC,GAAP;AACF","names":["useProxiedModel","computed","EventProp","getCurrentInstanceName","propsFactory","makeFocusProps","focused","Boolean","useFocus","props","name","isFocused","focusClasses","value","focus","blur"],"sources":["../../src/composables/focus.ts"],"sourcesContent":["// Composables\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed } from 'vue'\nimport { EventProp, getCurrentInstanceName, propsFactory } from '@/util'\n\n// Types\nexport interface FocusProps {\n  focused: boolean\n  'onUpdate:focused': ((focused: boolean) => any) | undefined\n}\n\n// Composables\nexport const makeFocusProps = propsFactory({\n  focused: Boolean,\n  'onUpdate:focused': EventProp<[boolean]>(),\n}, 'focus')\n\nexport function useFocus (\n  props: FocusProps,\n  name = getCurrentInstanceName()\n) {\n  const isFocused = useProxiedModel(props, 'focused')\n  const focusClasses = computed(() => {\n    return ({\n      [`${name}--focused`]: isFocused.value,\n    })\n  })\n\n  function focus () {\n    isFocused.value = true\n  }\n\n  function blur () {\n    isFocused.value = false\n  }\n\n  return { focusClasses, isFocused, focus, blur }\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"/Users/antoniotorres/Documents/tony/tonyweb/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/Users/antoniotorres/Documents/tony/tonyweb/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectSpread from \"/Users/antoniotorres/Documents/tony/tonyweb/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\"; // Styles\n\nimport \"./VSpeedDial.css\"; // Components\n\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.js\";\nimport { makeVMenuProps, VMenu } from \"../VMenu/VMenu.js\"; // Composables\n\nimport { makeComponentProps } from \"../../composables/component.js\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.js\";\nimport { MaybeTransition } from \"../../composables/transition.js\"; // Utilities\n\nimport { computed, ref } from 'vue';\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.js\"; // Types\n\nexport var makeVSpeedDialProps = propsFactory(_objectSpread(_objectSpread({}, makeComponentProps()), makeVMenuProps({\n  offset: 8,\n  minWidth: 0,\n  openDelay: 0,\n  closeDelay: 100,\n  location: 'top center',\n  transition: 'scale-transition'\n})), 'VSpeedDial');\nexport var VSpeedDial = genericComponent()({\n  name: 'VSpeedDial',\n  props: makeVSpeedDialProps(),\n  emits: {\n    'update:modelValue': function updateModelValue(value) {\n      return true;\n    }\n  },\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n    var model = useProxiedModel(props, 'modelValue');\n    var menuRef = ref();\n    var location = computed(function () {\n      var _props$location$split, _props$location;\n\n      var _ref2 = (_props$location$split = (_props$location = props.location) === null || _props$location === void 0 ? void 0 : _props$location.split(' ')) !== null && _props$location$split !== void 0 ? _props$location$split : [],\n          _ref3 = _slicedToArray(_ref2, 2),\n          y = _ref3[0],\n          _ref3$ = _ref3[1],\n          x = _ref3$ === void 0 ? 'center' : _ref3$;\n\n      return \"\".concat(y, \" \").concat(x);\n    });\n    var locationClasses = computed(function () {\n      return _defineProperty({}, \"v-speed-dial__content--\".concat(location.value.replace(' ', '-')), true);\n    });\n    useRender(function () {\n      var menuProps = VMenu.filterProps(props);\n      return _createVNode(VMenu, _mergeProps(menuProps, {\n        \"modelValue\": model.value,\n        \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n          return model.value = $event;\n        },\n        \"class\": props.class,\n        \"style\": props.style,\n        \"contentClass\": ['v-speed-dial__content', locationClasses.value, props.contentClass],\n        \"location\": location.value,\n        \"ref\": menuRef,\n        \"transition\": \"fade-transition\"\n      }), _objectSpread(_objectSpread({}, slots), {}, {\n        default: function _default(slotProps) {\n          return _createVNode(VDefaultsProvider, {\n            \"defaults\": {\n              VBtn: {\n                size: 'small'\n              }\n            }\n          }, {\n            default: function _default() {\n              return [_createVNode(MaybeTransition, {\n                \"appear\": true,\n                \"group\": true,\n                \"transition\": props.transition\n              }, {\n                default: function _default() {\n                  var _slots$default;\n\n                  return [(_slots$default = slots.default) === null || _slots$default === void 0 ? void 0 : _slots$default.call(slots, slotProps)];\n                }\n              })];\n            }\n          });\n        }\n      }));\n    });\n    return {};\n  }\n});","map":{"version":3,"mappings":";;;;;;;8EAAA;;AACA,0B,CAEA;;AAAA,SACSA,iBADT,QAC0B,+BAD1B;AAC0B,SACjBC,cADiB,EACDC,KADC,QACI,mBADJ,C,CAG1B;;AAAA,SACSC,kBADT,QAC2B,gCAD3B;AAC2B,SAClBC,eADkB,QACH,mCADG;AACH,SACfC,eADe,QACA,iCADA,C,CAGxB;;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,KAA9B;AAAmC,SAC1BC,gBAD0B,EACRC,YADQ,EACMC,SADN,QACe,qBADf,C,CAGnC;;AAIA,OAAO,IAAMC,mBAAmB,GAAGF,YAAY,iCAC1CN,kBAAkB,EADwB,GAE1CF,cAAc,CAAC;AAChBW,QAAM,EAAE,CADQ;AAEhBC,UAAQ,EAAE,CAFM;AAGhBC,WAAS,EAAE,CAHK;AAIhBC,YAAU,EAAE,GAJI;AAKhBC,UAAQ,EAAE,YALM;AAMhBC,YAAU,EAAE;AANI,CAAD,CAF4B,GAU5C,YAV4C,CAAxC;AAYP,OAAO,IAAMC,UAAU,GAAGV,gBAAgB,GAAiB;AACzDW,MAAI,EAAE,YADmD;AAGzDC,OAAK,EAAET,mBAAmB,EAH+B;AAKzDU,OAAK,EAAE;AACL,yBAAsBC,+BAAc;AAAA,aAAK,IAAL;AAAA;AAD/B,GALkD;AASzDC,OATyD,iBASlDH,KATkD,EAS7CI,IAT6C,EAShC;AAAA,QAATC,KAAS,GAAFD,IAAE,CAATC,KAAS;AACvB,QAAMC,KAAK,GAAGtB,eAAe,CAACgB,KAAD,EAAQ,YAAR,CAA7B;AAEA,QAAMO,OAAO,GAAGpB,GAAG,EAAnB;AAEA,QAAMS,QAAQ,GAAGV,QAAQ,CAAS,YAAM;AAAA;;AACtC,8DAA0Bc,KAAK,CAACJ,QAAhC,oDAA0BI,gBAAgBQ,KAAhBR,CAAsB,GAAtBA,CAA1B,yEAAwD,EAAxD;AAAA;AAAA,UAAOS,CAAP;AAAA;AAAA,UAAUC,CAAV,uBAAc,QAAd;;AAEA,uBAAUD,CAAV,cAAeC,CAAf;AACD,KAJwB,CAAzB;AAMA,QAAMC,eAAe,GAAGzB,QAAQ,CAAC;AAAA,kEACJU,QAAQ,CAACM,KAATN,CAAegB,OAAfhB,CAAuB,GAAvBA,EAA4B,GAA5BA,CADI,GACiC,IADjC;AAAA,KAAD,CAAhC;AAIAN,aAAS,CAAC,YAAM;AACd,UAAMuB,SAAS,GAAG/B,KAAK,CAACgC,WAANhC,CAAkBkB,KAAlBlB,CAAlB;AAEA,6CAES+B,SAFT,EAEkB;AAAA,sBACJP,KAAK,CAACJ,KADF;AACO;AAAA,iBAAXI,KAAK,CAACJ,KAANI,GAAWS;AAAA,SADP;AACO,iBACbf,KAAK,CAACgB,KAFA;AAEK,iBACXhB,KAAK,CAACiB,KAHA;AAGK,wBACL,CACZ,uBADY,EAEZN,eAAe,CAACT,KAFJ,EAGZF,KAAK,CAACkB,YAHM,CAJA;AAQb,oBACUtB,QAAQ,CAACM,KATN;AASW,eACnBK,OAVQ;AAUD;AAVC,OAFlB,mCAgBSF,KAhBT;AAiBMc,eAAO,EAAEC,2BAAS;AAAA;AAAA,wBAEJ;AACRC,kBAAI,EAAE;AACJC,oBAAI,EAAE;AADF;AADE;AAFI,aAMb;AAAAH;AAAAA;AAAA;AAAA;AAAA,8BAKcnB,KAAK,CAACH;AALpB,iBAK8B;AAAAsB;AAAAA;;AAAAA,4CAE3Bd,KAAK,CAACc,OAFqB,mDAE3Bd,yBAAK,EAAWe,SAAX,CAFsB;AAAAD;AAAA,eAL9B;AAAAA;AAAA,WANa;AAAA;AAjBxB;AAqCD,KAxCQ,CAAT7B;AA0CA,WAAO,EAAP;AACF;AAnEyD,CAAjB,CAAnC","names":["VDefaultsProvider","makeVMenuProps","VMenu","makeComponentProps","useProxiedModel","MaybeTransition","computed","ref","genericComponent","propsFactory","useRender","makeVSpeedDialProps","offset","minWidth","openDelay","closeDelay","location","transition","VSpeedDial","name","props","emits","value","setup","_ref","slots","model","menuRef","split","y","x","locationClasses","replace","menuProps","filterProps","$event","class","style","contentClass","default","slotProps","VBtn","size"],"sources":["../../../src/components/VSpeedDial/VSpeedDial.tsx"],"sourcesContent":["// Styles\nimport './VSpeedDial.sass'\n\n// Components\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { makeVMenuProps, VMenu } from '@/components/VMenu/VMenu'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { MaybeTransition } from '@/composables/transition'\n\n// Utilities\nimport { computed, ref } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { OverlaySlots } from '@/components/VOverlay/VOverlay'\nimport type { Anchor } from '@/util'\n\nexport const makeVSpeedDialProps = propsFactory({\n  ...makeComponentProps(),\n  ...makeVMenuProps({\n    offset: 8,\n    minWidth: 0,\n    openDelay: 0,\n    closeDelay: 100,\n    location: 'top center' as const,\n    transition: 'scale-transition',\n  }),\n}, 'VSpeedDial')\n\nexport const VSpeedDial = genericComponent<OverlaySlots>()({\n  name: 'VSpeedDial',\n\n  props: makeVSpeedDialProps(),\n\n  emits: {\n    'update:modelValue': (value: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const model = useProxiedModel(props, 'modelValue')\n\n    const menuRef = ref<VMenu>()\n\n    const location = computed<Anchor>(() => {\n      const [y, x = 'center'] = props.location?.split(' ') ?? []\n\n      return `${y} ${x}` as Anchor\n    })\n\n    const locationClasses = computed(() => ({\n      [`v-speed-dial__content--${location.value.replace(' ', '-')}`]: true,\n    }))\n\n    useRender(() => {\n      const menuProps = VMenu.filterProps(props)\n\n      return (\n        <VMenu\n          { ...menuProps }\n          v-model={ model.value }\n          class={ props.class }\n          style={ props.style }\n          contentClass={[\n            'v-speed-dial__content',\n            locationClasses.value,\n            props.contentClass,\n          ]}\n          location={ location.value }\n          ref={ menuRef }\n          transition=\"fade-transition\"\n        >\n          {{\n            ...slots,\n            default: slotProps => (\n              <VDefaultsProvider\n                defaults={{\n                  VBtn: {\n                    size: 'small',\n                  },\n                }}\n              >\n                <MaybeTransition\n                  appear\n                  group\n                  transition={ props.transition }\n                >\n                  { slots.default?.(slotProps) }\n                </MaybeTransition>\n              </VDefaultsProvider>\n            ),\n          }}\n        </VMenu>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VSpeedDial = InstanceType<typeof VSpeedDial>\n"]},"metadata":{},"sourceType":"module"}
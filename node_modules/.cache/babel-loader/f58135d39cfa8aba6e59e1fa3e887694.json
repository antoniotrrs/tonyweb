{"ast":null,"code":"import { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\"; // Components\n\nimport { makeDataTableProps } from \"./VDataTable.js\";\nimport { VDataTableHeaders } from \"./VDataTableHeaders.js\";\nimport { VDataTableRow } from \"./VDataTableRow.js\";\nimport { VDataTableRows } from \"./VDataTableRows.js\";\nimport { VTable } from \"../VTable/index.js\";\nimport { VVirtualScrollItem } from \"../VVirtualScroll/VVirtualScrollItem.js\"; // Composables\n\nimport { provideExpanded } from \"./composables/expand.js\";\nimport { createGroupBy, makeDataTableGroupProps, provideGroupBy, useGroupedItems } from \"./composables/group.js\";\nimport { createHeaders } from \"./composables/headers.js\";\nimport { useDataTableItems } from \"./composables/items.js\";\nimport { useOptions } from \"./composables/options.js\";\nimport { provideSelection } from \"./composables/select.js\";\nimport { createSort, provideSort, useSortedItems } from \"./composables/sort.js\";\nimport { provideDefaults } from \"../../composables/defaults.js\";\nimport { makeFilterProps, useFilter } from \"../../composables/filter.js\";\nimport { makeVirtualProps, useVirtual } from \"../../composables/virtual.js\"; // Utilities\n\nimport { computed, shallowRef, toRef, toRefs } from 'vue';\nimport { convertToUnit, genericComponent, omit, propsFactory, useRender } from \"../../util/index.js\"; // Types\n\nexport const makeVDataTableVirtualProps = propsFactory({ ...omit(makeDataTableProps(), ['hideDefaultFooter']),\n  ...makeDataTableGroupProps(),\n  ...makeVirtualProps(),\n  ...makeFilterProps()\n}, 'VDataTableVirtual');\nexport const VDataTableVirtual = genericComponent()({\n  name: 'VDataTableVirtual',\n  props: makeVDataTableVirtualProps(),\n  emits: {\n    'update:modelValue': value => true,\n    'update:sortBy': value => true,\n    'update:options': value => true,\n    'update:groupBy': value => true,\n    'update:expanded': value => true\n  },\n\n  setup(props, _ref) {\n    let {\n      attrs,\n      slots\n    } = _ref;\n    const {\n      groupBy\n    } = createGroupBy(props);\n    const {\n      sortBy,\n      multiSort,\n      mustSort\n    } = createSort(props);\n    const {\n      disableSort\n    } = toRefs(props);\n    const {\n      columns,\n      headers,\n      filterFunctions,\n      sortFunctions,\n      sortRawFunctions\n    } = createHeaders(props, {\n      groupBy,\n      showSelect: toRef(props, 'showSelect'),\n      showExpand: toRef(props, 'showExpand')\n    });\n    const {\n      items\n    } = useDataTableItems(props, columns);\n    const search = toRef(props, 'search');\n    const {\n      filteredItems\n    } = useFilter(props, items, search, {\n      transform: item => item.columns,\n      customKeyFilter: filterFunctions\n    });\n    const {\n      toggleSort\n    } = provideSort({\n      sortBy,\n      multiSort,\n      mustSort\n    });\n    const {\n      sortByWithGroups,\n      opened,\n      extractRows,\n      isGroupOpen,\n      toggleGroup\n    } = provideGroupBy({\n      groupBy,\n      sortBy,\n      disableSort\n    });\n    const {\n      sortedItems\n    } = useSortedItems(props, filteredItems, sortByWithGroups, {\n      transform: item => ({ ...item.raw,\n        ...item.columns\n      }),\n      sortFunctions,\n      sortRawFunctions\n    });\n    const {\n      flatItems\n    } = useGroupedItems(sortedItems, groupBy, opened);\n    const allItems = computed(() => extractRows(flatItems.value));\n    const {\n      isSelected,\n      select,\n      selectAll,\n      toggleSelect,\n      someSelected,\n      allSelected\n    } = provideSelection(props, {\n      allItems,\n      currentPage: allItems\n    });\n    const {\n      isExpanded,\n      toggleExpand\n    } = provideExpanded(props);\n    const {\n      containerRef,\n      markerRef,\n      paddingTop,\n      paddingBottom,\n      computedItems,\n      handleItemResize,\n      handleScroll,\n      handleScrollend,\n      calculateVisibleItems,\n      scrollToIndex\n    } = useVirtual(props, flatItems);\n    const displayItems = computed(() => computedItems.value.map(item => item.raw));\n    useOptions({\n      sortBy,\n      page: shallowRef(1),\n      itemsPerPage: shallowRef(-1),\n      groupBy,\n      search\n    });\n    provideDefaults({\n      VDataTableRows: {\n        hideNoData: toRef(props, 'hideNoData'),\n        noDataText: toRef(props, 'noDataText'),\n        loading: toRef(props, 'loading'),\n        loadingText: toRef(props, 'loadingText')\n      }\n    });\n    const slotProps = computed(() => ({\n      sortBy: sortBy.value,\n      toggleSort,\n      someSelected: someSelected.value,\n      allSelected: allSelected.value,\n      isSelected,\n      select,\n      selectAll,\n      toggleSelect,\n      isExpanded,\n      toggleExpand,\n      isGroupOpen,\n      toggleGroup,\n      items: allItems.value.map(item => item.raw),\n      internalItems: allItems.value,\n      groupedItems: flatItems.value,\n      columns: columns.value,\n      headers: headers.value\n    }));\n    useRender(() => {\n      const dataTableHeadersProps = VDataTableHeaders.filterProps(props);\n      const dataTableRowsProps = VDataTableRows.filterProps(props);\n      const tableProps = VTable.filterProps(props);\n      return _createVNode(VTable, _mergeProps({\n        \"class\": ['v-data-table', {\n          'v-data-table--loading': props.loading\n        }, props.class],\n        \"style\": props.style\n      }, tableProps, {\n        \"fixedHeader\": props.fixedHeader || props.sticky\n      }), {\n        top: () => slots.top?.(slotProps.value),\n        wrapper: () => _createVNode(\"div\", {\n          \"ref\": containerRef,\n          \"onScrollPassive\": handleScroll,\n          \"onScrollend\": handleScrollend,\n          \"class\": \"v-table__wrapper\",\n          \"style\": {\n            height: convertToUnit(props.height)\n          }\n        }, [_createVNode(\"table\", null, [slots.colgroup?.(slotProps.value), !props.hideDefaultHeader && _createVNode(\"thead\", {\n          \"key\": \"thead\"\n        }, [_createVNode(VDataTableHeaders, dataTableHeadersProps, slots)]), slots.thead?.(slotProps.value), !props.hideDefaultBody && _createVNode(\"tbody\", {\n          \"key\": \"tbody\"\n        }, [_createVNode(\"tr\", {\n          \"ref\": markerRef,\n          \"style\": {\n            height: convertToUnit(paddingTop.value),\n            border: 0\n          }\n        }, [_createVNode(\"td\", {\n          \"colspan\": columns.value.length,\n          \"style\": {\n            height: 0,\n            border: 0\n          }\n        }, null)]), slots['body.prepend']?.(slotProps.value), _createVNode(VDataTableRows, _mergeProps(attrs, dataTableRowsProps, {\n          \"items\": displayItems.value\n        }), { ...slots,\n          item: itemSlotProps => _createVNode(VVirtualScrollItem, {\n            \"key\": itemSlotProps.internalItem.index,\n            \"renderless\": true,\n            \"onUpdate:height\": height => handleItemResize(itemSlotProps.internalItem.index, height)\n          }, {\n            default: _ref2 => {\n              let {\n                itemRef\n              } = _ref2;\n              return slots.item?.({ ...itemSlotProps,\n                itemRef\n              }) ?? _createVNode(VDataTableRow, _mergeProps(itemSlotProps.props, {\n                \"ref\": itemRef,\n                \"key\": itemSlotProps.internalItem.index,\n                \"index\": itemSlotProps.internalItem.index\n              }), slots);\n            }\n          })\n        }), slots['body.append']?.(slotProps.value), _createVNode(\"tr\", {\n          \"style\": {\n            height: convertToUnit(paddingBottom.value),\n            border: 0\n          }\n        }, [_createVNode(\"td\", {\n          \"colspan\": columns.value.length,\n          \"style\": {\n            height: 0,\n            border: 0\n          }\n        }, null)])]), slots.tbody?.(slotProps.value), slots.tfoot?.(slotProps.value)])]),\n        bottom: () => slots.bottom?.(slotProps.value)\n      });\n    });\n    return {\n      calculateVisibleItems,\n      scrollToIndex\n    };\n  }\n\n});","map":{"version":3,"mappings":"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","names":["makeDataTableProps","VDataTableHeaders","VDataTableRow","VDataTableRows","VTable","VVirtualScrollItem","provideExpanded","createGroupBy","makeDataTableGroupProps","provideGroupBy","useGroupedItems","createHeaders","useDataTableItems","useOptions","provideSelection","createSort","provideSort","useSortedItems","provideDefaults","makeFilterProps","useFilter","makeVirtualProps","useVirtual","computed","shallowRef","toRef","toRefs","convertToUnit","genericComponent","omit","propsFactory","useRender","makeVDataTableVirtualProps","VDataTableVirtual","name","props","emits","value","setup","_ref","attrs","slots","groupBy","sortBy","multiSort","mustSort","disableSort","columns","headers","filterFunctions","sortFunctions","sortRawFunctions","showSelect","showExpand","items","search","filteredItems","transform","item","customKeyFilter","toggleSort","sortByWithGroups","opened","extractRows","isGroupOpen","toggleGroup","sortedItems","raw","flatItems","allItems","isSelected","select","selectAll","toggleSelect","someSelected","allSelected","currentPage","isExpanded","toggleExpand","containerRef","markerRef","paddingTop","paddingBottom","computedItems","handleItemResize","handleScroll","handleScrollend","calculateVisibleItems","scrollToIndex","displayItems","map","page","itemsPerPage","hideNoData","noDataText","loading","loadingText","slotProps","internalItems","groupedItems","dataTableHeadersProps","filterProps","dataTableRowsProps","tableProps","class","style","fixedHeader","sticky","top","wrapper","height","colgroup","hideDefaultHeader","_createVNode","thead","hideDefaultBody","border","length","itemSlotProps","internalItem","index","default","_ref2","itemRef","tbody","tfoot","bottom"],"sources":["../../../src/components/VDataTable/VDataTableVirtual.tsx"],"sourcesContent":["// Components\nimport { makeDataTableProps } from './VDataTable'\nimport { VDataTableHeaders } from './VDataTableHeaders'\nimport { VDataTableRow } from './VDataTableRow'\nimport { VDataTableRows } from './VDataTableRows'\nimport { VTable } from '@/components/VTable'\nimport { VVirtualScrollItem } from '@/components/VVirtualScroll/VVirtualScrollItem'\n\n// Composables\nimport { provideExpanded } from './composables/expand'\nimport { createGroupBy, makeDataTableGroupProps, provideGroupBy, useGroupedItems } from './composables/group'\nimport { createHeaders } from './composables/headers'\nimport { useDataTableItems } from './composables/items'\nimport { useOptions } from './composables/options'\nimport { provideSelection } from './composables/select'\nimport { createSort, provideSort, useSortedItems } from './composables/sort'\nimport { provideDefaults } from '@/composables/defaults'\nimport { makeFilterProps, useFilter } from '@/composables/filter'\nimport { makeVirtualProps, useVirtual } from '@/composables/virtual'\n\n// Utilities\nimport { computed, shallowRef, toRef, toRefs } from 'vue'\nimport { convertToUnit, genericComponent, omit, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { VDataTableSlotProps } from './VDataTable'\nimport type { VDataTableHeadersSlots } from './VDataTableHeaders'\nimport type { VDataTableRowsSlots } from './VDataTableRows'\nimport type { CellProps, RowProps } from '@/components/VDataTable/types'\nimport type { GenericProps, SelectItemKey, TemplateRef } from '@/util'\n\ntype VDataTableVirtualSlotProps<T> = Omit<\n  VDataTableSlotProps<T>,\n  | 'setItemsPerPage'\n  | 'page'\n  | 'pageCount'\n  | 'itemsPerPage'\n>\n\nexport type VDataTableVirtualSlots<T> = VDataTableRowsSlots<T> & VDataTableHeadersSlots & {\n  colgroup: VDataTableVirtualSlotProps<T>\n  top: VDataTableVirtualSlotProps<T>\n  headers: VDataTableHeadersSlots['headers']\n  tbody: VDataTableVirtualSlotProps<T>\n  thead: VDataTableVirtualSlotProps<T>\n  tfoot: VDataTableVirtualSlotProps<T>\n  bottom: VDataTableVirtualSlotProps<T>\n  'body.prepend': VDataTableVirtualSlotProps<T>\n  'body.append': VDataTableVirtualSlotProps<T>\n  item: {\n    itemRef: TemplateRef\n  }\n}\n\nexport const makeVDataTableVirtualProps = propsFactory({\n  ...omit(makeDataTableProps(), ['hideDefaultFooter']),\n  ...makeDataTableGroupProps(),\n  ...makeVirtualProps(),\n  ...makeFilterProps(),\n}, 'VDataTableVirtual')\n\ntype ItemType<T> = T extends readonly (infer U)[] ? U : never\n\nexport const VDataTableVirtual = genericComponent<new <T extends readonly any[], V>(\n  props: {\n    items?: T\n    itemValue?: SelectItemKey<ItemType<T>>\n    rowProps?: RowProps<ItemType<T>>\n    cellProps?: CellProps<ItemType<T>>\n    itemSelectable?: SelectItemKey<ItemType<T>>\n    modelValue?: V\n    'onUpdate:modelValue'?: (value: V) => void\n  },\n  slots: VDataTableVirtualSlots<ItemType<T>>,\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VDataTableVirtual',\n\n  props: makeVDataTableVirtualProps(),\n\n  emits: {\n    'update:modelValue': (value: any[]) => true,\n    'update:sortBy': (value: any) => true,\n    'update:options': (value: any) => true,\n    'update:groupBy': (value: any) => true,\n    'update:expanded': (value: any) => true,\n  },\n\n  setup (props, { attrs, slots }) {\n    const { groupBy } = createGroupBy(props)\n    const { sortBy, multiSort, mustSort } = createSort(props)\n    const { disableSort } = toRefs(props)\n\n    const {\n      columns,\n      headers,\n      filterFunctions,\n      sortFunctions,\n      sortRawFunctions,\n    } = createHeaders(props, {\n      groupBy,\n      showSelect: toRef(props, 'showSelect'),\n      showExpand: toRef(props, 'showExpand'),\n    })\n    const { items } = useDataTableItems(props, columns)\n\n    const search = toRef(props, 'search')\n    const { filteredItems } = useFilter(props, items, search, {\n      transform: item => item.columns,\n      customKeyFilter: filterFunctions,\n    })\n\n    const { toggleSort } = provideSort({ sortBy, multiSort, mustSort })\n    const { sortByWithGroups, opened, extractRows, isGroupOpen, toggleGroup } = provideGroupBy({ groupBy, sortBy, disableSort })\n\n    const { sortedItems } = useSortedItems(props, filteredItems, sortByWithGroups, {\n      transform: item => ({ ...item.raw, ...item.columns }),\n      sortFunctions,\n      sortRawFunctions,\n    })\n    const { flatItems } = useGroupedItems(sortedItems, groupBy, opened)\n\n    const allItems = computed(() => extractRows(flatItems.value))\n\n    const { isSelected, select, selectAll, toggleSelect, someSelected, allSelected } = provideSelection(props, {\n      allItems,\n      currentPage: allItems,\n    })\n    const { isExpanded, toggleExpand } = provideExpanded(props)\n\n    const {\n      containerRef,\n      markerRef,\n      paddingTop,\n      paddingBottom,\n      computedItems,\n      handleItemResize,\n      handleScroll,\n      handleScrollend,\n      calculateVisibleItems,\n      scrollToIndex,\n    } = useVirtual(props, flatItems)\n    const displayItems = computed(() => computedItems.value.map(item => item.raw))\n\n    useOptions({\n      sortBy,\n      page: shallowRef(1),\n      itemsPerPage: shallowRef(-1),\n      groupBy,\n      search,\n    })\n\n    provideDefaults({\n      VDataTableRows: {\n        hideNoData: toRef(props, 'hideNoData'),\n        noDataText: toRef(props, 'noDataText'),\n        loading: toRef(props, 'loading'),\n        loadingText: toRef(props, 'loadingText'),\n      },\n    })\n\n    const slotProps = computed<VDataTableVirtualSlotProps<any>>(() => ({\n      sortBy: sortBy.value,\n      toggleSort,\n      someSelected: someSelected.value,\n      allSelected: allSelected.value,\n      isSelected,\n      select,\n      selectAll,\n      toggleSelect,\n      isExpanded,\n      toggleExpand,\n      isGroupOpen,\n      toggleGroup,\n      items: allItems.value.map(item => item.raw),\n      internalItems: allItems.value,\n      groupedItems: flatItems.value,\n      columns: columns.value,\n      headers: headers.value,\n    }))\n\n    useRender(() => {\n      const dataTableHeadersProps = VDataTableHeaders.filterProps(props)\n      const dataTableRowsProps = VDataTableRows.filterProps(props)\n      const tableProps = VTable.filterProps(props)\n\n      return (\n        <VTable\n          class={[\n            'v-data-table',\n            {\n              'v-data-table--loading': props.loading,\n            },\n            props.class,\n          ]}\n          style={ props.style }\n          { ...tableProps }\n          fixedHeader={ props.fixedHeader || props.sticky }\n        >\n          {{\n            top: () => slots.top?.(slotProps.value),\n            wrapper: () => (\n              <div\n                ref={ containerRef }\n                onScrollPassive={ handleScroll }\n                onScrollend={ handleScrollend }\n                class=\"v-table__wrapper\"\n                style={{\n                  height: convertToUnit(props.height),\n                }}\n              >\n                <table>\n                  { slots.colgroup?.(slotProps.value) }\n                  { !props.hideDefaultHeader && (\n                    <thead key=\"thead\">\n                      <VDataTableHeaders\n                        { ...dataTableHeadersProps }\n                        v-slots={ slots }\n                      />\n                    </thead>\n                  )}\n                  { slots.thead?.(slotProps.value) }\n                  { !props.hideDefaultBody && (\n                    <tbody key=\"tbody\">\n                      <tr ref={ markerRef } style={{ height: convertToUnit(paddingTop.value), border: 0 }}>\n                        <td colspan={ columns.value.length } style={{ height: 0, border: 0 }}></td>\n                      </tr>\n\n                      { slots['body.prepend']?.(slotProps.value) }\n\n                      <VDataTableRows\n                        { ...attrs }\n                        { ...dataTableRowsProps }\n                        items={ displayItems.value }\n                      >\n                        {{\n                          ...slots,\n                          item: itemSlotProps => (\n                            <VVirtualScrollItem\n                              key={ itemSlotProps.internalItem.index }\n                              renderless\n                              onUpdate:height={ height => handleItemResize(itemSlotProps.internalItem.index, height) }\n                            >\n                              { ({ itemRef }) => (\n                                slots.item?.({ ...itemSlotProps, itemRef }) ?? (\n                                  <VDataTableRow\n                                    { ...itemSlotProps.props }\n                                    ref={ itemRef }\n                                    key={ itemSlotProps.internalItem.index }\n                                    index={ itemSlotProps.internalItem.index }\n                                    v-slots={ slots }\n                                  />\n                                )\n                              )}\n                            </VVirtualScrollItem>\n                          ),\n                        }}\n                      </VDataTableRows>\n\n                      { slots['body.append']?.(slotProps.value) }\n\n                      <tr style={{ height: convertToUnit(paddingBottom.value), border: 0 }}>\n                        <td colspan={ columns.value.length } style={{ height: 0, border: 0 }}></td>\n                      </tr>\n                    </tbody>\n                  )}\n                  { slots.tbody?.(slotProps.value) }\n                  { slots.tfoot?.(slotProps.value) }\n                </table>\n              </div>\n            ),\n            bottom: () => slots.bottom?.(slotProps.value),\n          }}\n        </VTable>\n      )\n    })\n\n    return {\n      calculateVisibleItems,\n      scrollToIndex,\n    }\n  },\n})\n\nexport type VDataTableVirtual = InstanceType<typeof VDataTableVirtual>\n"]},"metadata":{},"sourceType":"module"}
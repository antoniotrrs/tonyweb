{"ast":null,"code":"// Types\nfunction mounted(el, binding) {\n  var _binding$modifiers, _binding$modifiers2;\n\n  var handler = binding.value;\n  var options = {\n    passive: !((_binding$modifiers = binding.modifiers) !== null && _binding$modifiers !== void 0 && _binding$modifiers.active)\n  };\n  window.addEventListener('resize', handler, options);\n  el._onResize = Object(el._onResize);\n  el._onResize[binding.instance.$.uid] = {\n    handler: handler,\n    options: options\n  };\n\n  if (!((_binding$modifiers2 = binding.modifiers) !== null && _binding$modifiers2 !== void 0 && _binding$modifiers2.quiet)) {\n    handler();\n  }\n}\n\nfunction unmounted(el, binding) {\n  var _el$_onResize;\n\n  if (!((_el$_onResize = el._onResize) !== null && _el$_onResize !== void 0 && _el$_onResize[binding.instance.$.uid])) return;\n  var _el$_onResize$binding = el._onResize[binding.instance.$.uid],\n      handler = _el$_onResize$binding.handler,\n      options = _el$_onResize$binding.options;\n  window.removeEventListener('resize', handler, options);\n  delete el._onResize[binding.instance.$.uid];\n}\n\nexport var Resize = {\n  mounted: mounted,\n  unmounted: unmounted\n};\nexport default Resize;","map":{"version":3,"mappings":"AAAA;AAWA,SAASA,OAAT,CAAkBC,EAAlB,EAAmCC,OAAnC,EAAoE;AAAA;;AAClE,MAAMC,OAAO,GAAGD,OAAO,CAACE,KAAxB;AACA,MAAMC,OAAgC,GAAG;AACvCC,WAAO,EAAE,wBAACJ,OAAO,CAACK,SAAT,+CAACL,mBAAmBM,MAApB;AAD8B,GAAzC;AAIAC,QAAM,CAACC,gBAAPD,CAAwB,QAAxBA,EAAkCN,OAAlCM,EAA2CJ,OAA3CI;AAEAR,IAAE,CAACU,SAAHV,GAAeW,MAAM,CAACX,EAAE,CAACU,SAAJ,CAArBV;AACAA,IAAE,CAACU,SAAHV,CAAcC,OAAO,CAACW,QAARX,CAAkBY,CAAlBZ,CAAoBa,GAAlCd,IAAyC;AACvCE,WAAO,EAAPA,OADuC;AAEvCE;AAFuC,GAAzCJ;;AAKA,MAAI,yBAACC,OAAO,CAACK,SAAT,gDAACL,oBAAmBc,KAApB,CAAJ,EAA+B;AAC7Bb,WAAO;AACT;AACF;;AAEA,SAASc,SAAT,CAAoBhB,EAApB,EAAqCC,OAArC,EAAsE;AAAA;;AACpE,MAAI,mBAACD,EAAE,CAACU,SAAJ,0CAACV,cAAeC,OAAO,CAACW,QAARX,CAAkBY,CAAlBZ,CAAoBa,GAAnCd,CAAD,CAAJ,EAA8C;AAE9C,8BAA6BA,EAAE,CAACU,SAAHV,CAAaC,OAAO,CAACW,QAARX,CAAkBY,CAAlBZ,CAAoBa,GAAjCd,CAA7B;AAAA,MAAQE,OAAR,yBAAQA,OAAR;AAAA,MAAiBE,OAAjB,yBAAiBA,OAAjB;AAEAI,QAAM,CAACS,mBAAPT,CAA2B,QAA3BA,EAAqCN,OAArCM,EAA8CJ,OAA9CI;AAEA,SAAOR,EAAE,CAACU,SAAHV,CAAaC,OAAO,CAACW,QAARX,CAAkBY,CAAlBZ,CAAoBa,GAAjCd,CAAP;AACF;;AAEA,OAAO,IAAMkB,MAAM,GAAG;AACpBnB,SAAO,EAAPA,OADoB;AAEpBiB;AAFoB,CAAf;AAKP,eAAeE,MAAf","names":["mounted","el","binding","handler","value","options","passive","modifiers","active","window","addEventListener","_onResize","Object","instance","$","uid","quiet","unmounted","removeEventListener","Resize"],"sources":["../../../src/directives/resize/index.ts"],"sourcesContent":["// Types\nimport type { DirectiveBinding } from 'vue'\n\ninterface ResizeDirectiveBinding extends Omit<DirectiveBinding, 'modifiers'> {\n  value: () => void\n  modifiers?: {\n    active?: boolean\n    quiet?: boolean\n  }\n}\n\nfunction mounted (el: HTMLElement, binding: ResizeDirectiveBinding) {\n  const handler = binding.value\n  const options: AddEventListenerOptions = {\n    passive: !binding.modifiers?.active,\n  }\n\n  window.addEventListener('resize', handler, options)\n\n  el._onResize = Object(el._onResize)\n  el._onResize![binding.instance!.$.uid] = {\n    handler,\n    options,\n  }\n\n  if (!binding.modifiers?.quiet) {\n    handler()\n  }\n}\n\nfunction unmounted (el: HTMLElement, binding: ResizeDirectiveBinding) {\n  if (!el._onResize?.[binding.instance!.$.uid]) return\n\n  const { handler, options } = el._onResize[binding.instance!.$.uid]!\n\n  window.removeEventListener('resize', handler, options)\n\n  delete el._onResize[binding.instance!.$.uid]\n}\n\nexport const Resize = {\n  mounted,\n  unmounted,\n}\n\nexport default Resize\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\"; // Styles\n\nimport \"./VDivider.css\"; // Composables\n\nimport { useTextColor } from \"../../composables/color.js\";\nimport { makeComponentProps } from \"../../composables/component.js\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.js\"; // Utilities\n\nimport { computed, toRef } from 'vue';\nimport { convertToUnit, genericComponent, propsFactory, useRender } from \"../../util/index.js\";\nexport const makeVDividerProps = propsFactory({\n  color: String,\n  inset: Boolean,\n  length: [Number, String],\n  opacity: [Number, String],\n  thickness: [Number, String],\n  vertical: Boolean,\n  ...makeComponentProps(),\n  ...makeThemeProps()\n}, 'VDivider');\nexport const VDivider = genericComponent()({\n  name: 'VDivider',\n  props: makeVDividerProps(),\n\n  setup(props, _ref) {\n    let {\n      attrs,\n      slots\n    } = _ref;\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      textColorClasses,\n      textColorStyles\n    } = useTextColor(toRef(props, 'color'));\n    const dividerStyles = computed(() => {\n      const styles = {};\n\n      if (props.length) {\n        styles[props.vertical ? 'height' : 'width'] = convertToUnit(props.length);\n      }\n\n      if (props.thickness) {\n        styles[props.vertical ? 'borderRightWidth' : 'borderTopWidth'] = convertToUnit(props.thickness);\n      }\n\n      return styles;\n    });\n    useRender(() => {\n      const divider = _createVNode(\"hr\", {\n        \"class\": [{\n          'v-divider': true,\n          'v-divider--inset': props.inset,\n          'v-divider--vertical': props.vertical\n        }, themeClasses.value, textColorClasses.value, props.class],\n        \"style\": [dividerStyles.value, textColorStyles.value, {\n          '--v-border-opacity': props.opacity\n        }, props.style],\n        \"aria-orientation\": !attrs.role || attrs.role === 'separator' ? props.vertical ? 'vertical' : 'horizontal' : undefined,\n        \"role\": `${attrs.role || 'separator'}`\n      }, null);\n\n      if (!slots.default) return divider;\n      return _createVNode(\"div\", {\n        \"class\": ['v-divider__wrapper', {\n          'v-divider__wrapper--vertical': props.vertical,\n          'v-divider__wrapper--inset': props.inset\n        }]\n      }, [divider, _createVNode(\"div\", {\n        \"class\": \"v-divider__content\"\n      }, [slots.default()]), divider]);\n    });\n    return {};\n  }\n\n});","map":{"version":3,"mappings":"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","names":["useTextColor","makeComponentProps","makeThemeProps","provideTheme","computed","toRef","convertToUnit","genericComponent","propsFactory","useRender","makeVDividerProps","color","String","inset","Boolean","length","Number","opacity","thickness","vertical","VDivider","name","props","setup","_ref","attrs","slots","themeClasses","textColorClasses","textColorStyles","dividerStyles","styles","divider","value","class","style","role","undefined","default","_createVNode"],"sources":["../../../src/components/VDivider/VDivider.tsx"],"sourcesContent":["// Styles\nimport './VDivider.sass'\n\n// Composables\nimport { useTextColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\n\n// Utilities\nimport { computed, toRef } from 'vue'\nimport { convertToUnit, genericComponent, propsFactory, useRender } from '@/util'\n\ntype DividerKey = 'borderRightWidth' | 'borderTopWidth' | 'height' | 'width'\ntype DividerStyles = Partial<Record<DividerKey, string>>\n\nexport const makeVDividerProps = propsFactory({\n  color: String,\n  inset: Boolean,\n  length: [Number, String],\n  opacity: [Number, String],\n  thickness: [Number, String],\n  vertical: Boolean,\n\n  ...makeComponentProps(),\n  ...makeThemeProps(),\n}, 'VDivider')\n\nexport const VDivider = genericComponent()({\n  name: 'VDivider',\n\n  props: makeVDividerProps(),\n\n  setup (props, { attrs, slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { textColorClasses, textColorStyles } = useTextColor(toRef(props, 'color'))\n    const dividerStyles = computed(() => {\n      const styles: DividerStyles = {}\n\n      if (props.length) {\n        styles[props.vertical ? 'height' : 'width'] = convertToUnit(props.length)\n      }\n\n      if (props.thickness) {\n        styles[props.vertical ? 'borderRightWidth' : 'borderTopWidth'] = convertToUnit(props.thickness)\n      }\n\n      return styles\n    })\n\n    useRender(() => {\n      const divider = (\n        <hr\n          class={[\n            {\n              'v-divider': true,\n              'v-divider--inset': props.inset,\n              'v-divider--vertical': props.vertical,\n            },\n            themeClasses.value,\n            textColorClasses.value,\n            props.class,\n          ]}\n          style={[\n            dividerStyles.value,\n            textColorStyles.value,\n            { '--v-border-opacity': props.opacity },\n            props.style,\n          ]}\n          aria-orientation={\n            !attrs.role || attrs.role === 'separator'\n              ? props.vertical ? 'vertical' : 'horizontal'\n              : undefined\n          }\n          role={ `${attrs.role || 'separator'}` }\n        />\n      )\n\n      if (!slots.default) return divider\n\n      return (\n        <div\n          class={[\n            'v-divider__wrapper',\n            {\n              'v-divider__wrapper--vertical': props.vertical,\n              'v-divider__wrapper--inset': props.inset,\n            },\n          ]}\n        >\n          { divider }\n\n          <div class=\"v-divider__content\">\n            { slots.default() }\n          </div>\n\n          { divider }\n        </div>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VDivider = InstanceType<typeof VDivider>\n"]},"metadata":{},"sourceType":"module"}
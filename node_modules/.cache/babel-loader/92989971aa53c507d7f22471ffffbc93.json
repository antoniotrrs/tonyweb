{"ast":null,"code":"import \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\n// Utilities\nimport { Box } from \"./box.js\";\n/** @see https://stackoverflow.com/a/57876601/2074736 */\n\nexport function nullifyTransforms(el) {\n  var rect = el.getBoundingClientRect();\n  var style = getComputedStyle(el);\n  var tx = style.transform;\n\n  if (tx) {\n    var ta, sx, sy, dx, dy;\n\n    if (tx.startsWith('matrix3d(')) {\n      ta = tx.slice(9, -1).split(/, /);\n      sx = Number(ta[0]);\n      sy = Number(ta[5]);\n      dx = Number(ta[12]);\n      dy = Number(ta[13]);\n    } else if (tx.startsWith('matrix(')) {\n      ta = tx.slice(7, -1).split(/, /);\n      sx = Number(ta[0]);\n      sy = Number(ta[3]);\n      dx = Number(ta[4]);\n      dy = Number(ta[5]);\n    } else {\n      return new Box(rect);\n    }\n\n    var to = style.transformOrigin;\n    var x = rect.x - dx - (1 - sx) * parseFloat(to);\n    var y = rect.y - dy - (1 - sy) * parseFloat(to.slice(to.indexOf(' ') + 1));\n    var w = sx ? rect.width / sx : el.offsetWidth + 1;\n    var h = sy ? rect.height / sy : el.offsetHeight + 1;\n    return new Box({\n      x: x,\n      y: y,\n      width: w,\n      height: h\n    });\n  } else {\n    return new Box(rect);\n  }\n}\nexport function animate(el, keyframes, options) {\n  if (typeof el.animate === 'undefined') return {\n    finished: Promise.resolve()\n  };\n  var animation;\n\n  try {\n    animation = el.animate(keyframes, options);\n  } catch (err) {\n    return {\n      finished: Promise.resolve()\n    };\n  }\n\n  if (typeof animation.finished === 'undefined') {\n    animation.finished = new Promise(function (resolve) {\n      animation.onfinish = function () {\n        resolve(animation);\n      };\n    });\n  }\n\n  return animation;\n}","map":{"version":3,"mappings":"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","names":["Box","nullifyTransforms","el","rect","getBoundingClientRect","style","getComputedStyle","tx","transform","ta","sx","sy","dx","dy","startsWith","slice","split","Number","to","transformOrigin","x","parseFloat","y","indexOf","w","width","offsetWidth","h","height","offsetHeight","animate","keyframes","options","finished","Promise","resolve","animation","err","onfinish"],"sources":["../../src/util/animation.ts"],"sourcesContent":["// Utilities\nimport { Box } from '@/util/box'\n\n/** @see https://stackoverflow.com/a/57876601/2074736 */\nexport function nullifyTransforms (el: HTMLElement): Box {\n  const rect = el.getBoundingClientRect()\n  const style = getComputedStyle(el)\n  const tx = style.transform\n\n  if (tx) {\n    let ta, sx, sy, dx, dy\n    if (tx.startsWith('matrix3d(')) {\n      ta = tx.slice(9, -1).split(/, /)\n      sx = Number(ta[0])\n      sy = Number(ta[5])\n      dx = Number(ta[12])\n      dy = Number(ta[13])\n    } else if (tx.startsWith('matrix(')) {\n      ta = tx.slice(7, -1).split(/, /)\n      sx = Number(ta[0])\n      sy = Number(ta[3])\n      dx = Number(ta[4])\n      dy = Number(ta[5])\n    } else {\n      return new Box(rect)\n    }\n\n    const to = style.transformOrigin\n    const x = rect.x - dx - (1 - sx) * parseFloat(to)\n    const y = rect.y - dy - (1 - sy) * parseFloat(to.slice(to.indexOf(' ') + 1))\n    const w = sx ? rect.width / sx : el.offsetWidth + 1\n    const h = sy ? rect.height / sy : el.offsetHeight + 1\n\n    return new Box({ x, y, width: w, height: h })\n  } else {\n    return new Box(rect)\n  }\n}\n\nexport function animate (\n  el: Element,\n  keyframes: Keyframe[] | PropertyIndexedKeyframes | null,\n  options?: number | KeyframeAnimationOptions\n) {\n  if (typeof el.animate === 'undefined') return { finished: Promise.resolve() }\n\n  let animation: Animation\n  try {\n    animation = el.animate(keyframes, options)\n  } catch (err) {\n    return { finished: Promise.resolve() }\n  }\n\n  if (typeof animation.finished === 'undefined') {\n    (animation as any).finished = new Promise(resolve => {\n      animation.onfinish = () => {\n        resolve(animation)\n      }\n    })\n  }\n\n  return animation\n}\n"]},"metadata":{},"sourceType":"module"}
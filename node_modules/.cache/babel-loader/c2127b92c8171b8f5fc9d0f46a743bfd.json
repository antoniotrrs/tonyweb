{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/antoniotorres/Documents/tony/tonyweb/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\n// Utilities\nimport { computed, isRef } from 'vue';\nimport { getCurrentInstanceName, propsFactory } from \"../util/index.js\"; // Types\n// Composables\n\nexport var makeBorderProps = propsFactory({\n  border: [Boolean, Number, String]\n}, 'border');\nexport function useBorder(props) {\n  var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getCurrentInstanceName();\n  var borderClasses = computed(function () {\n    var border = isRef(props) ? props.value : props.border;\n    var classes = [];\n\n    if (border === true || border === '') {\n      classes.push(\"\".concat(name, \"--border\"));\n    } else if (typeof border === 'string' || border === 0) {\n      var _iterator = _createForOfIteratorHelper(String(border).split(' ')),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var value = _step.value;\n          classes.push(\"border-\".concat(value));\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n\n    return classes;\n  });\n  return {\n    borderClasses: borderClasses\n  };\n}","map":{"version":3,"mappings":";;;;AAAA;AACA,SAASA,QAAT,EAAmBC,KAAnB,QAAgC,KAAhC;AAAqC,SAC5BC,sBAD4B,EACJC,YADI,QACQ,kBADR,C,CAGrC;AAKA;;AACA,OAAO,IAAMC,eAAe,GAAGD,YAAY,CAAC;AAC1CE,QAAM,EAAE,CAACC,OAAD,EAAUC,MAAV,EAAkBC,MAAlB;AADkC,CAAD,EAExC,QAFwC,CAApC;AAIP,OAAO,SAASC,SAAT,CACLC,KADK,EAGL;AAAA,MADAC,IAAI,uEAAGT,sBAAsB,EAC7B;AACA,MAAMU,aAAa,GAAGZ,QAAQ,CAAC,YAAM;AACnC,QAAMK,MAAM,GAAGJ,KAAK,CAACS,KAAD,CAALT,GAAeS,KAAK,CAACG,KAArBZ,GAA6BS,KAAK,CAACL,MAAlD;AACA,QAAMS,OAAiB,GAAG,EAA1B;;AAEA,QAAIT,MAAM,KAAK,IAAXA,IAAmBA,MAAM,KAAK,EAAlC,EAAsC;AACpCS,aAAO,CAACC,IAARD,WAAgBH,IAAhBG;AACD,KAFD,MAEO,IACL,OAAOT,MAAP,KAAkB,QAAlB,IACAA,MAAM,KAAK,CAFN,EAGL;AAAA,iDACoBG,MAAM,CAACH,MAAD,CAANG,CAAeQ,KAAfR,CAAqB,GAArBA,CADpB;AAAA;;AAAA;AACA,4DAA+C;AAAA,cAApCK,KAAoC;AAC7CC,iBAAO,CAACC,IAARD,kBAAuBD,KAAvBC;AACF;AAHA;AAAA;AAAA;AAAA;AAAA;AAIF;;AAEA,WAAOA,OAAP;AACD,GAhB6B,CAA9B;AAkBA,SAAO;AAAEF;AAAF,GAAP;AACF","names":["computed","isRef","getCurrentInstanceName","propsFactory","makeBorderProps","border","Boolean","Number","String","useBorder","props","name","borderClasses","value","classes","push","split"],"sources":["../../src/composables/border.ts"],"sourcesContent":["// Utilities\nimport { computed, isRef } from 'vue'\nimport { getCurrentInstanceName, propsFactory } from '@/util'\n\n// Types\nexport interface BorderProps {\n  border?: boolean | number | string\n}\n\n// Composables\nexport const makeBorderProps = propsFactory({\n  border: [Boolean, Number, String],\n}, 'border')\n\nexport function useBorder (\n  props: BorderProps,\n  name = getCurrentInstanceName(),\n) {\n  const borderClasses = computed(() => {\n    const border = isRef(props) ? props.value : props.border\n    const classes: string[] = []\n\n    if (border === true || border === '') {\n      classes.push(`${name}--border`)\n    } else if (\n      typeof border === 'string' ||\n      border === 0\n    ) {\n      for (const value of String(border).split(' ')) {\n        classes.push(`border-${value}`)\n      }\n    }\n\n    return classes\n  })\n\n  return { borderClasses }\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from \"/Users/antoniotorres/Documents/tony/tonyweb/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport { createVNode as _createVNode } from \"vue\"; // Components\n\nimport { VTimelineDivider } from \"./VTimelineDivider.js\"; // Composables\n\nimport { makeComponentProps } from \"../../composables/component.js\";\nimport { makeDimensionProps, useDimension } from \"../../composables/dimensions.js\";\nimport { makeElevationProps } from \"../../composables/elevation.js\";\nimport { IconValue } from \"../../composables/icons.js\";\nimport { makeRoundedProps } from \"../../composables/rounded.js\";\nimport { makeSizeProps } from \"../../composables/size.js\";\nimport { makeTagProps } from \"../../composables/tag.js\"; // Utilities\n\nimport { ref, shallowRef, watch } from 'vue';\nimport { convertToUnit, genericComponent, propsFactory, useRender } from \"../../util/index.js\"; // Types\n// Types\n\nexport var makeVTimelineItemProps = propsFactory(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({\n  density: String,\n  dotColor: String,\n  fillDot: Boolean,\n  hideDot: Boolean,\n  hideOpposite: {\n    type: Boolean,\n    default: undefined\n  },\n  icon: IconValue,\n  iconColor: String,\n  lineInset: [Number, String],\n  side: {\n    type: String,\n    validator: function validator(v) {\n      return v == null || ['start', 'end'].includes(v);\n    }\n  }\n}, makeComponentProps()), makeDimensionProps()), makeElevationProps()), makeRoundedProps()), makeSizeProps()), makeTagProps()), 'VTimelineItem');\nexport var VTimelineItem = genericComponent()({\n  name: 'VTimelineItem',\n  props: makeVTimelineItemProps(),\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n\n    var _useDimension = useDimension(props),\n        dimensionStyles = _useDimension.dimensionStyles;\n\n    var dotSize = shallowRef(0);\n    var dotRef = ref();\n    watch(dotRef, function (newValue) {\n      var _newValue$$el$querySe, _newValue$$el$querySe2;\n\n      if (!newValue) return;\n      dotSize.value = (_newValue$$el$querySe = (_newValue$$el$querySe2 = newValue.$el.querySelector('.v-timeline-divider__dot')) === null || _newValue$$el$querySe2 === void 0 ? void 0 : _newValue$$el$querySe2.getBoundingClientRect().width) !== null && _newValue$$el$querySe !== void 0 ? _newValue$$el$querySe : 0;\n    }, {\n      flush: 'post'\n    });\n    useRender(function () {\n      var _slots$default, _slots$opposite;\n\n      return _createVNode(\"div\", {\n        \"class\": ['v-timeline-item', {\n          'v-timeline-item--fill-dot': props.fillDot,\n          'v-timeline-item--side-start': props.side === 'start',\n          'v-timeline-item--side-end': props.side === 'end'\n        }, props.class],\n        \"style\": [{\n          '--v-timeline-dot-size': convertToUnit(dotSize.value),\n          '--v-timeline-line-inset': props.lineInset ? \"calc(var(--v-timeline-dot-size) / 2 + \".concat(convertToUnit(props.lineInset), \")\") : convertToUnit(0)\n        }, props.style]\n      }, [_createVNode(\"div\", {\n        \"class\": \"v-timeline-item__body\",\n        \"style\": dimensionStyles.value\n      }, [(_slots$default = slots.default) === null || _slots$default === void 0 ? void 0 : _slots$default.call(slots)]), _createVNode(VTimelineDivider, {\n        \"ref\": dotRef,\n        \"hideDot\": props.hideDot,\n        \"icon\": props.icon,\n        \"iconColor\": props.iconColor,\n        \"size\": props.size,\n        \"elevation\": props.elevation,\n        \"dotColor\": props.dotColor,\n        \"fillDot\": props.fillDot,\n        \"rounded\": props.rounded\n      }, {\n        default: slots.icon\n      }), props.density !== 'compact' && _createVNode(\"div\", {\n        \"class\": \"v-timeline-item__opposite\"\n      }, [!props.hideOpposite && ((_slots$opposite = slots.opposite) === null || _slots$opposite === void 0 ? void 0 : _slots$opposite.call(slots))])]);\n    });\n    return {};\n  }\n});","map":{"version":3,"mappings":"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","names":["VTimelineDivider","makeComponentProps","makeDimensionProps","useDimension","makeElevationProps","IconValue","makeRoundedProps","makeSizeProps","makeTagProps","ref","shallowRef","watch","convertToUnit","genericComponent","propsFactory","useRender","makeVTimelineItemProps","density","String","dotColor","fillDot","Boolean","hideDot","hideOpposite","type","default","undefined","icon","iconColor","lineInset","Number","side","validator","v","includes","VTimelineItem","name","props","setup","_ref","slots","dimensionStyles","dotSize","dotRef","newValue","value","$el","querySelector","getBoundingClientRect","width","flush","class","style","_createVNode","size","elevation","rounded","opposite"],"sources":["../../../src/components/VTimeline/VTimelineItem.tsx"],"sourcesContent":["// Components\nimport { VTimelineDivider } from './VTimelineDivider'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { makeElevationProps } from '@/composables/elevation'\nimport { IconValue } from '@/composables/icons'\nimport { makeRoundedProps } from '@/composables/rounded'\nimport { makeSizeProps } from '@/composables/size'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { ref, shallowRef, watch } from 'vue'\nimport { convertToUnit, genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { Prop, PropType } from 'vue'\n\n// Types\nexport type TimelineItemSide = 'start' | 'end' | undefined\nexport type VTimelineItemSlots = {\n  default: never\n  icon: never\n  opposite: never\n}\n\nexport const makeVTimelineItemProps = propsFactory({\n  density: String as PropType<'default' | 'compact'>,\n  dotColor: String,\n  fillDot: Boolean,\n  hideDot: Boolean,\n  hideOpposite: {\n    type: Boolean,\n    default: undefined,\n  },\n  icon: IconValue,\n  iconColor: String,\n  lineInset: [Number, String],\n  side: {\n    type: String,\n    validator: (v: any) => v == null || ['start', 'end'].includes(v),\n  } as Prop<TimelineItemSide>,\n\n  ...makeComponentProps(),\n  ...makeDimensionProps(),\n  ...makeElevationProps(),\n  ...makeRoundedProps(),\n  ...makeSizeProps(),\n  ...makeTagProps(),\n}, 'VTimelineItem')\n\nexport const VTimelineItem = genericComponent<VTimelineItemSlots>()({\n  name: 'VTimelineItem',\n\n  props: makeVTimelineItemProps(),\n\n  setup (props, { slots }) {\n    const { dimensionStyles } = useDimension(props)\n\n    const dotSize = shallowRef(0)\n    const dotRef = ref<VTimelineDivider>()\n    watch(dotRef, newValue => {\n      if (!newValue) return\n      dotSize.value = newValue.$el.querySelector('.v-timeline-divider__dot')?.getBoundingClientRect().width ?? 0\n    }, {\n      flush: 'post',\n    })\n\n    useRender(() => (\n      <div\n        class={[\n          'v-timeline-item',\n          {\n            'v-timeline-item--fill-dot': props.fillDot,\n            'v-timeline-item--side-start': props.side === 'start',\n            'v-timeline-item--side-end': props.side === 'end',\n          },\n          props.class,\n        ]}\n        style={[\n          {\n            '--v-timeline-dot-size': convertToUnit(dotSize.value),\n            '--v-timeline-line-inset': props.lineInset ? `calc(var(--v-timeline-dot-size) / 2 + ${convertToUnit(props.lineInset)})` : convertToUnit(0),\n          },\n          props.style,\n        ]}\n      >\n        <div\n          class=\"v-timeline-item__body\"\n          style={ dimensionStyles.value }\n        >\n          { slots.default?.() }\n        </div>\n\n        <VTimelineDivider\n          ref={ dotRef }\n          hideDot={ props.hideDot }\n          icon={ props.icon }\n          iconColor={ props.iconColor }\n          size={ props.size }\n          elevation={ props.elevation }\n          dotColor={ props.dotColor }\n          fillDot={ props.fillDot }\n          rounded={ props.rounded }\n          v-slots={{ default: slots.icon }}\n        />\n\n        { props.density !== 'compact' && (\n          <div class=\"v-timeline-item__opposite\">\n            { !props.hideOpposite && slots.opposite?.() }\n          </div>\n        )}\n      </div>\n    ))\n\n    return {}\n  },\n})\n\nexport type VTimelineItem = InstanceType<typeof VTimelineItem>\n"]},"metadata":{},"sourceType":"module"}
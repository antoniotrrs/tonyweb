{"ast":null,"code":"import _objectSpread from \"/Users/antoniotorres/Documents/tony/tonyweb/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport { mergeProps as _mergeProps, createVNode as _createVNode } from \"vue\"; // Components\n\nimport { VStepperSymbol } from \"./shared.js\";\nimport { makeVWindowProps, VWindow } from \"../VWindow/VWindow.js\"; // Composables\n\nimport { useProxiedModel } from \"../../composables/proxiedModel.js\"; // Utilities\n\nimport { computed, inject } from 'vue';\nimport { genericComponent, omit, propsFactory, useRender } from \"../../util/index.js\";\nexport var makeVStepperWindowProps = propsFactory(_objectSpread({}, omit(makeVWindowProps(), ['continuous', 'nextIcon', 'prevIcon', 'showArrows', 'touch', 'mandatory'])), 'VStepperWindow');\nexport var VStepperWindow = genericComponent()({\n  name: 'VStepperWindow',\n  props: makeVStepperWindowProps(),\n  emits: {\n    'update:modelValue': function updateModelValue(v) {\n      return true;\n    }\n  },\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n    var group = inject(VStepperSymbol, null);\n\n    var _model = useProxiedModel(props, 'modelValue');\n\n    var model = computed({\n      get: function get() {\n        var _group$items$value$fi;\n\n        // Always return modelValue if defined\n        // or if not within a VStepper group\n        if (_model.value != null || !group) return _model.value; // If inside of a VStepper, find the currently selected\n        // item by id. Item value may be assigned by its index\n\n        return (_group$items$value$fi = group.items.value.find(function (item) {\n          return group.selected.value.includes(item.id);\n        })) === null || _group$items$value$fi === void 0 ? void 0 : _group$items$value$fi.value;\n      },\n      set: function set(val) {\n        _model.value = val;\n      }\n    });\n    useRender(function () {\n      var windowProps = VWindow.filterProps(props);\n      return _createVNode(VWindow, _mergeProps({\n        \"_as\": \"VStepperWindow\"\n      }, windowProps, {\n        \"modelValue\": model.value,\n        \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n          return model.value = $event;\n        },\n        \"class\": ['v-stepper-window', props.class],\n        \"style\": props.style,\n        \"mandatory\": false,\n        \"touch\": false\n      }), slots);\n    });\n    return {};\n  }\n});","map":{"version":3,"mappings":";;;;;8EAAA;;AAAA,SACSA,cADT,QACuB,aADvB;AACuB,SACdC,gBADc,EACIC,OADJ,QACW,uBADX,C,CAGvB;;AAAA,SACSC,eADT,QACwB,mCADxB,C,CAGA;;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,KAAjC;AAAsC,SAC7BC,gBAD6B,EACXC,IADW,EACLC,YADK,EACSC,SADT,QACkB,qBADlB;AAGtC,OAAO,IAAMC,uBAAuB,GAAGF,YAAY,mBAC9CD,IAAI,CAACN,gBAAgB,EAAjB,EAAqB,CAAC,YAAD,EAAe,UAAf,EAA2B,UAA3B,EAAuC,YAAvC,EAAqD,OAArD,EAA8D,WAA9D,CAArB,CAD0C,GAEhD,gBAFgD,CAA5C;AAIP,OAAO,IAAMU,cAAc,GAAGL,gBAAgB,GAAG;AAC/CM,MAAI,EAAE,gBADyC;AAG/CC,OAAK,EAAEH,uBAAuB,EAHiB;AAK/CI,OAAK,EAAE;AACL,yBAAsBC,2BAAU;AAAA,aAAK,IAAL;AAAA;AAD3B,GALwC;AAS/CC,OAT+C,iBASxCH,KATwC,EASnCI,IATmC,EAStB;AAAA,QAATC,KAAS,GAAFD,IAAE,CAATC,KAAS;AACvB,QAAMC,KAAK,GAAGd,MAAM,CAACL,cAAD,EAAiB,IAAjB,CAApB;;AACA,QAAMoB,MAAM,GAAGjB,eAAe,CAACU,KAAD,EAAQ,YAAR,CAA9B;;AAEA,QAAMQ,KAAK,GAAGjB,QAAQ,CAAC;AACrBkB,SADqB,iBACd;AAAA;;AACL;AACA;AACA,YAAIF,MAAM,CAACG,KAAPH,IAAgB,IAAhBA,IAAwB,CAACD,KAA7B,EAAoC,OAAOC,MAAM,CAACG,KAAd,CAH/B,CAKL;AACA;;AACA,wCAAOJ,KAAK,CAACK,KAANL,CAAYI,KAAZJ,CAAkBM,IAAlBN,CAAuBO,cAAI;AAAA,iBAAIP,KAAK,CAACQ,QAANR,CAAeI,KAAfJ,CAAqBS,QAArBT,CAA8BO,IAAI,CAACG,EAAnCV,CAAJ;AAAA,SAA3BA,CAAP,0DAAOA,sBAAwEI,KAA/E;AACD,OAToB;AAUrBO,SAVqB,eAUhBC,GAVgB,EAUX;AACRX,cAAM,CAACG,KAAPH,GAAeW,GAAfX;AACF;AAZqB,KAAD,CAAtB;AAeAX,aAAS,CAAC,YAAM;AACd,UAAMuB,WAAW,GAAG9B,OAAO,CAAC+B,WAAR/B,CAAoBW,KAApBX,CAApB;AAEA;AAAA;AAAA,SAGS8B,WAHT,EAGoB;AAAA,sBACNX,KAAK,CAACE,KADA;AACK;AAAA,iBAAXF,KAAK,CAACE,KAANF,GAAWa;AAAA,SADL;AACK,iBACd,CACL,kBADK,EAELrB,KAAK,CAACsB,KAFD,CAFS;AAKf,iBACOtB,KAAK,CAACuB,KANE;AAMG,qBACP,KAPI;AAOC,iBACT;AARQ,OAHpB,GAYclB,KAZd;AAeD,KAlBQ,CAATT;AAoBA,WAAO,EAAP;AACF;AAjD+C,CAAH,CAAvC","names":["VStepperSymbol","makeVWindowProps","VWindow","useProxiedModel","computed","inject","genericComponent","omit","propsFactory","useRender","makeVStepperWindowProps","VStepperWindow","name","props","emits","v","setup","_ref","slots","group","_model","model","get","value","items","find","item","selected","includes","id","set","val","windowProps","filterProps","$event","class","style"],"sources":["../../../src/components/VStepper/VStepperWindow.tsx"],"sourcesContent":["// Components\nimport { VStepperSymbol } from './shared'\nimport { makeVWindowProps, VWindow } from '@/components/VWindow/VWindow'\n\n// Composables\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed, inject } from 'vue'\nimport { genericComponent, omit, propsFactory, useRender } from '@/util'\n\nexport const makeVStepperWindowProps = propsFactory({\n  ...omit(makeVWindowProps(), ['continuous', 'nextIcon', 'prevIcon', 'showArrows', 'touch', 'mandatory']),\n}, 'VStepperWindow')\n\nexport const VStepperWindow = genericComponent()({\n  name: 'VStepperWindow',\n\n  props: makeVStepperWindowProps(),\n\n  emits: {\n    'update:modelValue': (v: unknown) => true,\n  },\n\n  setup (props, { slots }) {\n    const group = inject(VStepperSymbol, null)\n    const _model = useProxiedModel(props, 'modelValue')\n\n    const model = computed({\n      get () {\n        // Always return modelValue if defined\n        // or if not within a VStepper group\n        if (_model.value != null || !group) return _model.value\n\n        // If inside of a VStepper, find the currently selected\n        // item by id. Item value may be assigned by its index\n        return group.items.value.find(item => group.selected.value.includes(item.id))?.value\n      },\n      set (val) {\n        _model.value = val\n      },\n    })\n\n    useRender(() => {\n      const windowProps = VWindow.filterProps(props)\n\n      return (\n        <VWindow\n          _as=\"VStepperWindow\"\n          { ...windowProps }\n          v-model={ model.value }\n          class={[\n            'v-stepper-window',\n            props.class,\n          ]}\n          style={ props.style }\n          mandatory={ false }\n          touch={ false }\n          v-slots={ slots }\n        />\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VStepperWindow = InstanceType<typeof VStepperWindow>\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from \"/Users/antoniotorres/Documents/tony/tonyweb/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _createForOfIteratorHelper from \"/Users/antoniotorres/Documents/tony/tonyweb/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _asyncToGenerator from \"/Users/antoniotorres/Documents/tony/tonyweb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find.js\";\n// Composables\nimport { useProxiedModel } from \"./proxiedModel.js\"; // Utilities\n\nimport { computed, inject, markRaw, provide, ref, shallowRef, toRef, watch } from 'vue';\nimport { consoleWarn, propsFactory } from \"../util/index.js\"; // Types\n\nexport var FormKey = Symbol.for('vuetify:form');\nexport var makeFormProps = propsFactory({\n  disabled: Boolean,\n  fastFail: Boolean,\n  readonly: Boolean,\n  modelValue: {\n    type: Boolean,\n    default: null\n  },\n  validateOn: {\n    type: String,\n    default: 'input'\n  }\n}, 'form');\nexport function createForm(props) {\n  var model = useProxiedModel(props, 'modelValue');\n  var isDisabled = computed(function () {\n    return props.disabled;\n  });\n  var isReadonly = computed(function () {\n    return props.readonly;\n  });\n  var isValidating = shallowRef(false);\n  var items = ref([]);\n  var errors = ref([]);\n\n  function validate() {\n    return _validate.apply(this, arguments);\n  }\n\n  function _validate() {\n    _validate = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var results, valid, _iterator2, _step2, item, itemErrorMessages;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              results = [];\n              valid = true;\n              errors.value = [];\n              isValidating.value = true;\n              _iterator2 = _createForOfIteratorHelper(items.value);\n              _context.prev = 5;\n\n              _iterator2.s();\n\n            case 7:\n              if ((_step2 = _iterator2.n()).done) {\n                _context.next = 17;\n                break;\n              }\n\n              item = _step2.value;\n              _context.next = 11;\n              return item.validate();\n\n            case 11:\n              itemErrorMessages = _context.sent;\n\n              if (itemErrorMessages.length > 0) {\n                valid = false;\n                results.push({\n                  id: item.id,\n                  errorMessages: itemErrorMessages\n                });\n              }\n\n              if (!(!valid && props.fastFail)) {\n                _context.next = 15;\n                break;\n              }\n\n              return _context.abrupt(\"break\", 17);\n\n            case 15:\n              _context.next = 7;\n              break;\n\n            case 17:\n              _context.next = 22;\n              break;\n\n            case 19:\n              _context.prev = 19;\n              _context.t0 = _context[\"catch\"](5);\n\n              _iterator2.e(_context.t0);\n\n            case 22:\n              _context.prev = 22;\n\n              _iterator2.f();\n\n              return _context.finish(22);\n\n            case 25:\n              errors.value = results;\n              isValidating.value = false;\n              return _context.abrupt(\"return\", {\n                valid: valid,\n                errors: errors.value\n              });\n\n            case 28:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[5, 19, 22, 25]]);\n    }));\n    return _validate.apply(this, arguments);\n  }\n\n  function reset() {\n    items.value.forEach(function (item) {\n      return item.reset();\n    });\n  }\n\n  function resetValidation() {\n    items.value.forEach(function (item) {\n      return item.resetValidation();\n    });\n  }\n\n  watch(items, function () {\n    var valid = 0;\n    var invalid = 0;\n    var results = [];\n\n    var _iterator = _createForOfIteratorHelper(items.value),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var item = _step.value;\n\n        if (item.isValid === false) {\n          invalid++;\n          results.push({\n            id: item.id,\n            errorMessages: item.errorMessages\n          });\n        } else if (item.isValid === true) valid++;\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    errors.value = results;\n    model.value = invalid > 0 ? false : valid === items.value.length ? true : null;\n  }, {\n    deep: true,\n    flush: 'post'\n  });\n  provide(FormKey, {\n    register: function register(_ref) {\n      var id = _ref.id,\n          vm = _ref.vm,\n          validate = _ref.validate,\n          reset = _ref.reset,\n          resetValidation = _ref.resetValidation;\n\n      if (items.value.some(function (item) {\n        return item.id === id;\n      })) {\n        consoleWarn(\"Duplicate input name \\\"\".concat(id, \"\\\"\"));\n      }\n\n      items.value.push({\n        id: id,\n        validate: validate,\n        reset: reset,\n        resetValidation: resetValidation,\n        vm: markRaw(vm),\n        isValid: null,\n        errorMessages: []\n      });\n    },\n    unregister: function unregister(id) {\n      items.value = items.value.filter(function (item) {\n        return item.id !== id;\n      });\n    },\n    update: function update(id, isValid, errorMessages) {\n      var found = items.value.find(function (item) {\n        return item.id === id;\n      });\n      if (!found) return;\n      found.isValid = isValid;\n      found.errorMessages = errorMessages;\n    },\n    isDisabled: isDisabled,\n    isReadonly: isReadonly,\n    isValidating: isValidating,\n    isValid: model,\n    items: items,\n    validateOn: toRef(props, 'validateOn')\n  });\n  return {\n    errors: errors,\n    isDisabled: isDisabled,\n    isReadonly: isReadonly,\n    isValidating: isValidating,\n    isValid: model,\n    items: items,\n    validate: validate,\n    reset: reset,\n    resetValidation: resetValidation\n  };\n}\nexport function useForm(props) {\n  var form = inject(FormKey, null);\n  return _objectSpread(_objectSpread({}, form), {}, {\n    isReadonly: computed(function () {\n      var _props$readonly;\n\n      return !!((_props$readonly = props === null || props === void 0 ? void 0 : props.readonly) !== null && _props$readonly !== void 0 ? _props$readonly : form === null || form === void 0 ? void 0 : form.isReadonly.value);\n    }),\n    isDisabled: computed(function () {\n      var _props$disabled;\n\n      return !!((_props$disabled = props === null || props === void 0 ? void 0 : props.disabled) !== null && _props$disabled !== void 0 ? _props$disabled : form === null || form === void 0 ? void 0 : form.isDisabled.value);\n    })\n  });\n}","map":{"version":3,"mappings":"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","names":["useProxiedModel","computed","inject","markRaw","provide","ref","shallowRef","toRef","watch","consoleWarn","propsFactory","FormKey","Symbol","for","makeFormProps","disabled","Boolean","fastFail","readonly","modelValue","type","default","validateOn","String","createForm","props","model","isDisabled","isReadonly","isValidating","items","errors","validate","results","valid","value","item","itemErrorMessages","length","push","id","errorMessages","reset","forEach","resetValidation","invalid","isValid","deep","flush","register","_ref","vm","some","unregister","filter","update","found","find","useForm","form"],"sources":["../../src/composables/form.ts"],"sourcesContent":["// Composables\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed, inject, markRaw, provide, ref, shallowRef, toRef, watch } from 'vue'\nimport { consoleWarn, propsFactory } from '@/util'\n\n// Types\nimport type { ComponentInternalInstance, ComputedRef, InjectionKey, PropType, Raw, Ref } from 'vue'\nimport type { ValidationProps } from './validation'\nimport type { EventProp } from '@/util'\n\nexport interface FormProvide {\n  register: (item: {\n    id: number | string\n    vm: ComponentInternalInstance\n    validate: () => Promise<string[]>\n    reset: () => Promise<void>\n    resetValidation: () => Promise<void>\n  }) => void\n  unregister: (id: number | string) => void\n  update: (id: number | string, isValid: boolean | null, errorMessages: string[]) => void\n  items: Ref<FormField[]>\n  isDisabled: ComputedRef<boolean>\n  isReadonly: ComputedRef<boolean>\n  isValidating: Ref<boolean>\n  isValid: Ref<boolean | null>\n  validateOn: Ref<FormProps['validateOn']>\n}\n\nexport interface FormField {\n  id: number | string\n  validate: () => Promise<string[]>\n  reset: () => Promise<void>\n  resetValidation: () => Promise<void>\n  vm: Raw<ComponentInternalInstance>\n  isValid: boolean | null\n  errorMessages: string[]\n}\n\nexport interface FieldValidationResult {\n  id: number | string\n  errorMessages: string[]\n}\n\nexport interface FormValidationResult {\n  valid: boolean\n  errors: FieldValidationResult[]\n}\n\nexport interface SubmitEventPromise extends SubmitEvent, Promise<FormValidationResult> {}\n\nexport const FormKey: InjectionKey<FormProvide> = Symbol.for('vuetify:form')\n\nexport interface FormProps {\n  disabled: boolean\n  fastFail: boolean\n  readonly: boolean\n  modelValue: boolean | null\n  'onUpdate:modelValue': EventProp<[boolean | null]> | undefined\n  validateOn: ValidationProps['validateOn']\n}\n\nexport const makeFormProps = propsFactory({\n  disabled: Boolean,\n  fastFail: Boolean,\n  readonly: Boolean,\n  modelValue: {\n    type: Boolean as PropType<boolean | null>,\n    default: null,\n  },\n  validateOn: {\n    type: String as PropType<FormProps['validateOn']>,\n    default: 'input',\n  },\n}, 'form')\n\nexport function createForm (props: FormProps) {\n  const model = useProxiedModel(props, 'modelValue')\n\n  const isDisabled = computed(() => props.disabled)\n  const isReadonly = computed(() => props.readonly)\n  const isValidating = shallowRef(false)\n  const items = ref<FormField[]>([])\n  const errors = ref<FieldValidationResult[]>([])\n\n  async function validate () {\n    const results = []\n    let valid = true\n\n    errors.value = []\n    isValidating.value = true\n\n    for (const item of items.value) {\n      const itemErrorMessages = await item.validate()\n\n      if (itemErrorMessages.length > 0) {\n        valid = false\n\n        results.push({\n          id: item.id,\n          errorMessages: itemErrorMessages,\n        })\n      }\n\n      if (!valid && props.fastFail) break\n    }\n\n    errors.value = results\n    isValidating.value = false\n\n    return { valid, errors: errors.value }\n  }\n\n  function reset () {\n    items.value.forEach(item => item.reset())\n  }\n\n  function resetValidation () {\n    items.value.forEach(item => item.resetValidation())\n  }\n\n  watch(items, () => {\n    let valid = 0\n    let invalid = 0\n    const results = []\n\n    for (const item of items.value) {\n      if (item.isValid === false) {\n        invalid++\n        results.push({\n          id: item.id,\n          errorMessages: item.errorMessages,\n        })\n      } else if (item.isValid === true) valid++\n    }\n\n    errors.value = results\n    model.value =\n      invalid > 0 ? false\n      : valid === items.value.length ? true\n      : null\n  }, { deep: true, flush: 'post' })\n\n  provide(FormKey, {\n    register: ({ id, vm, validate, reset, resetValidation }) => {\n      if (items.value.some(item => item.id === id)) {\n        consoleWarn(`Duplicate input name \"${id}\"`)\n      }\n\n      items.value.push({\n        id,\n        validate,\n        reset,\n        resetValidation,\n        vm: markRaw(vm),\n        isValid: null,\n        errorMessages: [],\n      })\n    },\n    unregister: id => {\n      items.value = items.value.filter(item => {\n        return item.id !== id\n      })\n    },\n    update: (id, isValid, errorMessages) => {\n      const found = items.value.find(item => item.id === id)\n\n      if (!found) return\n\n      found.isValid = isValid\n      found.errorMessages = errorMessages\n    },\n    isDisabled,\n    isReadonly,\n    isValidating,\n    isValid: model,\n    items,\n    validateOn: toRef(props, 'validateOn'),\n  })\n\n  return {\n    errors,\n    isDisabled,\n    isReadonly,\n    isValidating,\n    isValid: model,\n    items,\n    validate,\n    reset,\n    resetValidation,\n  }\n}\n\nexport function useForm (props?: { readonly: boolean | null, disabled: boolean | null }) {\n  const form = inject(FormKey, null)\n  return {\n    ...form,\n    isReadonly: computed(() => !!(props?.readonly ?? form?.isReadonly.value)),\n    isDisabled: computed(() => !!(props?.disabled ?? form?.isDisabled.value)),\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
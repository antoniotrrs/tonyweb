{"ast":null,"code":"import \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/web.dom-exception.constructor.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nimport \"core-js/modules/web.dom-exception.to-string-tag.js\";\nimport \"core-js/modules/web.structured-clone.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport { Fragment as _Fragment, mergeProps as _mergeProps, createVNode as _createVNode } from \"vue\"; // Components\n\nimport { VBtn } from \"../VBtn/index.js\"; // Composables\n\nimport { useLocale } from \"../../composables/index.js\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.js\"; // Utilities\n\nimport { computed, ref, toRaw, watchEffect } from 'vue';\nimport { deepEqual, genericComponent, propsFactory, useRender } from \"../../util/index.js\"; // Types\n\nexport var makeVConfirmEditProps = propsFactory({\n  modelValue: null,\n  color: String,\n  cancelText: {\n    type: String,\n    default: '$vuetify.confirmEdit.cancel'\n  },\n  okText: {\n    type: String,\n    default: '$vuetify.confirmEdit.ok'\n  },\n  disabled: {\n    type: [Boolean, Array],\n    default: undefined\n  },\n  hideActions: Boolean\n}, 'VConfirmEdit');\nexport var VConfirmEdit = genericComponent()({\n  name: 'VConfirmEdit',\n  props: makeVConfirmEditProps(),\n  emits: {\n    cancel: function cancel() {\n      return true;\n    },\n    save: function save(value) {\n      return true;\n    },\n    'update:modelValue': function updateModelValue(value) {\n      return true;\n    }\n  },\n  setup: function setup(props, _ref) {\n    var emit = _ref.emit,\n        slots = _ref.slots;\n    var model = useProxiedModel(props, 'modelValue');\n    var internalModel = ref();\n    watchEffect(function () {\n      internalModel.value = structuredClone(toRaw(model.value));\n    });\n\n    var _useLocale = useLocale(),\n        t = _useLocale.t;\n\n    var isPristine = computed(function () {\n      return deepEqual(model.value, internalModel.value);\n    });\n\n    function isActionDisabled(action) {\n      if (typeof props.disabled === 'boolean') {\n        return props.disabled;\n      }\n\n      if (Array.isArray(props.disabled)) {\n        return props.disabled.includes(action);\n      }\n\n      return isPristine.value;\n    }\n\n    var isSaveDisabled = computed(function () {\n      return isActionDisabled('save');\n    });\n    var isCancelDisabled = computed(function () {\n      return isActionDisabled('cancel');\n    });\n\n    function save() {\n      model.value = internalModel.value;\n      emit('save', internalModel.value);\n    }\n\n    function cancel() {\n      internalModel.value = structuredClone(toRaw(model.value));\n      emit('cancel');\n    }\n\n    function actions(actionsProps) {\n      return _createVNode(_Fragment, null, [_createVNode(VBtn, _mergeProps({\n        \"disabled\": isCancelDisabled.value,\n        \"variant\": \"text\",\n        \"color\": props.color,\n        \"onClick\": cancel,\n        \"text\": t(props.cancelText)\n      }, actionsProps), null), _createVNode(VBtn, _mergeProps({\n        \"disabled\": isSaveDisabled.value,\n        \"variant\": \"text\",\n        \"color\": props.color,\n        \"onClick\": save,\n        \"text\": t(props.okText)\n      }, actionsProps), null)]);\n    }\n\n    var actionsUsed = false;\n    useRender(function () {\n      var _slots$default;\n\n      return _createVNode(_Fragment, null, [(_slots$default = slots.default) === null || _slots$default === void 0 ? void 0 : _slots$default.call(slots, {\n        model: internalModel,\n        save: save,\n        cancel: cancel,\n        isPristine: isPristine.value,\n\n        get actions() {\n          actionsUsed = true;\n          return actions;\n        }\n\n      }), !props.hideActions && !actionsUsed && actions()]);\n    });\n    return {\n      save: save,\n      cancel: cancel,\n      isPristine: isPristine\n    };\n  }\n});","map":{"version":3,"mappings":"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","names":["VBtn","useLocale","useProxiedModel","computed","ref","toRaw","watchEffect","deepEqual","genericComponent","propsFactory","useRender","makeVConfirmEditProps","modelValue","color","String","cancelText","type","default","okText","disabled","Boolean","Array","undefined","hideActions","VConfirmEdit","name","props","emits","cancel","save","value","setup","_ref","emit","slots","model","internalModel","structuredClone","t","isPristine","isActionDisabled","action","isArray","includes","isSaveDisabled","isCancelDisabled","actions","actionsProps","_createVNode","actionsUsed"],"sources":["../../../src/components/VConfirmEdit/VConfirmEdit.tsx"],"sourcesContent":["// Components\nimport { VBtn } from '@/components/VBtn'\n\n// Composables\nimport { useLocale } from '@/composables'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed, ref, toRaw, watchEffect } from 'vue'\nimport { deepEqual, genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType, Ref, VNode } from 'vue'\nimport type { GenericProps } from '@/util'\n\nexport type VConfirmEditSlots<T> = {\n  default: {\n    model: Ref<T>\n    save: () => void\n    cancel: () => void\n    isPristine: boolean\n    get actions (): (props?: {}) => VNode\n  }\n}\n\nexport const makeVConfirmEditProps = propsFactory({\n  modelValue: null,\n  color: String,\n  cancelText: {\n    type: String,\n    default: '$vuetify.confirmEdit.cancel',\n  },\n  okText: {\n    type: String,\n    default: '$vuetify.confirmEdit.ok',\n  },\n  disabled: {\n    type: [Boolean, Array] as PropType<boolean | ('save' | 'cancel')[]>,\n    default: undefined,\n  },\n  hideActions: Boolean,\n}, 'VConfirmEdit')\n\nexport const VConfirmEdit = genericComponent<new <T> (\n  props: {\n    modelValue?: T\n    'onUpdate:modelValue'?: (value: T) => void\n    'onSave'?: (value: T) => void\n  },\n  slots: VConfirmEditSlots<T>\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VConfirmEdit',\n\n  props: makeVConfirmEditProps(),\n\n  emits: {\n    cancel: () => true,\n    save: (value: any) => true,\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { emit, slots }) {\n    const model = useProxiedModel(props, 'modelValue')\n    const internalModel = ref()\n    watchEffect(() => {\n      internalModel.value = structuredClone(toRaw(model.value))\n    })\n\n    const { t } = useLocale()\n\n    const isPristine = computed(() => {\n      return deepEqual(model.value, internalModel.value)\n    })\n\n    function isActionDisabled (action: 'save' | 'cancel') {\n      if (typeof props.disabled === 'boolean') {\n        return props.disabled\n      }\n\n      if (Array.isArray(props.disabled)) {\n        return props.disabled.includes(action)\n      }\n\n      return isPristine.value\n    }\n\n    const isSaveDisabled = computed(() => isActionDisabled('save'))\n    const isCancelDisabled = computed(() => isActionDisabled('cancel'))\n\n    function save () {\n      model.value = internalModel.value\n      emit('save', internalModel.value)\n    }\n\n    function cancel () {\n      internalModel.value = structuredClone(toRaw(model.value))\n      emit('cancel')\n    }\n\n    function actions (actionsProps?: {}) {\n      return (\n        <>\n          <VBtn\n            disabled={ isCancelDisabled.value }\n            variant=\"text\"\n            color={ props.color }\n            onClick={ cancel }\n            text={ t(props.cancelText) }\n            { ...actionsProps }\n          />\n\n          <VBtn\n            disabled={ isSaveDisabled.value }\n            variant=\"text\"\n            color={ props.color }\n            onClick={ save }\n            text={ t(props.okText) }\n            { ...actionsProps }\n          />\n        </>\n      )\n    }\n\n    let actionsUsed = false\n    useRender(() => {\n      return (\n        <>\n          {\n            slots.default?.({\n              model: internalModel,\n              save,\n              cancel,\n              isPristine: isPristine.value,\n              get actions () {\n                actionsUsed = true\n                return actions\n              },\n            })\n          }\n\n          { !props.hideActions && !actionsUsed && actions() }\n        </>\n      )\n    })\n\n    return {\n      save,\n      cancel,\n      isPristine,\n    }\n  },\n})\n\nexport type VConfirmEdit = InstanceType<typeof VConfirmEdit>\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from \"/Users/antoniotorres/Documents/tony/tonyweb/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport { createVNode as _createVNode } from \"vue\"; // Styles\n\nimport \"./VProgressCircular.css\"; // Composables\n\nimport { useTextColor } from \"../../composables/color.js\";\nimport { makeComponentProps } from \"../../composables/component.js\";\nimport { useIntersectionObserver } from \"../../composables/intersectionObserver.js\";\nimport { useResizeObserver } from \"../../composables/resizeObserver.js\";\nimport { makeSizeProps, useSize } from \"../../composables/size.js\";\nimport { makeTagProps } from \"../../composables/tag.js\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.js\"; // Utilities\n\nimport { computed, ref, toRef, watchEffect } from 'vue';\nimport { convertToUnit, genericComponent, propsFactory, useRender } from \"../../util/index.js\"; // Types\n\nexport var makeVProgressCircularProps = propsFactory(_objectSpread(_objectSpread(_objectSpread(_objectSpread({\n  bgColor: String,\n  color: String,\n  indeterminate: [Boolean, String],\n  modelValue: {\n    type: [Number, String],\n    default: 0\n  },\n  rotate: {\n    type: [Number, String],\n    default: 0\n  },\n  width: {\n    type: [Number, String],\n    default: 4\n  }\n}, makeComponentProps()), makeSizeProps()), makeTagProps({\n  tag: 'div'\n})), makeThemeProps()), 'VProgressCircular');\nexport var VProgressCircular = genericComponent()({\n  name: 'VProgressCircular',\n  props: makeVProgressCircularProps(),\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n    var MAGIC_RADIUS_CONSTANT = 20;\n    var CIRCUMFERENCE = 2 * Math.PI * MAGIC_RADIUS_CONSTANT;\n    var root = ref();\n\n    var _provideTheme = provideTheme(props),\n        themeClasses = _provideTheme.themeClasses;\n\n    var _useSize = useSize(props),\n        sizeClasses = _useSize.sizeClasses,\n        sizeStyles = _useSize.sizeStyles;\n\n    var _useTextColor = useTextColor(toRef(props, 'color')),\n        textColorClasses = _useTextColor.textColorClasses,\n        textColorStyles = _useTextColor.textColorStyles;\n\n    var _useTextColor2 = useTextColor(toRef(props, 'bgColor')),\n        underlayColorClasses = _useTextColor2.textColorClasses,\n        underlayColorStyles = _useTextColor2.textColorStyles;\n\n    var _useIntersectionObser = useIntersectionObserver(),\n        intersectionRef = _useIntersectionObser.intersectionRef,\n        isIntersecting = _useIntersectionObser.isIntersecting;\n\n    var _useResizeObserver = useResizeObserver(),\n        resizeRef = _useResizeObserver.resizeRef,\n        contentRect = _useResizeObserver.contentRect;\n\n    var normalizedValue = computed(function () {\n      return Math.max(0, Math.min(100, parseFloat(props.modelValue)));\n    });\n    var width = computed(function () {\n      return Number(props.width);\n    });\n    var size = computed(function () {\n      // Get size from element if size prop value is small, large etc\n      return sizeStyles.value ? Number(props.size) : contentRect.value ? contentRect.value.width : Math.max(width.value, 32);\n    });\n    var diameter = computed(function () {\n      return MAGIC_RADIUS_CONSTANT / (1 - width.value / size.value) * 2;\n    });\n    var strokeWidth = computed(function () {\n      return width.value / size.value * diameter.value;\n    });\n    var strokeDashOffset = computed(function () {\n      return convertToUnit((100 - normalizedValue.value) / 100 * CIRCUMFERENCE);\n    });\n    watchEffect(function () {\n      intersectionRef.value = root.value;\n      resizeRef.value = root.value;\n    });\n    useRender(function () {\n      return _createVNode(props.tag, {\n        \"ref\": root,\n        \"class\": ['v-progress-circular', {\n          'v-progress-circular--indeterminate': !!props.indeterminate,\n          'v-progress-circular--visible': isIntersecting.value,\n          'v-progress-circular--disable-shrink': props.indeterminate === 'disable-shrink'\n        }, themeClasses.value, sizeClasses.value, textColorClasses.value, props.class],\n        \"style\": [sizeStyles.value, textColorStyles.value, props.style],\n        \"role\": \"progressbar\",\n        \"aria-valuemin\": \"0\",\n        \"aria-valuemax\": \"100\",\n        \"aria-valuenow\": props.indeterminate ? undefined : normalizedValue.value\n      }, {\n        default: function _default() {\n          return [_createVNode(\"svg\", {\n            \"style\": {\n              transform: \"rotate(calc(-90deg + \".concat(Number(props.rotate), \"deg))\")\n            },\n            \"xmlns\": \"http://www.w3.org/2000/svg\",\n            \"viewBox\": \"0 0 \".concat(diameter.value, \" \").concat(diameter.value)\n          }, [_createVNode(\"circle\", {\n            \"class\": ['v-progress-circular__underlay', underlayColorClasses.value],\n            \"style\": underlayColorStyles.value,\n            \"fill\": \"transparent\",\n            \"cx\": \"50%\",\n            \"cy\": \"50%\",\n            \"r\": MAGIC_RADIUS_CONSTANT,\n            \"stroke-width\": strokeWidth.value,\n            \"stroke-dasharray\": CIRCUMFERENCE,\n            \"stroke-dashoffset\": 0\n          }, null), _createVNode(\"circle\", {\n            \"class\": \"v-progress-circular__overlay\",\n            \"fill\": \"transparent\",\n            \"cx\": \"50%\",\n            \"cy\": \"50%\",\n            \"r\": MAGIC_RADIUS_CONSTANT,\n            \"stroke-width\": strokeWidth.value,\n            \"stroke-dasharray\": CIRCUMFERENCE,\n            \"stroke-dashoffset\": strokeDashOffset.value\n          }, null)]), slots.default && _createVNode(\"div\", {\n            \"class\": \"v-progress-circular__content\"\n          }, [slots.default({\n            value: normalizedValue.value\n          })])];\n        }\n      });\n    });\n    return {};\n  }\n});","map":{"version":3,"mappings":"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","names":["useTextColor","makeComponentProps","useIntersectionObserver","useResizeObserver","makeSizeProps","useSize","makeTagProps","makeThemeProps","provideTheme","computed","ref","toRef","watchEffect","convertToUnit","genericComponent","propsFactory","useRender","makeVProgressCircularProps","bgColor","String","color","indeterminate","Boolean","modelValue","type","Number","default","rotate","width","tag","VProgressCircular","name","props","setup","_ref","slots","MAGIC_RADIUS_CONSTANT","CIRCUMFERENCE","Math","PI","root","themeClasses","sizeClasses","sizeStyles","textColorClasses","textColorStyles","underlayColorClasses","underlayColorStyles","intersectionRef","isIntersecting","resizeRef","contentRect","normalizedValue","max","min","parseFloat","size","value","diameter","strokeWidth","strokeDashOffset","class","style","undefined","transform","_createVNode"],"sources":["../../../src/components/VProgressCircular/VProgressCircular.tsx"],"sourcesContent":["// Styles\nimport './VProgressCircular.sass'\n\n// Composables\nimport { useTextColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { useIntersectionObserver } from '@/composables/intersectionObserver'\nimport { useResizeObserver } from '@/composables/resizeObserver'\nimport { makeSizeProps, useSize } from '@/composables/size'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\n\n// Utilities\nimport { computed, ref, toRef, watchEffect } from 'vue'\nimport { convertToUnit, genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\nexport const makeVProgressCircularProps = propsFactory({\n  bgColor: String,\n  color: String,\n  indeterminate: [Boolean, String] as PropType<boolean | 'disable-shrink'>,\n  modelValue: {\n    type: [Number, String],\n    default: 0,\n  },\n  rotate: {\n    type: [Number, String],\n    default: 0,\n  },\n  width: {\n    type: [Number, String],\n    default: 4,\n  },\n\n  ...makeComponentProps(),\n  ...makeSizeProps(),\n  ...makeTagProps({ tag: 'div' }),\n  ...makeThemeProps(),\n}, 'VProgressCircular')\n\ntype VProgressCircularSlots = {\n  default: { value: number }\n}\n\nexport const VProgressCircular = genericComponent<VProgressCircularSlots>()({\n  name: 'VProgressCircular',\n\n  props: makeVProgressCircularProps(),\n\n  setup (props, { slots }) {\n    const MAGIC_RADIUS_CONSTANT = 20\n    const CIRCUMFERENCE = 2 * Math.PI * MAGIC_RADIUS_CONSTANT\n\n    const root = ref<HTMLElement>()\n\n    const { themeClasses } = provideTheme(props)\n    const { sizeClasses, sizeStyles } = useSize(props)\n    const { textColorClasses, textColorStyles } = useTextColor(toRef(props, 'color'))\n    const { textColorClasses: underlayColorClasses, textColorStyles: underlayColorStyles } = useTextColor(toRef(props, 'bgColor'))\n    const { intersectionRef, isIntersecting } = useIntersectionObserver()\n    const { resizeRef, contentRect } = useResizeObserver()\n\n    const normalizedValue = computed(() => Math.max(0, Math.min(100, parseFloat(props.modelValue))))\n    const width = computed(() => Number(props.width))\n    const size = computed(() => {\n      // Get size from element if size prop value is small, large etc\n      return sizeStyles.value\n        ? Number(props.size)\n        : contentRect.value\n          ? contentRect.value.width\n          : Math.max(width.value, 32)\n    })\n    const diameter = computed(() => (MAGIC_RADIUS_CONSTANT / (1 - width.value / size.value)) * 2)\n    const strokeWidth = computed(() => width.value / size.value * diameter.value)\n    const strokeDashOffset = computed(() => convertToUnit(((100 - normalizedValue.value) / 100) * CIRCUMFERENCE))\n\n    watchEffect(() => {\n      intersectionRef.value = root.value\n      resizeRef.value = root.value\n    })\n\n    useRender(() => (\n      <props.tag\n        ref={ root }\n        class={[\n          'v-progress-circular',\n          {\n            'v-progress-circular--indeterminate': !!props.indeterminate,\n            'v-progress-circular--visible': isIntersecting.value,\n            'v-progress-circular--disable-shrink': props.indeterminate === 'disable-shrink',\n          },\n          themeClasses.value,\n          sizeClasses.value,\n          textColorClasses.value,\n          props.class,\n        ]}\n        style={[\n          sizeStyles.value,\n          textColorStyles.value,\n          props.style,\n        ]}\n        role=\"progressbar\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\"\n        aria-valuenow={ props.indeterminate ? undefined : normalizedValue.value }\n      >\n        <svg\n          style={{\n            transform: `rotate(calc(-90deg + ${Number(props.rotate)}deg))`,\n          }}\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox={ `0 0 ${diameter.value} ${diameter.value}` }\n        >\n          <circle\n            class={[\n              'v-progress-circular__underlay',\n              underlayColorClasses.value,\n            ]}\n            style={ underlayColorStyles.value }\n            fill=\"transparent\"\n            cx=\"50%\"\n            cy=\"50%\"\n            r={ MAGIC_RADIUS_CONSTANT }\n            stroke-width={ strokeWidth.value }\n            stroke-dasharray={ CIRCUMFERENCE }\n            stroke-dashoffset={ 0 }\n          />\n\n          <circle\n            class=\"v-progress-circular__overlay\"\n            fill=\"transparent\"\n            cx=\"50%\"\n            cy=\"50%\"\n            r={ MAGIC_RADIUS_CONSTANT }\n            stroke-width={ strokeWidth.value }\n            stroke-dasharray={ CIRCUMFERENCE }\n            stroke-dashoffset={ strokeDashOffset.value }\n          />\n        </svg>\n\n        { slots.default && (\n          <div class=\"v-progress-circular__content\">\n            { slots.default({ value: normalizedValue.value }) }\n          </div>\n        )}\n      </props.tag>\n    ))\n\n    return {}\n  },\n})\n\nexport type VProgressCircular = InstanceType<typeof VProgressCircular>\n"]},"metadata":{},"sourceType":"module"}
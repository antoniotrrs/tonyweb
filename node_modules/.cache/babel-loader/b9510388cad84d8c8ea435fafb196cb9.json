{"ast":null,"code":"import _slicedToArray from \"/Users/antoniotorres/Documents/tony/tonyweb/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectSpread from \"/Users/antoniotorres/Documents/tony/tonyweb/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { Fragment as _Fragment, createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\"; // Styles\n\nimport \"../VSlider/VSlider.css\"; // Components\n\nimport { makeVInputProps, VInput } from \"../VInput/VInput.js\";\nimport { VLabel } from \"../VLabel/index.js\";\nimport { getOffset, makeSliderProps, useSlider, useSteps } from \"../VSlider/slider.js\";\nimport { VSliderThumb } from \"../VSlider/VSliderThumb.js\";\nimport { VSliderTrack } from \"../VSlider/VSliderTrack.js\"; // Composables\n\nimport { makeFocusProps, useFocus } from \"../../composables/focus.js\";\nimport { useRtl } from \"../../composables/locale.js\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.js\"; // Utilities\n\nimport { computed, ref } from 'vue';\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.js\"; // Types\n\nexport var makeVRangeSliderProps = propsFactory(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, makeFocusProps()), makeVInputProps()), makeSliderProps()), {}, {\n  strict: Boolean,\n  modelValue: {\n    type: Array,\n    default: function _default() {\n      return [0, 0];\n    }\n  }\n}), 'VRangeSlider');\nexport var VRangeSlider = genericComponent()({\n  name: 'VRangeSlider',\n  props: makeVRangeSliderProps(),\n  emits: {\n    'update:focused': function updateFocused(value) {\n      return true;\n    },\n    'update:modelValue': function updateModelValue(value) {\n      return true;\n    },\n    end: function end(value) {\n      return true;\n    },\n    start: function start(value) {\n      return true;\n    }\n  },\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots,\n        emit = _ref.emit;\n    var startThumbRef = ref();\n    var stopThumbRef = ref();\n    var inputRef = ref();\n\n    var _useRtl = useRtl(),\n        rtlClasses = _useRtl.rtlClasses;\n\n    function getActiveThumb(e) {\n      if (!startThumbRef.value || !stopThumbRef.value) return;\n      var startOffset = getOffset(e, startThumbRef.value.$el, props.direction);\n      var stopOffset = getOffset(e, stopThumbRef.value.$el, props.direction);\n      var a = Math.abs(startOffset);\n      var b = Math.abs(stopOffset);\n      return a < b || a === b && startOffset < 0 ? startThumbRef.value.$el : stopThumbRef.value.$el;\n    }\n\n    var steps = useSteps(props);\n    var model = useProxiedModel(props, 'modelValue', undefined, function (arr) {\n      if (!(arr !== null && arr !== void 0 && arr.length)) return [0, 0];\n      return arr.map(function (value) {\n        return steps.roundValue(value);\n      });\n    });\n\n    var _useSlider = useSlider({\n      props: props,\n      steps: steps,\n      onSliderStart: function onSliderStart() {\n        emit('start', model.value);\n      },\n      onSliderEnd: function onSliderEnd(_ref2) {\n        var _startThumbRef$value;\n\n        var value = _ref2.value;\n        var newValue = activeThumbRef.value === ((_startThumbRef$value = startThumbRef.value) === null || _startThumbRef$value === void 0 ? void 0 : _startThumbRef$value.$el) ? [value, model.value[1]] : [model.value[0], value];\n\n        if (!props.strict && newValue[0] < newValue[1]) {\n          model.value = newValue;\n        }\n\n        emit('end', model.value);\n      },\n      onSliderMove: function onSliderMove(_ref3) {\n        var _startThumbRef$value3;\n\n        var value = _ref3.value;\n\n        var _model$value = _slicedToArray(model.value, 2),\n            start = _model$value[0],\n            stop = _model$value[1];\n\n        if (!props.strict && start === stop && start !== min.value) {\n          var _stopThumbRef$value, _startThumbRef$value2, _activeThumbRef$value;\n\n          activeThumbRef.value = value > start ? (_stopThumbRef$value = stopThumbRef.value) === null || _stopThumbRef$value === void 0 ? void 0 : _stopThumbRef$value.$el : (_startThumbRef$value2 = startThumbRef.value) === null || _startThumbRef$value2 === void 0 ? void 0 : _startThumbRef$value2.$el;\n          (_activeThumbRef$value = activeThumbRef.value) === null || _activeThumbRef$value === void 0 ? void 0 : _activeThumbRef$value.focus();\n        }\n\n        if (activeThumbRef.value === ((_startThumbRef$value3 = startThumbRef.value) === null || _startThumbRef$value3 === void 0 ? void 0 : _startThumbRef$value3.$el)) {\n          model.value = [Math.min(value, stop), stop];\n        } else {\n          model.value = [start, Math.max(start, value)];\n        }\n      },\n      getActiveThumb: getActiveThumb\n    }),\n        activeThumbRef = _useSlider.activeThumbRef,\n        hasLabels = _useSlider.hasLabels,\n        max = _useSlider.max,\n        min = _useSlider.min,\n        mousePressed = _useSlider.mousePressed,\n        onSliderMousedown = _useSlider.onSliderMousedown,\n        onSliderTouchstart = _useSlider.onSliderTouchstart,\n        position = _useSlider.position,\n        trackContainerRef = _useSlider.trackContainerRef,\n        readonly = _useSlider.readonly;\n\n    var _useFocus = useFocus(props),\n        isFocused = _useFocus.isFocused,\n        focus = _useFocus.focus,\n        blur = _useFocus.blur;\n\n    var trackStart = computed(function () {\n      return position(model.value[0]);\n    });\n    var trackStop = computed(function () {\n      return position(model.value[1]);\n    });\n    useRender(function () {\n      var inputProps = VInput.filterProps(props);\n      var hasPrepend = !!(props.label || slots.label || slots.prepend);\n      return _createVNode(VInput, _mergeProps({\n        \"class\": ['v-slider', 'v-range-slider', {\n          'v-slider--has-labels': !!slots['tick-label'] || hasLabels.value,\n          'v-slider--focused': isFocused.value,\n          'v-slider--pressed': mousePressed.value,\n          'v-slider--disabled': props.disabled\n        }, rtlClasses.value, props.class],\n        \"style\": props.style,\n        \"ref\": inputRef\n      }, inputProps, {\n        \"focused\": isFocused.value\n      }), _objectSpread(_objectSpread({}, slots), {}, {\n        prepend: hasPrepend ? function (slotProps) {\n          var _slots$label, _slots$label2, _slots$prepend;\n\n          return _createVNode(_Fragment, null, [(_slots$label = (_slots$label2 = slots.label) === null || _slots$label2 === void 0 ? void 0 : _slots$label2.call(slots, slotProps)) !== null && _slots$label !== void 0 ? _slots$label : props.label ? _createVNode(VLabel, {\n            \"class\": \"v-slider__label\",\n            \"text\": props.label\n          }, null) : undefined, (_slots$prepend = slots.prepend) === null || _slots$prepend === void 0 ? void 0 : _slots$prepend.call(slots, slotProps)]);\n        } : undefined,\n        default: function _default(_ref4) {\n          var _startThumbRef$value4, _stopThumbRef$value4;\n\n          var id = _ref4.id,\n              messagesId = _ref4.messagesId;\n          return _createVNode(\"div\", {\n            \"class\": \"v-slider__container\",\n            \"onMousedown\": !readonly.value ? onSliderMousedown : undefined,\n            \"onTouchstartPassive\": !readonly.value ? onSliderTouchstart : undefined\n          }, [_createVNode(\"input\", {\n            \"id\": \"\".concat(id.value, \"_start\"),\n            \"name\": props.name || id.value,\n            \"disabled\": !!props.disabled,\n            \"readonly\": !!props.readonly,\n            \"tabindex\": \"-1\",\n            \"value\": model.value[0]\n          }, null), _createVNode(\"input\", {\n            \"id\": \"\".concat(id.value, \"_stop\"),\n            \"name\": props.name || id.value,\n            \"disabled\": !!props.disabled,\n            \"readonly\": !!props.readonly,\n            \"tabindex\": \"-1\",\n            \"value\": model.value[1]\n          }, null), _createVNode(VSliderTrack, {\n            \"ref\": trackContainerRef,\n            \"start\": trackStart.value,\n            \"stop\": trackStop.value\n          }, {\n            'tick-label': slots['tick-label']\n          }), _createVNode(VSliderThumb, {\n            \"ref\": startThumbRef,\n            \"aria-describedby\": messagesId.value,\n            \"focused\": isFocused && activeThumbRef.value === ((_startThumbRef$value4 = startThumbRef.value) === null || _startThumbRef$value4 === void 0 ? void 0 : _startThumbRef$value4.$el),\n            \"modelValue\": model.value[0],\n            \"onUpdate:modelValue\": function onUpdateModelValue(v) {\n              return model.value = [v, model.value[1]];\n            },\n            \"onFocus\": function onFocus(e) {\n              var _startThumbRef$value5, _stopThumbRef$value2;\n\n              focus();\n              activeThumbRef.value = (_startThumbRef$value5 = startThumbRef.value) === null || _startThumbRef$value5 === void 0 ? void 0 : _startThumbRef$value5.$el; // Make sure second thumb is focused if\n              // the thumbs are on top of each other\n              // and they are both at minimum value\n              // but only if focused from outside.\n\n              if (max.value !== min.value && model.value[0] === model.value[1] && model.value[1] === min.value && e.relatedTarget !== ((_stopThumbRef$value2 = stopThumbRef.value) === null || _stopThumbRef$value2 === void 0 ? void 0 : _stopThumbRef$value2.$el)) {\n                var _startThumbRef$value6, _stopThumbRef$value3;\n\n                (_startThumbRef$value6 = startThumbRef.value) === null || _startThumbRef$value6 === void 0 ? void 0 : _startThumbRef$value6.$el.blur();\n                (_stopThumbRef$value3 = stopThumbRef.value) === null || _stopThumbRef$value3 === void 0 ? void 0 : _stopThumbRef$value3.$el.focus();\n              }\n            },\n            \"onBlur\": function onBlur() {\n              blur();\n              activeThumbRef.value = undefined;\n            },\n            \"min\": min.value,\n            \"max\": model.value[1],\n            \"position\": trackStart.value,\n            \"ripple\": props.ripple\n          }, {\n            'thumb-label': slots['thumb-label']\n          }), _createVNode(VSliderThumb, {\n            \"ref\": stopThumbRef,\n            \"aria-describedby\": messagesId.value,\n            \"focused\": isFocused && activeThumbRef.value === ((_stopThumbRef$value4 = stopThumbRef.value) === null || _stopThumbRef$value4 === void 0 ? void 0 : _stopThumbRef$value4.$el),\n            \"modelValue\": model.value[1],\n            \"onUpdate:modelValue\": function onUpdateModelValue(v) {\n              return model.value = [model.value[0], v];\n            },\n            \"onFocus\": function onFocus(e) {\n              var _stopThumbRef$value5, _startThumbRef$value7;\n\n              focus();\n              activeThumbRef.value = (_stopThumbRef$value5 = stopThumbRef.value) === null || _stopThumbRef$value5 === void 0 ? void 0 : _stopThumbRef$value5.$el; // Make sure first thumb is focused if\n              // the thumbs are on top of each other\n              // and they are both at maximum value\n              // but only if focused from outside.\n\n              if (max.value !== min.value && model.value[0] === model.value[1] && model.value[0] === max.value && e.relatedTarget !== ((_startThumbRef$value7 = startThumbRef.value) === null || _startThumbRef$value7 === void 0 ? void 0 : _startThumbRef$value7.$el)) {\n                var _stopThumbRef$value6, _startThumbRef$value8;\n\n                (_stopThumbRef$value6 = stopThumbRef.value) === null || _stopThumbRef$value6 === void 0 ? void 0 : _stopThumbRef$value6.$el.blur();\n                (_startThumbRef$value8 = startThumbRef.value) === null || _startThumbRef$value8 === void 0 ? void 0 : _startThumbRef$value8.$el.focus();\n              }\n            },\n            \"onBlur\": function onBlur() {\n              blur();\n              activeThumbRef.value = undefined;\n            },\n            \"min\": model.value[0],\n            \"max\": max.value,\n            \"position\": trackStop.value,\n            \"ripple\": props.ripple\n          }, {\n            'thumb-label': slots['thumb-label']\n          })]);\n        }\n      }));\n    });\n    return {};\n  }\n});","map":{"version":3,"mappings":"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","names":["makeVInputProps","VInput","VLabel","getOffset","makeSliderProps","useSlider","useSteps","VSliderThumb","VSliderTrack","makeFocusProps","useFocus","useRtl","useProxiedModel","computed","ref","genericComponent","propsFactory","useRender","makeVRangeSliderProps","strict","Boolean","modelValue","type","Array","default","VRangeSlider","name","props","emits","value","end","start","setup","_ref","slots","emit","startThumbRef","stopThumbRef","inputRef","rtlClasses","getActiveThumb","e","startOffset","$el","direction","stopOffset","a","Math","abs","b","steps","model","undefined","arr","length","map","roundValue","onSliderStart","onSliderEnd","_ref2","newValue","activeThumbRef","onSliderMove","_ref3","stop","min","focus","max","hasLabels","mousePressed","onSliderMousedown","onSliderTouchstart","position","trackContainerRef","readonly","isFocused","blur","trackStart","trackStop","inputProps","filterProps","hasPrepend","label","prepend","disabled","class","style","slotProps","_createVNode","_ref4","id","messagesId","v","relatedTarget","onBlur","ripple"],"sources":["../../../src/components/VRangeSlider/VRangeSlider.tsx"],"sourcesContent":["// Styles\nimport '../VSlider/VSlider.sass'\n\n// Components\nimport { makeVInputProps, VInput } from '@/components/VInput/VInput'\nimport { VLabel } from '@/components/VLabel'\nimport { getOffset, makeSliderProps, useSlider, useSteps } from '@/components/VSlider/slider'\nimport { VSliderThumb } from '@/components/VSlider/VSliderThumb'\nimport { VSliderTrack } from '@/components/VSlider/VSliderTrack'\n\n// Composables\nimport { makeFocusProps, useFocus } from '@/composables/focus'\nimport { useRtl } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed, ref } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType, WritableComputedRef } from 'vue'\nimport type { VSliderSlots } from '../VSlider/VSlider'\n\nexport const makeVRangeSliderProps = propsFactory({\n  ...makeFocusProps(),\n  ...makeVInputProps(),\n  ...makeSliderProps(),\n\n  strict: Boolean,\n  modelValue: {\n    type: Array as PropType<readonly (string | number)[]>,\n    default: () => ([0, 0]),\n  },\n}, 'VRangeSlider')\n\nexport const VRangeSlider = genericComponent<VSliderSlots>()({\n  name: 'VRangeSlider',\n\n  props: makeVRangeSliderProps(),\n\n  emits: {\n    'update:focused': (value: boolean) => true,\n    'update:modelValue': (value: [number, number]) => true,\n    end: (value: [number, number]) => true,\n    start: (value: [number, number]) => true,\n  },\n\n  setup (props, { slots, emit }) {\n    const startThumbRef = ref<VSliderThumb>()\n    const stopThumbRef = ref<VSliderThumb>()\n    const inputRef = ref<VInput>()\n    const { rtlClasses } = useRtl()\n\n    function getActiveThumb (e: MouseEvent | TouchEvent) {\n      if (!startThumbRef.value || !stopThumbRef.value) return\n\n      const startOffset = getOffset(e, startThumbRef.value.$el, props.direction)\n      const stopOffset = getOffset(e, stopThumbRef.value.$el, props.direction)\n\n      const a = Math.abs(startOffset)\n      const b = Math.abs(stopOffset)\n\n      return (a < b || (a === b && startOffset < 0)) ? startThumbRef.value.$el : stopThumbRef.value.$el\n    }\n\n    const steps = useSteps(props)\n\n    const model = useProxiedModel(\n      props,\n      'modelValue',\n      undefined,\n      arr => {\n        if (!arr?.length) return [0, 0]\n\n        return arr.map(value => steps.roundValue(value))\n      },\n    ) as WritableComputedRef<[number, number]> & { readonly externalValue: number[] }\n\n    const {\n      activeThumbRef,\n      hasLabels,\n      max,\n      min,\n      mousePressed,\n      onSliderMousedown,\n      onSliderTouchstart,\n      position,\n      trackContainerRef,\n      readonly,\n    } = useSlider({\n      props,\n      steps,\n      onSliderStart: () => {\n        emit('start', model.value)\n      },\n      onSliderEnd: ({ value }) => {\n        const newValue: [number, number] = activeThumbRef.value === startThumbRef.value?.$el\n          ? [value, model.value[1]]\n          : [model.value[0], value]\n\n        if (!props.strict && newValue[0] < newValue[1]) {\n          model.value = newValue\n        }\n\n        emit('end', model.value)\n      },\n      onSliderMove: ({ value }) => {\n        const [start, stop] = model.value\n\n        if (!props.strict && start === stop && start !== min.value) {\n          activeThumbRef.value = value > start ? stopThumbRef.value?.$el : startThumbRef.value?.$el\n          activeThumbRef.value?.focus()\n        }\n\n        if (activeThumbRef.value === startThumbRef.value?.$el) {\n          model.value = [Math.min(value, stop), stop]\n        } else {\n          model.value = [start, Math.max(start, value)]\n        }\n      },\n      getActiveThumb,\n    })\n\n    const { isFocused, focus, blur } = useFocus(props)\n    const trackStart = computed(() => position(model.value[0]))\n    const trackStop = computed(() => position(model.value[1]))\n\n    useRender(() => {\n      const inputProps = VInput.filterProps(props)\n      const hasPrepend = !!(props.label || slots.label || slots.prepend)\n\n      return (\n        <VInput\n          class={[\n            'v-slider',\n            'v-range-slider',\n            {\n              'v-slider--has-labels': !!slots['tick-label'] || hasLabels.value,\n              'v-slider--focused': isFocused.value,\n              'v-slider--pressed': mousePressed.value,\n              'v-slider--disabled': props.disabled,\n            },\n            rtlClasses.value,\n            props.class,\n          ]}\n          style={ props.style }\n          ref={ inputRef }\n          { ...inputProps }\n          focused={ isFocused.value }\n        >\n          {{\n            ...slots,\n            prepend: hasPrepend ? slotProps => (\n              <>\n                { slots.label?.(slotProps) ?? (\n                  props.label\n                    ? (\n                      <VLabel\n                        class=\"v-slider__label\"\n                        text={ props.label }\n                      />\n                    ) : undefined\n                )}\n\n                { slots.prepend?.(slotProps) }\n              </>\n            ) : undefined,\n            default: ({ id, messagesId }) => (\n              <div\n                class=\"v-slider__container\"\n                onMousedown={ !readonly.value ? onSliderMousedown : undefined }\n                onTouchstartPassive={ !readonly.value ? onSliderTouchstart : undefined }\n              >\n                <input\n                  id={ `${id.value}_start` }\n                  name={ props.name || id.value }\n                  disabled={ !!props.disabled }\n                  readonly={ !!props.readonly }\n                  tabindex=\"-1\"\n                  value={ model.value[0] }\n                />\n\n                <input\n                  id={ `${id.value}_stop` }\n                  name={ props.name || id.value }\n                  disabled={ !!props.disabled }\n                  readonly={ !!props.readonly }\n                  tabindex=\"-1\"\n                  value={ model.value[1] }\n                />\n\n                <VSliderTrack\n                  ref={ trackContainerRef }\n                  start={ trackStart.value }\n                  stop={ trackStop.value }\n                >\n                  {{ 'tick-label': slots['tick-label'] }}\n                </VSliderTrack>\n\n                <VSliderThumb\n                  ref={ startThumbRef }\n                  aria-describedby={ messagesId.value }\n                  focused={ isFocused && activeThumbRef.value === startThumbRef.value?.$el }\n                  modelValue={ model.value[0] }\n                  onUpdate:modelValue={ v => (model.value = [v, model.value[1]]) }\n                  onFocus={ (e: FocusEvent) => {\n                    focus()\n                    activeThumbRef.value = startThumbRef.value?.$el\n\n                    // Make sure second thumb is focused if\n                    // the thumbs are on top of each other\n                    // and they are both at minimum value\n                    // but only if focused from outside.\n                    if (\n                      max.value !== min.value &&\n                      model.value[0] === model.value[1] &&\n                      model.value[1] === min.value &&\n                      e.relatedTarget !== stopThumbRef.value?.$el\n                    ) {\n                      startThumbRef.value?.$el.blur()\n                      stopThumbRef.value?.$el.focus()\n                    }\n                  }}\n                  onBlur={ () => {\n                    blur()\n                    activeThumbRef.value = undefined\n                  }}\n                  min={ min.value }\n                  max={ model.value[1] }\n                  position={ trackStart.value }\n                  ripple={ props.ripple }\n                >\n                  {{ 'thumb-label': slots['thumb-label'] }}\n                </VSliderThumb>\n\n                <VSliderThumb\n                  ref={ stopThumbRef }\n                  aria-describedby={ messagesId.value }\n                  focused={ isFocused && activeThumbRef.value === stopThumbRef.value?.$el }\n                  modelValue={ model.value[1] }\n                  onUpdate:modelValue={ v => (model.value = [model.value[0], v]) }\n                  onFocus={ (e: FocusEvent) => {\n                    focus()\n                    activeThumbRef.value = stopThumbRef.value?.$el\n\n                    // Make sure first thumb is focused if\n                    // the thumbs are on top of each other\n                    // and they are both at maximum value\n                    // but only if focused from outside.\n                    if (\n                      max.value !== min.value &&\n                      model.value[0] === model.value[1] &&\n                      model.value[0] === max.value &&\n                      e.relatedTarget !== startThumbRef.value?.$el\n                    ) {\n                      stopThumbRef.value?.$el.blur()\n                      startThumbRef.value?.$el.focus()\n                    }\n                  }}\n                  onBlur={ () => {\n                    blur()\n                    activeThumbRef.value = undefined\n                  }}\n                  min={ model.value[0] }\n                  max={ max.value }\n                  position={ trackStop.value }\n                  ripple={ props.ripple }\n                >\n                  {{ 'thumb-label': slots['thumb-label'] }}\n                </VSliderThumb>\n              </div>\n            ),\n          }}\n        </VInput>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VRangeSlider = InstanceType<typeof VRangeSlider>\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { mergeProps as _mergeProps, createVNode as _createVNode } from \"vue\"; // Components\n\nimport { makeVSelectionControlProps, VSelectionControl } from \"../VSelectionControl/VSelectionControl.js\"; // Utilities\n\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.js\"; // Types\n\nexport const makeVRadioProps = propsFactory({ ...makeVSelectionControlProps({\n    falseIcon: '$radioOff',\n    trueIcon: '$radioOn'\n  })\n}, 'VRadio');\nexport const VRadio = genericComponent()({\n  name: 'VRadio',\n  props: makeVRadioProps(),\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    useRender(() => {\n      const controlProps = VSelectionControl.filterProps(props);\n      return _createVNode(VSelectionControl, _mergeProps(controlProps, {\n        \"class\": ['v-radio', props.class],\n        \"style\": props.style,\n        \"type\": \"radio\"\n      }), slots);\n    });\n    return {};\n  }\n\n});","map":{"version":3,"mappings":"8EAAA;;AAAA,SACSA,0BADT,EACqCC,iBADrC,QACsD,2CADtD,C,CAGA;;AAAA,SACSC,gBADT,EAC2BC,YAD3B,EACyCC,SADzC,QACkD,qBADlD,C,CAGA;;AAGA,OAAO,MAAMC,eAAe,GAAGF,YAAY,CAAC,EAC1C,GAAGH,0BAA0B,CAAC;AAC5BM,aAAS,EAAE,WADiB;AAE5BC,YAAQ,EAAE;AAFkB,GAAD;AADa,CAAD,EAKxC,QALwC,CAApC;AAOP,OAAO,MAAMC,MAAM,GAAGN,gBAAgB,GAA2B;AAC/DO,MAAI,EAAE,QADyD;AAG/DC,OAAK,EAAEL,eAAe,EAHyC;;AAK/DM,OAAKA,CAAED,KAAFC,EAAOC,IAAPD,EAAoB;AAAA,QAAX;AAAEE;AAAF,QAASD,IAAE;AACvBR,aAAS,CAAC,MAAM;AACd,YAAMU,YAAY,GAAGb,iBAAiB,CAACc,WAAlBd,CAA8BS,KAA9BT,CAArB;AAEA,yDAESa,YAFT,EAEqB;AAAA,iBACV,CACL,SADK,EAELJ,KAAK,CAACM,KAFD,CADU;AAIhB,iBACON,KAAK,CAACO,KALG;AAKE;AALF,OAFrB,GAScJ,KATd;AAYD,KAfQ,CAATT;AAiBA,WAAO,EAAP;AACF;;AAxB+D,CAA3B,CAA/B","names":["makeVSelectionControlProps","VSelectionControl","genericComponent","propsFactory","useRender","makeVRadioProps","falseIcon","trueIcon","VRadio","name","props","setup","_ref","slots","controlProps","filterProps","class","style"],"sources":["../../../src/components/VRadio/VRadio.tsx"],"sourcesContent":["// Components\nimport { makeVSelectionControlProps, VSelectionControl } from '@/components/VSelectionControl/VSelectionControl'\n\n// Utilities\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { VSelectionControlSlots } from '@/components/VSelectionControl/VSelectionControl'\n\nexport const makeVRadioProps = propsFactory({\n  ...makeVSelectionControlProps({\n    falseIcon: '$radioOff',\n    trueIcon: '$radioOn',\n  }),\n}, 'VRadio')\n\nexport const VRadio = genericComponent<VSelectionControlSlots>()({\n  name: 'VRadio',\n\n  props: makeVRadioProps(),\n\n  setup (props, { slots }) {\n    useRender(() => {\n      const controlProps = VSelectionControl.filterProps(props)\n\n      return (\n        <VSelectionControl\n          { ...controlProps }\n          class={[\n            'v-radio',\n            props.class,\n          ]}\n          style={ props.style }\n          type=\"radio\"\n          v-slots={ slots }\n        />\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VRadio = InstanceType<typeof VRadio>\n"]},"metadata":{},"sourceType":"module"}
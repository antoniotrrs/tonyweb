{"ast":null,"code":"// Composables\nimport { VItemGroupSymbol } from \"./VItemGroup.js\";\nimport { makeGroupItemProps, useGroupItem } from \"../../composables/group.js\"; // Utilities\n\nimport { genericComponent } from \"../../util/index.js\";\nexport var VItem = genericComponent()({\n  name: 'VItem',\n  props: makeGroupItemProps(),\n  emits: {\n    'group:selected': function groupSelected(val) {\n      return true;\n    }\n  },\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n\n    var _useGroupItem = useGroupItem(props, VItemGroupSymbol),\n        isSelected = _useGroupItem.isSelected,\n        select = _useGroupItem.select,\n        toggle = _useGroupItem.toggle,\n        selectedClass = _useGroupItem.selectedClass,\n        value = _useGroupItem.value,\n        disabled = _useGroupItem.disabled;\n\n    return function () {\n      var _slots$default;\n\n      return (_slots$default = slots.default) === null || _slots$default === void 0 ? void 0 : _slots$default.call(slots, {\n        isSelected: isSelected.value,\n        selectedClass: selectedClass.value,\n        select: select,\n        toggle: toggle,\n        value: value.value,\n        disabled: disabled.value\n      });\n    };\n  }\n});","map":{"version":3,"mappings":"AAAA;AAAA,SACSA,gBADT,QACyB,iBADzB;AACyB,SAChBC,kBADgB,EACIC,YADJ,QACgB,4BADhB,C,CAGzB;;AAAA,SACSC,gBADT,QACyB,qBADzB;AAcA,OAAO,IAAMC,KAAK,GAAGD,gBAAgB,GAAe;AAClDE,MAAI,EAAE,OAD4C;AAGlDC,OAAK,EAAEL,kBAAkB,EAHyB;AAKlDM,OAAK,EAAE;AACL,sBAAmBC,0BAAuB;AAAA,aAAK,IAAL;AAAA;AADrC,GAL2C;AASlDC,OATkD,iBAS3CH,KAT2C,EAStCI,IATsC,EASzB;AAAA,QAATC,KAAS,GAAFD,IAAE,CAATC,KAAS;;AACvB,wBAAuET,YAAY,CAACI,KAAD,EAAQN,gBAAR,CAAnF;AAAA,QAAQY,UAAR,iBAAQA,UAAR;AAAA,QAAoBC,MAApB,iBAAoBA,MAApB;AAAA,QAA4BC,MAA5B,iBAA4BA,MAA5B;AAAA,QAAoCC,aAApC,iBAAoCA,aAApC;AAAA,QAAmDC,KAAnD,iBAAmDA,KAAnD;AAAA,QAA0DC,QAA1D,iBAA0DA,QAA1D;;AACA,WAAO;AAAA;;AAAA,+BAAMN,KAAK,CAACO,OAAZ,mDAAMP,yBAAK,EAAW;AAC3BC,kBAAU,EAAEA,UAAU,CAACI,KADI;AAE3BD,qBAAa,EAAEA,aAAa,CAACC,KAFF;AAG3BH,cAAM,EAANA,MAH2B;AAI3BC,cAAM,EAANA,MAJ2B;AAK3BE,aAAK,EAAEA,KAAK,CAACA,KALc;AAM3BC,gBAAQ,EAAEA,QAAQ,CAACD;AANQ,OAAX,CAAX;AAAA,KAAP;AAQF;AAnBkD,CAAf,CAA9B","names":["VItemGroupSymbol","makeGroupItemProps","useGroupItem","genericComponent","VItem","name","props","emits","val","setup","_ref","slots","isSelected","select","toggle","selectedClass","value","disabled","default"],"sources":["../../../src/components/VItemGroup/VItem.tsx"],"sourcesContent":["// Composables\nimport { VItemGroupSymbol } from './VItemGroup'\nimport { makeGroupItemProps, useGroupItem } from '@/composables/group'\n\n// Utilities\nimport { genericComponent } from '@/util'\n\ntype VItemSlots = {\n  default: {\n    isSelected: boolean | undefined\n    selectedClass: boolean | (string | undefined)[] | undefined\n    select: ((value: boolean) => void) | undefined\n    toggle: (() => void) | undefined\n    value: unknown\n    disabled: boolean | undefined\n  }\n}\n\nexport const VItem = genericComponent<VItemSlots>()({\n  name: 'VItem',\n\n  props: makeGroupItemProps(),\n\n  emits: {\n    'group:selected': (val: { value: boolean }) => true,\n  },\n\n  setup (props, { slots }) {\n    const { isSelected, select, toggle, selectedClass, value, disabled } = useGroupItem(props, VItemGroupSymbol)\n    return () => slots.default?.({\n      isSelected: isSelected.value,\n      selectedClass: selectedClass.value,\n      select,\n      toggle,\n      value: value.value,\n      disabled: disabled.value,\n    })\n  },\n})\n\nexport type VItem = InstanceType<typeof VItem>\n"]},"metadata":{},"sourceType":"module"}
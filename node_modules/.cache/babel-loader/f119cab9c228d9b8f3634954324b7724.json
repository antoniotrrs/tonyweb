{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\"; // Styles\n\nimport \"./VColorPickerSwatches.css\"; // Components\n\nimport { VIcon } from \"../VIcon/index.js\"; // Composables\n\nimport { makeComponentProps } from \"../../composables/component.js\"; // Utilities\n\nimport { convertToUnit, deepEqual, defineComponent, getContrast, parseColor, propsFactory, RGBtoCSS, RGBtoHSV, useRender } from \"../../util/index.js\";\nimport colors from \"../../util/colors.js\"; // Types\n\nexport const makeVColorPickerSwatchesProps = propsFactory({\n  swatches: {\n    type: Array,\n    default: () => parseDefaultColors(colors)\n  },\n  disabled: Boolean,\n  color: Object,\n  maxHeight: [Number, String],\n  ...makeComponentProps()\n}, 'VColorPickerSwatches');\n\nfunction parseDefaultColors(colors) {\n  return Object.keys(colors).map(key => {\n    const color = colors[key];\n    return color.base ? [color.base, color.darken4, color.darken3, color.darken2, color.darken1, color.lighten1, color.lighten2, color.lighten3, color.lighten4, color.lighten5] : [color.black, color.white, color.transparent];\n  });\n}\n\nexport const VColorPickerSwatches = defineComponent({\n  name: 'VColorPickerSwatches',\n  props: makeVColorPickerSwatchesProps(),\n  emits: {\n    'update:color': color => true\n  },\n\n  setup(props, _ref) {\n    let {\n      emit\n    } = _ref;\n    useRender(() => _createVNode(\"div\", {\n      \"class\": ['v-color-picker-swatches', props.class],\n      \"style\": [{\n        maxHeight: convertToUnit(props.maxHeight)\n      }, props.style]\n    }, [_createVNode(\"div\", null, [props.swatches.map(swatch => _createVNode(\"div\", {\n      \"class\": \"v-color-picker-swatches__swatch\"\n    }, [swatch.map(color => {\n      const rgba = parseColor(color);\n      const hsva = RGBtoHSV(rgba);\n      const background = RGBtoCSS(rgba);\n      return _createVNode(\"div\", {\n        \"class\": \"v-color-picker-swatches__color\",\n        \"onClick\": () => hsva && emit('update:color', hsva)\n      }, [_createVNode(\"div\", {\n        \"style\": {\n          background\n        }\n      }, [props.color && deepEqual(props.color, hsva) ? _createVNode(VIcon, {\n        \"size\": \"x-small\",\n        \"icon\": \"$success\",\n        \"color\": getContrast(color, '#FFFFFF') > 2 ? 'white' : 'black'\n      }, null) : undefined])]);\n    })]))])]));\n    return {};\n  }\n\n});","map":{"version":3,"mappings":"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","names":["VIcon","makeComponentProps","convertToUnit","deepEqual","defineComponent","getContrast","parseColor","propsFactory","RGBtoCSS","RGBtoHSV","useRender","colors","makeVColorPickerSwatchesProps","swatches","type","Array","default","parseDefaultColors","disabled","Boolean","color","Object","maxHeight","Number","String","keys","map","key","base","darken4","darken3","darken2","darken1","lighten1","lighten2","lighten3","lighten4","lighten5","black","white","transparent","VColorPickerSwatches","name","props","emits","setup","_ref","emit","class","style","swatch","rgba","hsva","background","onClick","_createVNode","undefined"],"sources":["../../../src/components/VColorPicker/VColorPickerSwatches.tsx"],"sourcesContent":["// Styles\nimport './VColorPickerSwatches.sass'\n\n// Components\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\n\n// Utilities\nimport {\n  convertToUnit,\n  deepEqual,\n  defineComponent,\n  getContrast,\n  parseColor,\n  propsFactory,\n  RGBtoCSS,\n  RGBtoHSV,\n  useRender,\n} from '@/util'\nimport colors from '@/util/colors'\n\n// Types\nimport type { DeepReadonly, PropType } from 'vue'\nimport type { Color, HSV } from '@/util'\n\nexport const makeVColorPickerSwatchesProps = propsFactory({\n  swatches: {\n    type: Array as PropType<DeepReadonly<Color[][]>>,\n    default: () => parseDefaultColors(colors),\n  },\n  disabled: Boolean,\n  color: Object as PropType<HSV | null>,\n  maxHeight: [Number, String],\n\n  ...makeComponentProps(),\n}, 'VColorPickerSwatches')\n\nfunction parseDefaultColors (colors: Record<string, Record<string, string>>) {\n  return Object.keys(colors).map(key => {\n    const color = colors[key]\n    return color.base ? [\n      color.base,\n      color.darken4,\n      color.darken3,\n      color.darken2,\n      color.darken1,\n      color.lighten1,\n      color.lighten2,\n      color.lighten3,\n      color.lighten4,\n      color.lighten5,\n    ] : [\n      color.black,\n      color.white,\n      color.transparent,\n    ]\n  })\n}\n\nexport const VColorPickerSwatches = defineComponent({\n  name: 'VColorPickerSwatches',\n\n  props: makeVColorPickerSwatchesProps(),\n\n  emits: {\n    'update:color': (color: HSV) => true,\n  },\n\n  setup (props, { emit }) {\n    useRender(() => (\n      <div\n        class={[\n          'v-color-picker-swatches',\n          props.class,\n        ]}\n        style={[\n          { maxHeight: convertToUnit(props.maxHeight) },\n          props.style,\n        ]}\n      >\n        <div>\n          { props.swatches.map(swatch => (\n            <div class=\"v-color-picker-swatches__swatch\">\n              { swatch.map(color => {\n                const rgba = parseColor(color)\n                const hsva = RGBtoHSV(rgba)\n                const background = RGBtoCSS(rgba)\n\n                return (\n                  <div\n                    class=\"v-color-picker-swatches__color\"\n                    onClick={ () => hsva && emit('update:color', hsva) }\n                  >\n                    <div style={{ background }}>\n                      { props.color && deepEqual(props.color, hsva)\n                        ? <VIcon size=\"x-small\" icon=\"$success\" color={ getContrast(color, '#FFFFFF') > 2 ? 'white' : 'black' } />\n                        : undefined\n                      }\n                    </div>\n                  </div>\n                )\n              })}\n            </div>\n          ))}\n        </div>\n      </div>\n    ))\n\n    return {}\n  },\n})\n\nexport type VColorPickerSwatches = InstanceType<typeof VColorPickerSwatches>\n"]},"metadata":{},"sourceType":"module"}
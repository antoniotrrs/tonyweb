{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n// Composables\nimport { useLocale } from \"../../../composables/index.js\";\nimport { useProxiedModel } from \"../../../composables/proxiedModel.js\"; // Utilities\n\nimport { computed, inject, provide, toRef } from 'vue';\nimport { getObjectValueByPath, isEmpty, propsFactory } from \"../../../util/index.js\"; // Types\n\nexport const makeDataTableSortProps = propsFactory({\n  sortBy: {\n    type: Array,\n    default: () => []\n  },\n  customKeySort: Object,\n  multiSort: Boolean,\n  mustSort: Boolean\n}, 'DataTable-sort');\nconst VDataTableSortSymbol = Symbol.for('vuetify:data-table-sort');\nexport function createSort(props) {\n  const sortBy = useProxiedModel(props, 'sortBy');\n  const mustSort = toRef(props, 'mustSort');\n  const multiSort = toRef(props, 'multiSort');\n  return {\n    sortBy,\n    mustSort,\n    multiSort\n  };\n}\nexport function provideSort(options) {\n  const {\n    sortBy,\n    mustSort,\n    multiSort,\n    page\n  } = options;\n\n  const toggleSort = column => {\n    if (column.key == null) return;\n    let newSortBy = sortBy.value.map(x => ({ ...x\n    })) ?? [];\n    const item = newSortBy.find(x => x.key === column.key);\n\n    if (!item) {\n      if (multiSort.value) {\n        newSortBy.push({\n          key: column.key,\n          order: 'asc'\n        });\n      } else {\n        newSortBy = [{\n          key: column.key,\n          order: 'asc'\n        }];\n      }\n    } else if (item.order === 'desc') {\n      if (mustSort.value && newSortBy.length === 1) {\n        item.order = 'asc';\n      } else {\n        newSortBy = newSortBy.filter(x => x.key !== column.key);\n      }\n    } else {\n      item.order = 'desc';\n    }\n\n    sortBy.value = newSortBy;\n    if (page) page.value = 1;\n  };\n\n  function isSorted(column) {\n    return !!sortBy.value.find(item => item.key === column.key);\n  }\n\n  const data = {\n    sortBy,\n    toggleSort,\n    isSorted\n  };\n  provide(VDataTableSortSymbol, data);\n  return data;\n}\nexport function useSort() {\n  const data = inject(VDataTableSortSymbol);\n  if (!data) throw new Error('Missing sort!');\n  return data;\n} // TODO: abstract into project composable\n\nexport function useSortedItems(props, items, sortBy, options) {\n  const locale = useLocale();\n  const sortedItems = computed(() => {\n    if (!sortBy.value.length) return items.value;\n    return sortItems(items.value, sortBy.value, locale.current.value, {\n      transform: options?.transform,\n      sortFunctions: { ...props.customKeySort,\n        ...options?.sortFunctions?.value\n      },\n      sortRawFunctions: options?.sortRawFunctions?.value\n    });\n  });\n  return {\n    sortedItems\n  };\n}\nexport function sortItems(items, sortByItems, locale, options) {\n  const stringCollator = new Intl.Collator(locale, {\n    sensitivity: 'accent',\n    usage: 'sort'\n  });\n  const transformedItems = items.map(item => [item, options?.transform ? options.transform(item) : item]);\n  return transformedItems.sort((a, b) => {\n    for (let i = 0; i < sortByItems.length; i++) {\n      let hasCustomResult = false;\n      const sortKey = sortByItems[i].key;\n      const sortOrder = sortByItems[i].order ?? 'asc';\n      if (sortOrder === false) continue;\n      let sortA = getObjectValueByPath(a[1], sortKey);\n      let sortB = getObjectValueByPath(b[1], sortKey);\n      let sortARaw = a[0].raw;\n      let sortBRaw = b[0].raw;\n\n      if (sortOrder === 'desc') {\n        [sortA, sortB] = [sortB, sortA];\n        [sortARaw, sortBRaw] = [sortBRaw, sortARaw];\n      }\n\n      if (options?.sortRawFunctions?.[sortKey]) {\n        const customResult = options.sortRawFunctions[sortKey](sortARaw, sortBRaw);\n        if (customResult == null) continue;\n        hasCustomResult = true;\n        if (customResult) return customResult;\n      }\n\n      if (options?.sortFunctions?.[sortKey]) {\n        const customResult = options.sortFunctions[sortKey](sortA, sortB);\n        if (customResult == null) continue;\n        hasCustomResult = true;\n        if (customResult) return customResult;\n      }\n\n      if (hasCustomResult) continue; // Dates should be compared numerically\n\n      if (sortA instanceof Date && sortB instanceof Date) {\n        return sortA.getTime() - sortB.getTime();\n      }\n\n      [sortA, sortB] = [sortA, sortB].map(s => s != null ? s.toString().toLocaleLowerCase() : s);\n\n      if (sortA !== sortB) {\n        if (isEmpty(sortA) && isEmpty(sortB)) return 0;\n        if (isEmpty(sortA)) return -1;\n        if (isEmpty(sortB)) return 1;\n        if (!isNaN(sortA) && !isNaN(sortB)) return Number(sortA) - Number(sortB);\n        return stringCollator.compare(sortA, sortB);\n      }\n    }\n\n    return 0;\n  }).map(_ref => {\n    let [item] = _ref;\n    return item;\n  });\n}","map":{"version":3,"mappings":"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","names":["useLocale","useProxiedModel","computed","inject","provide","toRef","getObjectValueByPath","isEmpty","propsFactory","makeDataTableSortProps","sortBy","type","Array","default","customKeySort","Object","multiSort","Boolean","mustSort","VDataTableSortSymbol","Symbol","for","createSort","props","provideSort","options","page","toggleSort","column","key","newSortBy","value","map","x","item","find","push","order","length","filter","isSorted","data","useSort","Error","useSortedItems","items","locale","sortedItems","sortItems","current","transform","sortFunctions","sortRawFunctions","sortByItems","stringCollator","Intl","Collator","sensitivity","usage","transformedItems","sort","a","b","i","hasCustomResult","sortKey","sortOrder","sortA","sortB","sortARaw","raw","sortBRaw","customResult","Date","getTime","s","toString","toLocaleLowerCase","isNaN","Number","compare","_ref"],"sources":["../../../../src/components/VDataTable/composables/sort.ts"],"sourcesContent":["// Composables\nimport { useLocale } from '@/composables'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed, inject, provide, toRef } from 'vue'\nimport { getObjectValueByPath, isEmpty, propsFactory } from '@/util'\n\n// Types\nimport type { InjectionKey, PropType, Ref } from 'vue'\nimport type { DataTableCompareFunction, InternalDataTableHeader } from '../types'\nimport type { InternalItem } from '@/composables/filter'\n\nexport const makeDataTableSortProps = propsFactory({\n  sortBy: {\n    type: Array as PropType<readonly SortItem[]>,\n    default: () => ([]),\n  },\n  customKeySort: Object as PropType<Record<string, DataTableCompareFunction>>,\n  multiSort: Boolean,\n  mustSort: Boolean,\n}, 'DataTable-sort')\n\nconst VDataTableSortSymbol: InjectionKey<{\n  sortBy: Ref<readonly SortItem[]>\n  toggleSort: (column: InternalDataTableHeader) => void\n  isSorted: (column: InternalDataTableHeader) => boolean\n}> = Symbol.for('vuetify:data-table-sort')\n\nexport type SortItem = { key: string, order?: boolean | 'asc' | 'desc' }\n\ntype SortProps = {\n  sortBy: readonly SortItem[]\n  'onUpdate:sortBy': ((value: any) => void) | undefined\n  mustSort: boolean\n  multiSort: boolean\n}\n\nexport function createSort (props: SortProps) {\n  const sortBy = useProxiedModel(props, 'sortBy')\n  const mustSort = toRef(props, 'mustSort')\n  const multiSort = toRef(props, 'multiSort')\n\n  return { sortBy, mustSort, multiSort }\n}\n\nexport function provideSort (options: {\n  sortBy: Ref<readonly SortItem[]>\n  mustSort: Ref<boolean>\n  multiSort: Ref<boolean>\n  page?: Ref<number>\n}) {\n  const { sortBy, mustSort, multiSort, page } = options\n\n  const toggleSort = (column: InternalDataTableHeader) => {\n    if (column.key == null) return\n\n    let newSortBy = sortBy.value.map(x => ({ ...x })) ?? []\n    const item = newSortBy.find(x => x.key === column.key)\n\n    if (!item) {\n      if (multiSort.value) {\n        newSortBy.push({ key: column.key, order: 'asc' })\n      } else {\n        newSortBy = [{ key: column.key, order: 'asc' }]\n      }\n    } else if (item.order === 'desc') {\n      if (mustSort.value && newSortBy.length === 1) {\n        item.order = 'asc'\n      } else {\n        newSortBy = newSortBy.filter(x => x.key !== column.key)\n      }\n    } else {\n      item.order = 'desc'\n    }\n\n    sortBy.value = newSortBy\n    if (page) page.value = 1\n  }\n\n  function isSorted (column: InternalDataTableHeader) {\n    return !!sortBy.value.find(item => item.key === column.key)\n  }\n\n  const data = { sortBy, toggleSort, isSorted }\n\n  provide(VDataTableSortSymbol, data)\n\n  return data\n}\n\nexport function useSort () {\n  const data = inject(VDataTableSortSymbol)\n\n  if (!data) throw new Error('Missing sort!')\n\n  return data\n}\n\n// TODO: abstract into project composable\nexport function useSortedItems<T extends InternalItem> (\n  props: {\n    customKeySort: Record<string, DataTableCompareFunction> | undefined\n  },\n  items: Ref<T[]>,\n  sortBy: Ref<readonly SortItem[]>,\n  options?: {\n    transform?: (item: T) => {}\n    sortFunctions?: Ref<Record<string, DataTableCompareFunction> | undefined>\n    sortRawFunctions?: Ref<Record<string, DataTableCompareFunction> | undefined>\n  },\n) {\n  const locale = useLocale()\n  const sortedItems = computed(() => {\n    if (!sortBy.value.length) return items.value\n\n    return sortItems(items.value, sortBy.value, locale.current.value, {\n      transform: options?.transform,\n      sortFunctions: {\n        ...props.customKeySort,\n        ...options?.sortFunctions?.value,\n      },\n      sortRawFunctions: options?.sortRawFunctions?.value,\n    })\n  })\n\n  return { sortedItems }\n}\n\nexport function sortItems<T extends InternalItem> (\n  items: T[],\n  sortByItems: readonly SortItem[],\n  locale: string,\n  options?: {\n    transform?: (item: T) => Record<string, any>\n    sortFunctions?: Record<string, DataTableCompareFunction>\n    sortRawFunctions?: Record<string, DataTableCompareFunction>\n  },\n): T[] {\n  const stringCollator = new Intl.Collator(locale, { sensitivity: 'accent', usage: 'sort' })\n\n  const transformedItems = items.map(item => (\n    [item, options?.transform ? options.transform(item) : item as never] as const)\n  )\n\n  return transformedItems.sort((a, b) => {\n    for (let i = 0; i < sortByItems.length; i++) {\n      let hasCustomResult = false\n      const sortKey = sortByItems[i].key\n      const sortOrder = sortByItems[i].order ?? 'asc'\n\n      if (sortOrder === false) continue\n\n      let sortA = getObjectValueByPath(a[1], sortKey)\n      let sortB = getObjectValueByPath(b[1], sortKey)\n      let sortARaw = a[0].raw\n      let sortBRaw = b[0].raw\n\n      if (sortOrder === 'desc') {\n        [sortA, sortB] = [sortB, sortA]\n        ;[sortARaw, sortBRaw] = [sortBRaw, sortARaw]\n      }\n\n      if (options?.sortRawFunctions?.[sortKey]) {\n        const customResult = options.sortRawFunctions[sortKey](sortARaw, sortBRaw)\n\n        if (customResult == null) continue\n        hasCustomResult = true\n        if (customResult) return customResult\n      }\n\n      if (options?.sortFunctions?.[sortKey]) {\n        const customResult = options.sortFunctions[sortKey](sortA, sortB)\n\n        if (customResult == null) continue\n        hasCustomResult = true\n        if (customResult) return customResult\n      }\n\n      if (hasCustomResult) continue\n\n      // Dates should be compared numerically\n      if (sortA instanceof Date && sortB instanceof Date) {\n        return sortA.getTime() - sortB.getTime()\n      }\n\n      [sortA, sortB] = [sortA, sortB].map(s => s != null ? s.toString().toLocaleLowerCase() : s)\n\n      if (sortA !== sortB) {\n        if (isEmpty(sortA) && isEmpty(sortB)) return 0\n        if (isEmpty(sortA)) return -1\n        if (isEmpty(sortB)) return 1\n        if (!isNaN(sortA) && !isNaN(sortB)) return Number(sortA) - Number(sortB)\n        return stringCollator.compare(sortA, sortB)\n      }\n    }\n\n    return 0\n  }).map(([item]) => item)\n}\n"]},"metadata":{},"sourceType":"module"}
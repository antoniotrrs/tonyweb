{"ast":null,"code":"import { Fragment as _Fragment, createVNode as _createVNode } from \"vue\"; // Components\n\nimport { VCardSubtitle } from \"./VCardSubtitle.js\";\nimport { VCardTitle } from \"./VCardTitle.js\";\nimport { VAvatar } from \"../VAvatar/index.js\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.js\";\nimport { VIcon } from \"../VIcon/index.js\"; // Composables\n\nimport { makeComponentProps } from \"../../composables/component.js\";\nimport { makeDensityProps } from \"../../composables/density.js\";\nimport { IconValue } from \"../../composables/icons.js\"; // Utilities\n\nimport { toDisplayString } from 'vue';\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.js\";\nexport const makeCardItemProps = propsFactory({\n  appendAvatar: String,\n  appendIcon: IconValue,\n  prependAvatar: String,\n  prependIcon: IconValue,\n  subtitle: {\n    type: [String, Number, Boolean],\n    default: undefined\n  },\n  title: {\n    type: [String, Number, Boolean],\n    default: undefined\n  },\n  ...makeComponentProps(),\n  ...makeDensityProps()\n}, 'VCardItem');\nexport const VCardItem = genericComponent()({\n  name: 'VCardItem',\n  props: makeCardItemProps(),\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    useRender(() => {\n      const hasPrependMedia = !!(props.prependAvatar || props.prependIcon);\n      const hasPrepend = !!(hasPrependMedia || slots.prepend);\n      const hasAppendMedia = !!(props.appendAvatar || props.appendIcon);\n      const hasAppend = !!(hasAppendMedia || slots.append);\n      const hasTitle = !!(props.title != null || slots.title);\n      const hasSubtitle = !!(props.subtitle != null || slots.subtitle);\n      return _createVNode(\"div\", {\n        \"class\": ['v-card-item', props.class],\n        \"style\": props.style\n      }, [hasPrepend && _createVNode(\"div\", {\n        \"key\": \"prepend\",\n        \"class\": \"v-card-item__prepend\"\n      }, [!slots.prepend ? _createVNode(_Fragment, null, [props.prependAvatar && _createVNode(VAvatar, {\n        \"key\": \"prepend-avatar\",\n        \"density\": props.density,\n        \"image\": props.prependAvatar\n      }, null), props.prependIcon && _createVNode(VIcon, {\n        \"key\": \"prepend-icon\",\n        \"density\": props.density,\n        \"icon\": props.prependIcon\n      }, null)]) : _createVNode(VDefaultsProvider, {\n        \"key\": \"prepend-defaults\",\n        \"disabled\": !hasPrependMedia,\n        \"defaults\": {\n          VAvatar: {\n            density: props.density,\n            image: props.prependAvatar\n          },\n          VIcon: {\n            density: props.density,\n            icon: props.prependIcon\n          }\n        }\n      }, slots.prepend)]), _createVNode(\"div\", {\n        \"class\": \"v-card-item__content\"\n      }, [hasTitle && _createVNode(VCardTitle, {\n        \"key\": \"title\"\n      }, {\n        default: () => [slots.title?.() ?? toDisplayString(props.title)]\n      }), hasSubtitle && _createVNode(VCardSubtitle, {\n        \"key\": \"subtitle\"\n      }, {\n        default: () => [slots.subtitle?.() ?? toDisplayString(props.subtitle)]\n      }), slots.default?.()]), hasAppend && _createVNode(\"div\", {\n        \"key\": \"append\",\n        \"class\": \"v-card-item__append\"\n      }, [!slots.append ? _createVNode(_Fragment, null, [props.appendIcon && _createVNode(VIcon, {\n        \"key\": \"append-icon\",\n        \"density\": props.density,\n        \"icon\": props.appendIcon\n      }, null), props.appendAvatar && _createVNode(VAvatar, {\n        \"key\": \"append-avatar\",\n        \"density\": props.density,\n        \"image\": props.appendAvatar\n      }, null)]) : _createVNode(VDefaultsProvider, {\n        \"key\": \"append-defaults\",\n        \"disabled\": !hasAppendMedia,\n        \"defaults\": {\n          VAvatar: {\n            density: props.density,\n            image: props.appendAvatar\n          },\n          VIcon: {\n            density: props.density,\n            icon: props.appendIcon\n          }\n        }\n      }, slots.append)])]);\n    });\n    return {};\n  }\n\n});","map":{"version":3,"mappings":"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","names":["VCardSubtitle","VCardTitle","VAvatar","VDefaultsProvider","VIcon","makeComponentProps","makeDensityProps","IconValue","toDisplayString","genericComponent","propsFactory","useRender","makeCardItemProps","appendAvatar","String","appendIcon","prependAvatar","prependIcon","subtitle","type","Number","Boolean","default","undefined","title","VCardItem","name","props","setup","_ref","slots","hasPrependMedia","hasPrepend","prepend","hasAppendMedia","hasAppend","append","hasTitle","hasSubtitle","class","style","_createVNode","density","image","icon"],"sources":["../../../src/components/VCard/VCardItem.tsx"],"sourcesContent":["// Components\nimport { VCardSubtitle } from './VCardSubtitle'\nimport { VCardTitle } from './VCardTitle'\nimport { VAvatar } from '@/components/VAvatar'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDensityProps } from '@/composables/density'\nimport { IconValue } from '@/composables/icons'\n\n// Utilities\nimport { toDisplayString } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport type VCardItemSlots = {\n  default: never\n  prepend: never\n  append: never\n  title: never\n  subtitle: never\n}\n\nexport const makeCardItemProps = propsFactory({\n  appendAvatar: String,\n  appendIcon: IconValue,\n  prependAvatar: String,\n  prependIcon: IconValue,\n  subtitle: {\n    type: [String, Number, Boolean],\n    default: undefined,\n  },\n  title: {\n    type: [String, Number, Boolean],\n    default: undefined,\n  },\n\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n}, 'VCardItem')\n\nexport const VCardItem = genericComponent<VCardItemSlots>()({\n  name: 'VCardItem',\n\n  props: makeCardItemProps(),\n\n  setup (props, { slots }) {\n    useRender(() => {\n      const hasPrependMedia = !!(props.prependAvatar || props.prependIcon)\n      const hasPrepend = !!(hasPrependMedia || slots.prepend)\n      const hasAppendMedia = !!(props.appendAvatar || props.appendIcon)\n      const hasAppend = !!(hasAppendMedia || slots.append)\n      const hasTitle = !!(props.title != null || slots.title)\n      const hasSubtitle = !!(props.subtitle != null || slots.subtitle)\n\n      return (\n        <div\n          class={[\n            'v-card-item',\n            props.class,\n          ]}\n          style={ props.style }\n        >\n          { hasPrepend && (\n            <div key=\"prepend\" class=\"v-card-item__prepend\">\n              { !slots.prepend ? (\n                <>\n                  { props.prependAvatar && (\n                    <VAvatar\n                      key=\"prepend-avatar\"\n                      density={ props.density }\n                      image={ props.prependAvatar }\n                    />\n                  )}\n\n                  { props.prependIcon && (\n                    <VIcon\n                      key=\"prepend-icon\"\n                      density={ props.density }\n                      icon={ props.prependIcon }\n                    />\n                  )}\n                </>\n              ) : (\n                <VDefaultsProvider\n                  key=\"prepend-defaults\"\n                  disabled={ !hasPrependMedia }\n                  defaults={{\n                    VAvatar: {\n                      density: props.density,\n                      image: props.prependAvatar,\n                    },\n                    VIcon: {\n                      density: props.density,\n                      icon: props.prependIcon,\n                    },\n                  }}\n                  v-slots:default={ slots.prepend }\n                />\n              )}\n            </div>\n          )}\n\n          <div class=\"v-card-item__content\">\n            { hasTitle && (\n              <VCardTitle key=\"title\">\n                { slots.title?.() ?? toDisplayString(props.title) }\n              </VCardTitle>\n            )}\n\n            { hasSubtitle && (\n              <VCardSubtitle key=\"subtitle\">\n                { slots.subtitle?.() ?? toDisplayString(props.subtitle) }\n              </VCardSubtitle>\n            )}\n\n            { slots.default?.() }\n          </div>\n\n          { hasAppend && (\n            <div key=\"append\" class=\"v-card-item__append\">\n              { !slots.append ? (\n                <>\n                  { props.appendIcon && (\n                    <VIcon\n                      key=\"append-icon\"\n                      density={ props.density }\n                      icon={ props.appendIcon }\n                    />\n                  )}\n\n                  { props.appendAvatar && (\n                    <VAvatar\n                      key=\"append-avatar\"\n                      density={ props.density }\n                      image={ props.appendAvatar }\n                    />\n                  )}\n                </>\n              ) : (\n                <VDefaultsProvider\n                  key=\"append-defaults\"\n                  disabled={ !hasAppendMedia }\n                  defaults={{\n                    VAvatar: {\n                      density: props.density,\n                      image: props.appendAvatar,\n                    },\n                    VIcon: {\n                      density: props.density,\n                      icon: props.appendIcon,\n                    },\n                  }}\n                  v-slots:default={ slots.append }\n                />\n              )}\n           </div>\n          )}\n        </div>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VCardItem = InstanceType<typeof VCardItem>\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from \"/Users/antoniotorres/Documents/tony/tonyweb/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport { createVNode as _createVNode, Fragment as _Fragment, mergeProps as _mergeProps } from \"vue\"; // Styles\n\nimport \"./VBreadcrumbs.css\"; // Components\n\nimport { VBreadcrumbsDivider } from \"./VBreadcrumbsDivider.js\";\nimport { VBreadcrumbsItem } from \"./VBreadcrumbsItem.js\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.js\";\nimport { VIcon } from \"../VIcon/index.js\"; // Composables\n\nimport { useBackgroundColor } from \"../../composables/color.js\";\nimport { makeComponentProps } from \"../../composables/component.js\";\nimport { provideDefaults } from \"../../composables/defaults.js\";\nimport { makeDensityProps, useDensity } from \"../../composables/density.js\";\nimport { IconValue } from \"../../composables/icons.js\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.js\";\nimport { makeTagProps } from \"../../composables/tag.js\"; // Utilities\n\nimport { computed, toRef } from 'vue';\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.js\"; // Types\n\nexport var makeVBreadcrumbsProps = propsFactory(_objectSpread(_objectSpread(_objectSpread(_objectSpread({\n  activeClass: String,\n  activeColor: String,\n  bgColor: String,\n  color: String,\n  disabled: Boolean,\n  divider: {\n    type: String,\n    default: '/'\n  },\n  icon: IconValue,\n  items: {\n    type: Array,\n    default: function _default() {\n      return [];\n    }\n  }\n}, makeComponentProps()), makeDensityProps()), makeRoundedProps()), makeTagProps({\n  tag: 'ul'\n})), 'VBreadcrumbs');\nexport var VBreadcrumbs = genericComponent()({\n  name: 'VBreadcrumbs',\n  props: makeVBreadcrumbsProps(),\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n\n    var _useBackgroundColor = useBackgroundColor(toRef(props, 'bgColor')),\n        backgroundColorClasses = _useBackgroundColor.backgroundColorClasses,\n        backgroundColorStyles = _useBackgroundColor.backgroundColorStyles;\n\n    var _useDensity = useDensity(props),\n        densityClasses = _useDensity.densityClasses;\n\n    var _useRounded = useRounded(props),\n        roundedClasses = _useRounded.roundedClasses;\n\n    provideDefaults({\n      VBreadcrumbsDivider: {\n        divider: toRef(props, 'divider')\n      },\n      VBreadcrumbsItem: {\n        activeClass: toRef(props, 'activeClass'),\n        activeColor: toRef(props, 'activeColor'),\n        color: toRef(props, 'color'),\n        disabled: toRef(props, 'disabled')\n      }\n    });\n    var items = computed(function () {\n      return props.items.map(function (item) {\n        return typeof item === 'string' ? {\n          item: {\n            title: item\n          },\n          raw: item\n        } : {\n          item: item,\n          raw: item\n        };\n      });\n    });\n    useRender(function () {\n      var hasPrepend = !!(slots.prepend || props.icon);\n      return _createVNode(props.tag, {\n        \"class\": ['v-breadcrumbs', backgroundColorClasses.value, densityClasses.value, roundedClasses.value, props.class],\n        \"style\": [backgroundColorStyles.value, props.style]\n      }, {\n        default: function _default() {\n          var _slots$default;\n\n          return [hasPrepend && _createVNode(\"li\", {\n            \"key\": \"prepend\",\n            \"class\": \"v-breadcrumbs__prepend\"\n          }, [!slots.prepend ? _createVNode(VIcon, {\n            \"key\": \"prepend-icon\",\n            \"start\": true,\n            \"icon\": props.icon\n          }, null) : _createVNode(VDefaultsProvider, {\n            \"key\": \"prepend-defaults\",\n            \"disabled\": !props.icon,\n            \"defaults\": {\n              VIcon: {\n                icon: props.icon,\n                start: true\n              }\n            }\n          }, slots.prepend)]), items.value.map(function (_ref2, index, array) {\n            var _slots$item, _slots$item2;\n\n            var item = _ref2.item,\n                raw = _ref2.raw;\n            return _createVNode(_Fragment, null, [(_slots$item = (_slots$item2 = slots.item) === null || _slots$item2 === void 0 ? void 0 : _slots$item2.call(slots, {\n              item: item,\n              index: index\n            })) !== null && _slots$item !== void 0 ? _slots$item : _createVNode(VBreadcrumbsItem, _mergeProps({\n              \"key\": index,\n              \"disabled\": index >= array.length - 1\n            }, typeof item === 'string' ? {\n              title: item\n            } : item), {\n              default: slots.title ? function () {\n                var _slots$title;\n\n                return (_slots$title = slots.title) === null || _slots$title === void 0 ? void 0 : _slots$title.call(slots, {\n                  item: item,\n                  index: index\n                });\n              } : undefined\n            }), index < array.length - 1 && _createVNode(VBreadcrumbsDivider, null, {\n              default: slots.divider ? function () {\n                var _slots$divider;\n\n                return (_slots$divider = slots.divider) === null || _slots$divider === void 0 ? void 0 : _slots$divider.call(slots, {\n                  item: raw,\n                  index: index\n                });\n              } : undefined\n            })]);\n          }), (_slots$default = slots.default) === null || _slots$default === void 0 ? void 0 : _slots$default.call(slots)];\n        }\n      });\n    });\n    return {};\n  }\n});","map":{"version":3,"mappings":"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","names":["VBreadcrumbsDivider","VBreadcrumbsItem","VDefaultsProvider","VIcon","useBackgroundColor","makeComponentProps","provideDefaults","makeDensityProps","useDensity","IconValue","makeRoundedProps","useRounded","makeTagProps","computed","toRef","genericComponent","propsFactory","useRender","makeVBreadcrumbsProps","activeClass","String","activeColor","bgColor","color","disabled","Boolean","divider","type","default","icon","items","Array","tag","VBreadcrumbs","name","props","setup","_ref","slots","backgroundColorClasses","backgroundColorStyles","densityClasses","roundedClasses","map","item","title","raw","hasPrepend","prepend","value","class","style","_createVNode","start","index","array","_ref2","length","undefined"],"sources":["../../../src/components/VBreadcrumbs/VBreadcrumbs.tsx"],"sourcesContent":["// Styles\nimport './VBreadcrumbs.sass'\n\n// Components\nimport { VBreadcrumbsDivider } from './VBreadcrumbsDivider'\nimport { VBreadcrumbsItem } from './VBreadcrumbsItem'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { useBackgroundColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { provideDefaults } from '@/composables/defaults'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { IconValue } from '@/composables/icons'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { computed, toRef } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { LinkProps } from '@/composables/router'\nimport type { GenericProps } from '@/util'\n\nexport type InternalBreadcrumbItem = Partial<LinkProps> & {\n  title: string\n  disabled?: boolean\n}\n\nexport type BreadcrumbItem = string | InternalBreadcrumbItem\n\nexport const makeVBreadcrumbsProps = propsFactory({\n  activeClass: String,\n  activeColor: String,\n  bgColor: String,\n  color: String,\n  disabled: Boolean,\n  divider: {\n    type: String,\n    default: '/',\n  },\n  icon: IconValue,\n  items: {\n    type: Array as PropType<readonly BreadcrumbItem[]>,\n    default: () => ([]),\n  },\n\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n  ...makeRoundedProps(),\n  ...makeTagProps({ tag: 'ul' }),\n}, 'VBreadcrumbs')\n\nexport const VBreadcrumbs = genericComponent<new <T extends BreadcrumbItem>(\n  props: {\n    items?: T[]\n  },\n  slots: {\n    prepend: never\n    title: { item: InternalBreadcrumbItem, index: number }\n    divider: { item: T, index: number }\n    item: { item: InternalBreadcrumbItem, index: number }\n    default: never\n  }\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VBreadcrumbs',\n\n  props: makeVBreadcrumbsProps(),\n\n  setup (props, { slots }) {\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'bgColor'))\n    const { densityClasses } = useDensity(props)\n    const { roundedClasses } = useRounded(props)\n\n    provideDefaults({\n      VBreadcrumbsDivider: {\n        divider: toRef(props, 'divider'),\n      },\n      VBreadcrumbsItem: {\n        activeClass: toRef(props, 'activeClass'),\n        activeColor: toRef(props, 'activeColor'),\n        color: toRef(props, 'color'),\n        disabled: toRef(props, 'disabled'),\n      },\n    })\n\n    const items = computed(() => props.items.map(item => {\n      return typeof item === 'string' ? { item: { title: item }, raw: item } : { item, raw: item }\n    }))\n\n    useRender(() => {\n      const hasPrepend = !!(slots.prepend || props.icon)\n\n      return (\n        <props.tag\n          class={[\n            'v-breadcrumbs',\n            backgroundColorClasses.value,\n            densityClasses.value,\n            roundedClasses.value,\n            props.class,\n          ]}\n          style={[\n            backgroundColorStyles.value,\n            props.style,\n          ]}\n        >\n          { hasPrepend && (\n            <li key=\"prepend\" class=\"v-breadcrumbs__prepend\">\n              { !slots.prepend ? (\n                <VIcon\n                  key=\"prepend-icon\"\n                  start\n                  icon={ props.icon }\n                />\n              ) : (\n                <VDefaultsProvider\n                  key=\"prepend-defaults\"\n                  disabled={ !props.icon }\n                  defaults={{\n                    VIcon: {\n                      icon: props.icon,\n                      start: true,\n                    },\n                  }}\n                  v-slots:default={ slots.prepend }\n                />\n              )}\n            </li>\n          )}\n\n          { items.value.map(({ item, raw }, index, array) => (\n            <>\n              { slots.item?.({ item, index }) ?? (\n                <VBreadcrumbsItem\n                  key={ index }\n                  disabled={ index >= array.length - 1 }\n                  { ...(typeof item === 'string' ? { title: item } : item) }\n                  v-slots={{\n                    default: slots.title ? () => slots.title?.({ item, index }) : undefined,\n                  }}\n                />\n              )}\n\n              { index < array.length - 1 && (\n                <VBreadcrumbsDivider\n                  v-slots={{\n                    default: slots.divider ? () => slots.divider?.({ item: raw, index }) : undefined,\n                  }}\n                />\n              )}\n            </>\n          ))}\n\n          { slots.default?.() }\n        </props.tag>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VBreadcrumbs = InstanceType<typeof VBreadcrumbs>\n"]},"metadata":{},"sourceType":"module"}
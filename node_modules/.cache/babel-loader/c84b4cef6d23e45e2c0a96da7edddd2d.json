{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\"; // Components\n\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.js\";\nimport { VIcon } from \"../VIcon/index.js\"; // Composables\n\nimport { useBackgroundColor } from \"../../composables/color.js\";\nimport { makeComponentProps } from \"../../composables/component.js\";\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.js\";\nimport { IconValue } from \"../../composables/icons.js\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.js\";\nimport { makeSizeProps, useSize } from \"../../composables/size.js\"; // Utilities\n\nimport { toRef } from 'vue';\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.js\";\nexport const makeVTimelineDividerProps = propsFactory({\n  dotColor: String,\n  fillDot: Boolean,\n  hideDot: Boolean,\n  icon: IconValue,\n  iconColor: String,\n  lineColor: String,\n  ...makeComponentProps(),\n  ...makeRoundedProps(),\n  ...makeSizeProps(),\n  ...makeElevationProps()\n}, 'VTimelineDivider');\nexport const VTimelineDivider = genericComponent()({\n  name: 'VTimelineDivider',\n  props: makeVTimelineDividerProps(),\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      sizeClasses,\n      sizeStyles\n    } = useSize(props, 'v-timeline-divider__dot');\n    const {\n      backgroundColorStyles,\n      backgroundColorClasses\n    } = useBackgroundColor(toRef(props, 'dotColor'));\n    const {\n      roundedClasses\n    } = useRounded(props, 'v-timeline-divider__dot');\n    const {\n      elevationClasses\n    } = useElevation(props);\n    const {\n      backgroundColorClasses: lineColorClasses,\n      backgroundColorStyles: lineColorStyles\n    } = useBackgroundColor(toRef(props, 'lineColor'));\n    useRender(() => _createVNode(\"div\", {\n      \"class\": ['v-timeline-divider', {\n        'v-timeline-divider--fill-dot': props.fillDot\n      }, props.class],\n      \"style\": props.style\n    }, [_createVNode(\"div\", {\n      \"class\": ['v-timeline-divider__before', lineColorClasses.value],\n      \"style\": lineColorStyles.value\n    }, null), !props.hideDot && _createVNode(\"div\", {\n      \"key\": \"dot\",\n      \"class\": ['v-timeline-divider__dot', elevationClasses.value, roundedClasses.value, sizeClasses.value],\n      \"style\": sizeStyles.value\n    }, [_createVNode(\"div\", {\n      \"class\": ['v-timeline-divider__inner-dot', backgroundColorClasses.value, roundedClasses.value],\n      \"style\": backgroundColorStyles.value\n    }, [!slots.default ? _createVNode(VIcon, {\n      \"key\": \"icon\",\n      \"color\": props.iconColor,\n      \"icon\": props.icon,\n      \"size\": props.size\n    }, null) : _createVNode(VDefaultsProvider, {\n      \"key\": \"icon-defaults\",\n      \"disabled\": !props.icon,\n      \"defaults\": {\n        VIcon: {\n          color: props.iconColor,\n          icon: props.icon,\n          size: props.size\n        }\n      }\n    }, slots.default)])]), _createVNode(\"div\", {\n      \"class\": ['v-timeline-divider__after', lineColorClasses.value],\n      \"style\": lineColorStyles.value\n    }, null)]));\n    return {};\n  }\n\n});","map":{"version":3,"mappings":"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","names":["VDefaultsProvider","VIcon","useBackgroundColor","makeComponentProps","makeElevationProps","useElevation","IconValue","makeRoundedProps","useRounded","makeSizeProps","useSize","toRef","genericComponent","propsFactory","useRender","makeVTimelineDividerProps","dotColor","String","fillDot","Boolean","hideDot","icon","iconColor","lineColor","VTimelineDivider","name","props","setup","_ref","slots","sizeClasses","sizeStyles","backgroundColorStyles","backgroundColorClasses","roundedClasses","elevationClasses","lineColorClasses","lineColorStyles","class","style","value","_createVNode","default","size","color"],"sources":["../../../src/components/VTimeline/VTimelineDivider.tsx"],"sourcesContent":["// Components\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { useBackgroundColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { IconValue } from '@/composables/icons'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeSizeProps, useSize } from '@/composables/size'\n\n// Utilities\nimport { toRef } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVTimelineDividerProps = propsFactory({\n  dotColor: String,\n  fillDot: Boolean,\n  hideDot: Boolean,\n  icon: IconValue,\n  iconColor: String,\n  lineColor: String,\n\n  ...makeComponentProps(),\n  ...makeRoundedProps(),\n  ...makeSizeProps(),\n  ...makeElevationProps(),\n}, 'VTimelineDivider')\n\nexport const VTimelineDivider = genericComponent()({\n  name: 'VTimelineDivider',\n\n  props: makeVTimelineDividerProps(),\n\n  setup (props, { slots }) {\n    const { sizeClasses, sizeStyles } = useSize(props, 'v-timeline-divider__dot')\n    const { backgroundColorStyles, backgroundColorClasses } = useBackgroundColor(toRef(props, 'dotColor'))\n    const { roundedClasses } = useRounded(props, 'v-timeline-divider__dot')\n    const { elevationClasses } = useElevation(props)\n    const {\n      backgroundColorClasses: lineColorClasses,\n      backgroundColorStyles: lineColorStyles,\n    } = useBackgroundColor(toRef(props, 'lineColor'))\n\n    useRender(() => (\n      <div\n        class={[\n          'v-timeline-divider',\n          {\n            'v-timeline-divider--fill-dot': props.fillDot,\n          },\n          props.class,\n        ]}\n        style={ props.style }\n      >\n        <div\n          class={[\n            'v-timeline-divider__before',\n            lineColorClasses.value,\n          ]}\n          style={ lineColorStyles.value }\n        />\n\n        { !props.hideDot && (\n          <div\n            key=\"dot\"\n            class={[\n              'v-timeline-divider__dot',\n              elevationClasses.value,\n              roundedClasses.value,\n              sizeClasses.value,\n            ]}\n            style={ sizeStyles.value }\n          >\n            <div\n              class={[\n                'v-timeline-divider__inner-dot',\n                backgroundColorClasses.value,\n                roundedClasses.value,\n              ]}\n              style={ backgroundColorStyles.value }\n            >\n              { !slots.default ? (\n                <VIcon\n                  key=\"icon\"\n                  color={ props.iconColor }\n                  icon={ props.icon }\n                  size={ props.size }\n                />\n              ) : (\n                <VDefaultsProvider\n                  key=\"icon-defaults\"\n                  disabled={ !props.icon }\n                  defaults={{\n                    VIcon: {\n                      color: props.iconColor,\n                      icon: props.icon,\n                      size: props.size,\n                    },\n                  }}\n                  v-slots:default={ slots.default }\n                />\n              )}\n            </div>\n          </div>\n        )}\n\n        <div\n          class={[\n            'v-timeline-divider__after',\n            lineColorClasses.value,\n          ]}\n          style={ lineColorStyles.value }\n        />\n      </div>\n    ))\n\n    return {}\n  },\n})\n\nexport type VTimelineDivider = InstanceType<typeof VTimelineDivider>\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.string.fixed.js\";\nimport { createVNode as _createVNode } from \"vue\"; // Utilities\n\nimport { convertToUnit, defineFunctionalComponent } from \"../../util/index.js\"; // Types\n\nexport var VDataTableColumn = defineFunctionalComponent({\n  align: {\n    type: String,\n    default: 'start'\n  },\n  fixed: Boolean,\n  fixedOffset: [Number, String],\n  height: [Number, String],\n  lastFixed: Boolean,\n  noPadding: Boolean,\n  tag: String,\n  width: [Number, String],\n  maxWidth: [Number, String],\n  nowrap: Boolean\n}, function (props, _ref) {\n  var _props$tag;\n\n  var slots = _ref.slots;\n  var Tag = (_props$tag = props.tag) !== null && _props$tag !== void 0 ? _props$tag : 'td';\n  return _createVNode(Tag, {\n    \"class\": ['v-data-table__td', {\n      'v-data-table-column--fixed': props.fixed,\n      'v-data-table-column--last-fixed': props.lastFixed,\n      'v-data-table-column--no-padding': props.noPadding,\n      'v-data-table-column--nowrap': props.nowrap\n    }, \"v-data-table-column--align-\".concat(props.align)],\n    \"style\": {\n      height: convertToUnit(props.height),\n      width: convertToUnit(props.width),\n      maxWidth: convertToUnit(props.maxWidth),\n      left: convertToUnit(props.fixedOffset || null)\n    }\n  }, {\n    default: function _default() {\n      var _slots$default;\n\n      return [(_slots$default = slots.default) === null || _slots$default === void 0 ? void 0 : _slots$default.call(slots)];\n    }\n  });\n});","map":{"version":3,"mappings":";;mDAAA;;AAAA,SACSA,aADT,EACwBC,yBADxB,QACiD,qBADjD,C,CAGA;;AAGA,OAAO,IAAMC,gBAAgB,GAAGD,yBAAyB,CAAC;AACxDE,OAAK,EAAE;AACLC,QAAI,EAAEC,MADD;AAELC,WAAO,EAAE;AAFJ,GADiD;AAKxDC,OAAK,EAAEC,OALiD;AAMxDC,aAAW,EAAE,CAACC,MAAD,EAASL,MAAT,CAN2C;AAOxDM,QAAM,EAAE,CAACD,MAAD,EAASL,MAAT,CAPgD;AAQxDO,WAAS,EAAEJ,OAR6C;AASxDK,WAAS,EAAEL,OAT6C;AAUxDM,KAAG,EAAET,MAVmD;AAWxDU,OAAK,EAAE,CAACL,MAAD,EAASL,MAAT,CAXiD;AAYxDW,UAAQ,EAAE,CAACN,MAAD,EAASL,MAAT,CAZ8C;AAaxDY,QAAM,EAAET;AAbgD,CAAD,EActD,UAACU,KAAD,EAAMC,IAAN,EAAsB;AAAA;;AAAA,MAAZC,KAAY,GAALD,IAAK,CAAZC,KAAY;AACvB,MAAMC,GAAG,iBAAGH,KAAK,CAACJ,GAAT,mDAAgB,IAAzB;AACA;AAAA,aAEW,CACL,kBADK,EAEL;AACE,oCAA8BI,KAAK,CAACX,KADtC;AAEE,yCAAmCW,KAAK,CAACN,SAF3C;AAGE,yCAAmCM,KAAK,CAACL,SAH3C;AAIE,qCAA+BK,KAAK,CAACD;AAJvC,KAFK,uCAQyBC,KAAK,CAACf,KAR/B,EAFX;AAWK,aACM;AACLQ,YAAM,EAAEX,aAAa,CAACkB,KAAK,CAACP,MAAP,CADhB;AAELI,WAAK,EAAEf,aAAa,CAACkB,KAAK,CAACH,KAAP,CAFf;AAGLC,cAAQ,EAAEhB,aAAa,CAACkB,KAAK,CAACF,QAAP,CAHlB;AAILM,UAAI,EAAEtB,aAAa,CAACkB,KAAK,CAACT,WAANS,IAAqB,IAAtB;AAJd;AAZX,KAiBK;AAAAZ;AAAAA;;AAAAA,gCAECc,KAAK,CAACd,OAFP,mDAECc,yBAAK,CAFN;AAAAd;AAAA,GAjBL;AAsBD,CAtCwD,CAAlD","names":["convertToUnit","defineFunctionalComponent","VDataTableColumn","align","type","String","default","fixed","Boolean","fixedOffset","Number","height","lastFixed","noPadding","tag","width","maxWidth","nowrap","props","_ref","slots","Tag","left"],"sources":["../../../src/components/VDataTable/VDataTableColumn.tsx"],"sourcesContent":["// Utilities\nimport { convertToUnit, defineFunctionalComponent } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\nexport const VDataTableColumn = defineFunctionalComponent({\n  align: {\n    type: String as PropType<'start' | 'center' | 'end'>,\n    default: 'start',\n  },\n  fixed: Boolean,\n  fixedOffset: [Number, String],\n  height: [Number, String],\n  lastFixed: Boolean,\n  noPadding: Boolean,\n  tag: String,\n  width: [Number, String],\n  maxWidth: [Number, String],\n  nowrap: Boolean,\n}, (props, { slots }) => {\n  const Tag = props.tag ?? 'td'\n  return (\n    <Tag\n      class={[\n        'v-data-table__td',\n        {\n          'v-data-table-column--fixed': props.fixed,\n          'v-data-table-column--last-fixed': props.lastFixed,\n          'v-data-table-column--no-padding': props.noPadding,\n          'v-data-table-column--nowrap': props.nowrap,\n        },\n        `v-data-table-column--align-${props.align}`,\n      ]}\n      style={{\n        height: convertToUnit(props.height),\n        width: convertToUnit(props.width),\n        maxWidth: convertToUnit(props.maxWidth),\n        left: convertToUnit(props.fixedOffset || null),\n      }}\n    >\n      { slots.default?.() }\n    </Tag>\n  )\n})\n"]},"metadata":{},"sourceType":"module"}
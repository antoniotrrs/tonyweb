{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\"; // Styles\n\nimport \"./VDatePickerHeader.css\"; // Components\n\nimport { VBtn } from \"../VBtn/index.js\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.js\"; // Composables\n\nimport { useBackgroundColor } from \"../../composables/color.js\";\nimport { IconValue } from \"../../composables/icons.js\";\nimport { MaybeTransition } from \"../../composables/transition.js\"; // Utilities\n\nimport { EventProp, genericComponent, propsFactory, useRender } from \"../../util/index.js\"; // Types\n\nexport var makeVDatePickerHeaderProps = propsFactory({\n  appendIcon: IconValue,\n  color: String,\n  header: String,\n  transition: String,\n  onClick: EventProp()\n}, 'VDatePickerHeader');\nexport var VDatePickerHeader = genericComponent()({\n  name: 'VDatePickerHeader',\n  props: makeVDatePickerHeaderProps(),\n  emits: {\n    click: function click() {\n      return true;\n    },\n    'click:append': function clickAppend() {\n      return true;\n    }\n  },\n  setup: function setup(props, _ref) {\n    var emit = _ref.emit,\n        slots = _ref.slots;\n\n    var _useBackgroundColor = useBackgroundColor(props, 'color'),\n        backgroundColorClasses = _useBackgroundColor.backgroundColorClasses,\n        backgroundColorStyles = _useBackgroundColor.backgroundColorStyles;\n\n    function onClick() {\n      emit('click');\n    }\n\n    function onClickAppend() {\n      emit('click:append');\n    }\n\n    useRender(function () {\n      var hasContent = !!(slots.default || props.header);\n      var hasAppend = !!(slots.append || props.appendIcon);\n      return _createVNode(\"div\", {\n        \"class\": ['v-date-picker-header', {\n          'v-date-picker-header--clickable': !!props.onClick\n        }, backgroundColorClasses.value],\n        \"style\": backgroundColorStyles.value,\n        \"onClick\": onClick\n      }, [slots.prepend && _createVNode(\"div\", {\n        \"key\": \"prepend\",\n        \"class\": \"v-date-picker-header__prepend\"\n      }, [slots.prepend()]), hasContent && _createVNode(MaybeTransition, {\n        \"key\": \"content\",\n        \"name\": props.transition\n      }, {\n        default: function _default() {\n          var _slots$default, _slots$default2;\n\n          return [_createVNode(\"div\", {\n            \"key\": props.header,\n            \"class\": \"v-date-picker-header__content\"\n          }, [(_slots$default = (_slots$default2 = slots.default) === null || _slots$default2 === void 0 ? void 0 : _slots$default2.call(slots)) !== null && _slots$default !== void 0 ? _slots$default : props.header])];\n        }\n      }), hasAppend && _createVNode(\"div\", {\n        \"class\": \"v-date-picker-header__append\"\n      }, [!slots.append ? _createVNode(VBtn, {\n        \"key\": \"append-btn\",\n        \"icon\": props.appendIcon,\n        \"variant\": \"text\",\n        \"onClick\": onClickAppend\n      }, null) : _createVNode(VDefaultsProvider, {\n        \"key\": \"append-defaults\",\n        \"disabled\": !props.appendIcon,\n        \"defaults\": {\n          VBtn: {\n            icon: props.appendIcon,\n            variant: 'text'\n          }\n        }\n      }, {\n        default: function _default() {\n          var _slots$append;\n\n          return [(_slots$append = slots.append) === null || _slots$append === void 0 ? void 0 : _slots$append.call(slots)];\n        }\n      })])]);\n    });\n    return {};\n  }\n});","map":{"version":3,"mappings":"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","names":["VBtn","VDefaultsProvider","useBackgroundColor","IconValue","MaybeTransition","EventProp","genericComponent","propsFactory","useRender","makeVDatePickerHeaderProps","appendIcon","color","String","header","transition","onClick","VDatePickerHeader","name","props","emits","click","click:append","setup","_ref","emit","slots","backgroundColorClasses","backgroundColorStyles","onClickAppend","hasContent","default","hasAppend","append","value","prepend","_createVNode","icon","variant"],"sources":["../../../src/components/VDatePicker/VDatePickerHeader.tsx"],"sourcesContent":["// Styles\nimport './VDatePickerHeader.sass'\n\n// Components\nimport { VBtn } from '@/components/VBtn'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\n\n// Composables\nimport { useBackgroundColor } from '@/composables/color'\nimport { IconValue } from '@/composables/icons'\nimport { MaybeTransition } from '@/composables/transition'\n\n// Utilities\nimport { EventProp, genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nexport type VDatePickerHeaderSlots = {\n  prepend: never\n  default: never\n  append: never\n}\n\nexport const makeVDatePickerHeaderProps = propsFactory({\n  appendIcon: IconValue,\n  color: String,\n  header: String,\n  transition: String,\n  onClick: EventProp<[MouseEvent]>(),\n}, 'VDatePickerHeader')\n\nexport const VDatePickerHeader = genericComponent<VDatePickerHeaderSlots>()({\n  name: 'VDatePickerHeader',\n\n  props: makeVDatePickerHeaderProps(),\n\n  emits: {\n    click: () => true,\n    'click:append': () => true,\n  },\n\n  setup (props, { emit, slots }) {\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(props, 'color')\n\n    function onClick () {\n      emit('click')\n    }\n\n    function onClickAppend () {\n      emit('click:append')\n    }\n\n    useRender(() => {\n      const hasContent = !!(slots.default || props.header)\n      const hasAppend = !!(slots.append || props.appendIcon)\n\n      return (\n        <div\n          class={[\n            'v-date-picker-header',\n            {\n              'v-date-picker-header--clickable': !!props.onClick,\n            },\n            backgroundColorClasses.value,\n          ]}\n          style={ backgroundColorStyles.value }\n          onClick={ onClick }\n        >\n          { slots.prepend && (\n            <div key=\"prepend\" class=\"v-date-picker-header__prepend\">\n              { slots.prepend() }\n            </div>\n          )}\n\n          { hasContent && (\n            <MaybeTransition key=\"content\" name={ props.transition }>\n              <div key={ props.header } class=\"v-date-picker-header__content\">\n                { slots.default?.() ?? props.header }\n              </div>\n            </MaybeTransition>\n          )}\n\n          { hasAppend && (\n            <div class=\"v-date-picker-header__append\">\n              { !slots.append ? (\n                <VBtn\n                  key=\"append-btn\"\n                  icon={ props.appendIcon }\n                  variant=\"text\"\n                  onClick={ onClickAppend }\n                />\n              ) : (\n                <VDefaultsProvider\n                  key=\"append-defaults\"\n                  disabled={ !props.appendIcon }\n                  defaults={{\n                    VBtn: {\n                      icon: props.appendIcon,\n                      variant: 'text',\n                    },\n                  }}\n                >\n                  { slots.append?.() }\n                </VDefaultsProvider>\n              )}\n            </div>\n          )}\n        </div>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VDatePickerHeader = InstanceType<typeof VDatePickerHeader>\n"]},"metadata":{},"sourceType":"module"}
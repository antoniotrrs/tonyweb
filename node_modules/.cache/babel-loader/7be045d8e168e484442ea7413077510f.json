{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\"; // Components\n\nimport { VIcon } from \"../VIcon/index.js\"; // Composables\n\nimport { useLocale } from \"../../composables/locale.js\"; // Utilities\n\nimport { callEvent } from \"../../util/index.js\"; // Types\n\nexport function useInputIcon(props) {\n  const {\n    t\n  } = useLocale();\n\n  function InputIcon(_ref) {\n    let {\n      name,\n      color\n    } = _ref;\n    const localeKey = {\n      prepend: 'prependAction',\n      prependInner: 'prependAction',\n      append: 'appendAction',\n      appendInner: 'appendAction',\n      clear: 'clear'\n    }[name];\n    const listener = props[`onClick:${name}`];\n\n    function onKeydown(e) {\n      if (e.key !== 'Enter' && e.key !== ' ') return;\n      e.preventDefault();\n      e.stopPropagation();\n      callEvent(listener, new PointerEvent('click', e));\n    }\n\n    const label = listener && localeKey ? t(`$vuetify.input.${localeKey}`, props.label ?? '') : undefined;\n    return _createVNode(VIcon, {\n      \"icon\": props[`${name}Icon`],\n      \"aria-label\": label,\n      \"onClick\": listener,\n      \"onKeydown\": onKeydown,\n      \"color\": color\n    }, null);\n  }\n\n  return {\n    InputIcon\n  };\n}","map":{"version":3,"mappings":"mDAAA;;AAAA,SACSA,KADT,QACc,mBADd,C,CAGA;;AAAA,SACSC,SADT,QACkB,6BADlB,C,CAGA;;AAAA,SACSC,SADT,QACkB,qBADlB,C,CAGA;;AAgBA,OAAO,SAASC,YAAT,CAAqEC,KAArE,EAAmG;AACxG,QAAM;AAAEC;AAAF,MAAQJ,SAAS,EAAvB;;AAEA,WAASK,SAAT,CAAkBC,IAAlB,EAAkF;AAAA,QAA9D;AAAEC,UAAF;AAAQC;AAAR,QAA4DF,IAAE;AAChF,UAAMG,SAAS,GAAG;AAChBC,aAAO,EAAE,eADO;AAEhBC,kBAAY,EAAE,eAFE;AAGhBC,YAAM,EAAE,cAHQ;AAIhBC,iBAAW,EAAE,cAJG;AAKhBC,WAAK,EAAE;AALS,MAMhBP,IANgB,CAAlB;AAOA,UAAMQ,QAAQ,GAAGZ,KAAK,CAAC,WAAWI,IAAI,EAAhB,CAAtB;;AAEA,aAASS,SAAT,CAAoBC,CAApB,EAAsC;AACpC,UAAIA,CAAC,CAACC,GAAFD,KAAU,OAAVA,IAAqBA,CAAC,CAACC,GAAFD,KAAU,GAAnC,EAAwC;AAExCA,OAAC,CAACE,cAAFF;AACAA,OAAC,CAACG,eAAFH;AACAhB,eAAS,CAACc,QAAD,EAAW,IAAIM,YAAJ,CAAiB,OAAjB,EAA0BJ,CAA1B,CAAX,CAAThB;AACF;;AAEA,UAAMqB,KAAK,GAAGP,QAAQ,IAAIN,SAAZM,GACVX,CAAC,CAAC,kBAAkBK,SAAS,EAA5B,EAAgCN,KAAK,CAACmB,KAANnB,IAAe,EAA/C,CADSY,GAEVQ,SAFJ;AAIA;AAAA,cAEWpB,KAAK,CAAC,GAAGI,IAAI,MAAR,CAFhB;AAE+B,oBACde,KAHjB;AAGsB,iBACRP,QAJd;AAIsB,mBACNC,SALhB;AAKyB,eACbR;AANZ,OAMiB,IANjB;AASF;;AAEA,SAAO;AAAEH;AAAF,GAAP;AACF","names":["VIcon","useLocale","callEvent","useInputIcon","props","t","InputIcon","_ref","name","color","localeKey","prepend","prependInner","append","appendInner","clear","listener","onKeydown","e","key","preventDefault","stopPropagation","PointerEvent","label","undefined"],"sources":["../../../src/components/VInput/InputIcon.tsx"],"sourcesContent":["// Components\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { useLocale } from '@/composables/locale'\n\n// Utilities\nimport { callEvent } from '@/util'\n\n// Types\nimport type { IconValue } from '@/composables/icons'\nimport type { EventProp } from '@/util'\n\ntype names = 'clear' | 'prepend' | 'append' | 'appendInner' | 'prependInner'\n\ntype InputIconProps<T extends names> = {\n  label: string | undefined\n} & {\n  [K in `${T}Icon`]: IconValue | undefined\n} & {\n  [K in `onClick:${T}`]: EventProp | undefined\n}\n\ntype Listeners<T extends {}, U = keyof T> = U extends `onClick:${infer V extends names}` ? V : never\n\nexport function useInputIcon<T extends {}, K extends names = Listeners<T>> (props: T & InputIconProps<K>) {\n  const { t } = useLocale()\n\n  function InputIcon ({ name, color }: { name: Extract<names, K>, color?: string }) {\n    const localeKey = {\n      prepend: 'prependAction',\n      prependInner: 'prependAction',\n      append: 'appendAction',\n      appendInner: 'appendAction',\n      clear: 'clear',\n    }[name]\n    const listener = props[`onClick:${name}`] as EventProp | undefined\n\n    function onKeydown (e: KeyboardEvent) {\n      if (e.key !== 'Enter' && e.key !== ' ') return\n\n      e.preventDefault()\n      e.stopPropagation()\n      callEvent(listener, new PointerEvent('click', e))\n    }\n\n    const label = listener && localeKey\n      ? t(`$vuetify.input.${localeKey}`, props.label ?? '')\n      : undefined\n\n    return (\n      <VIcon\n        icon={ props[`${name}Icon`] }\n        aria-label={ label }\n        onClick={ listener }\n        onKeydown={ onKeydown }\n        color={ color }\n      />\n    )\n  }\n\n  return { InputIcon }\n}\n"]},"metadata":{},"sourceType":"module"}
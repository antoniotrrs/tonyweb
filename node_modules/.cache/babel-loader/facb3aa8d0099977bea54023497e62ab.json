{"ast":null,"code":"import _defineProperty from \"/Users/antoniotorres/Documents/tony/tonyweb/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _toConsumableArray from \"/Users/antoniotorres/Documents/tony/tonyweb/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"/Users/antoniotorres/Documents/tony/tonyweb/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport { Fragment as _Fragment, createVNode as _createVNode, mergeProps as _mergeProps, createTextVNode as _createTextVNode } from \"vue\"; // Styles\n\nimport \"./VSelect.css\"; // Components\n\nimport { VDialogTransition } from \"../transitions/index.js\";\nimport { VAvatar } from \"../VAvatar/index.js\";\nimport { VCheckboxBtn } from \"../VCheckbox/index.js\";\nimport { VChip } from \"../VChip/index.js\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.js\";\nimport { VIcon } from \"../VIcon/index.js\";\nimport { VList, VListItem } from \"../VList/index.js\";\nimport { VMenu } from \"../VMenu/index.js\";\nimport { makeVTextFieldProps, VTextField } from \"../VTextField/VTextField.js\";\nimport { VVirtualScroll } from \"../VVirtualScroll/index.js\"; // Composables\n\nimport { useScrolling } from \"./useScrolling.js\";\nimport { useForm } from \"../../composables/form.js\";\nimport { forwardRefs } from \"../../composables/forwardRefs.js\";\nimport { IconValue } from \"../../composables/icons.js\";\nimport { makeItemsProps, useItems } from \"../../composables/list-items.js\";\nimport { useLocale } from \"../../composables/locale.js\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.js\";\nimport { makeTransitionProps } from \"../../composables/transition.js\"; // Utilities\n\nimport { computed, mergeProps, nextTick, ref, shallowRef, watch } from 'vue';\nimport { checkPrintable, deepEqual, ensureValidVNode, genericComponent, IN_BROWSER, matchesSelector, omit, propsFactory, useRender, wrapInArray } from \"../../util/index.js\"; // Types\n\nexport var makeSelectProps = propsFactory(_objectSpread({\n  chips: Boolean,\n  closableChips: Boolean,\n  closeText: {\n    type: String,\n    default: '$vuetify.close'\n  },\n  openText: {\n    type: String,\n    default: '$vuetify.open'\n  },\n  eager: Boolean,\n  hideNoData: Boolean,\n  hideSelected: Boolean,\n  listProps: {\n    type: Object\n  },\n  menu: Boolean,\n  menuIcon: {\n    type: IconValue,\n    default: '$dropdown'\n  },\n  menuProps: {\n    type: Object\n  },\n  multiple: Boolean,\n  noDataText: {\n    type: String,\n    default: '$vuetify.noDataText'\n  },\n  openOnClear: Boolean,\n  itemColor: String\n}, makeItemsProps({\n  itemChildren: false\n})), 'Select');\nexport var makeVSelectProps = propsFactory(_objectSpread(_objectSpread(_objectSpread({}, makeSelectProps()), omit(makeVTextFieldProps({\n  modelValue: null,\n  role: 'combobox'\n}), ['validationValue', 'dirty', 'appendInnerIcon'])), makeTransitionProps({\n  transition: {\n    component: VDialogTransition\n  }\n})), 'VSelect');\nexport var VSelect = genericComponent()({\n  name: 'VSelect',\n  props: makeVSelectProps(),\n  emits: {\n    'update:focused': function updateFocused(focused) {\n      return true;\n    },\n    'update:modelValue': function updateModelValue(value) {\n      return true;\n    },\n    'update:menu': function updateMenu(ue) {\n      return true;\n    }\n  },\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n\n    var _useLocale = useLocale(),\n        t = _useLocale.t;\n\n    var vTextFieldRef = ref();\n    var vMenuRef = ref();\n    var vVirtualScrollRef = ref();\n\n    var _useItems = useItems(props),\n        items = _useItems.items,\n        transformIn = _useItems.transformIn,\n        transformOut = _useItems.transformOut;\n\n    var model = useProxiedModel(props, 'modelValue', [], function (v) {\n      return transformIn(v === null ? [null] : wrapInArray(v));\n    }, function (v) {\n      var _transformed$;\n\n      var transformed = transformOut(v);\n      return props.multiple ? transformed : (_transformed$ = transformed[0]) !== null && _transformed$ !== void 0 ? _transformed$ : null;\n    });\n    var counterValue = computed(function () {\n      return typeof props.counterValue === 'function' ? props.counterValue(model.value) : typeof props.counterValue === 'number' ? props.counterValue : model.value.length;\n    });\n    var form = useForm(props);\n    var selectedValues = computed(function () {\n      return model.value.map(function (selection) {\n        return selection.value;\n      });\n    });\n    var isFocused = shallowRef(false);\n    var keyboardLookupPrefix = '';\n    var keyboardLookupLastTime;\n    var displayItems = computed(function () {\n      if (props.hideSelected) {\n        return items.value.filter(function (item) {\n          return !model.value.some(function (s) {\n            return (props.valueComparator || deepEqual)(s, item);\n          });\n        });\n      }\n\n      return items.value;\n    });\n    var menuDisabled = computed(function () {\n      return props.hideNoData && !displayItems.value.length || form.isReadonly.value || form.isDisabled.value;\n    });\n\n    var _menu = useProxiedModel(props, 'menu');\n\n    var menu = computed({\n      get: function get() {\n        return _menu.value;\n      },\n      set: function set(v) {\n        var _vMenuRef$value;\n\n        if (_menu.value && !v && (_vMenuRef$value = vMenuRef.value) !== null && _vMenuRef$value !== void 0 && _vMenuRef$value.Î¨openChildren.size) return;\n        if (v && menuDisabled.value) return;\n        _menu.value = v;\n      }\n    });\n    var label = computed(function () {\n      return menu.value ? props.closeText : props.openText;\n    });\n    var computedMenuProps = computed(function () {\n      var _props$menuProps;\n\n      return _objectSpread(_objectSpread({}, props.menuProps), {}, {\n        activatorProps: _objectSpread(_objectSpread({}, ((_props$menuProps = props.menuProps) === null || _props$menuProps === void 0 ? void 0 : _props$menuProps.activatorProps) || {}), {}, {\n          'aria-haspopup': 'listbox' // Set aria-haspopup to 'listbox'\n\n        })\n      });\n    });\n    var listRef = ref();\n    var listEvents = useScrolling(listRef, vTextFieldRef);\n\n    function onClear(e) {\n      if (props.openOnClear) {\n        menu.value = true;\n      }\n    }\n\n    function onMousedownControl() {\n      if (menuDisabled.value) return;\n      menu.value = !menu.value;\n    }\n\n    function onListKeydown(e) {\n      if (checkPrintable(e)) {\n        onKeydown(e);\n      }\n    }\n\n    function onKeydown(e) {\n      if (!e.key || form.isReadonly.value) return;\n\n      if (['Enter', ' ', 'ArrowDown', 'ArrowUp', 'Home', 'End'].includes(e.key)) {\n        e.preventDefault();\n      }\n\n      if (['Enter', 'ArrowDown', ' '].includes(e.key)) {\n        menu.value = true;\n      }\n\n      if (['Escape', 'Tab'].includes(e.key)) {\n        menu.value = false;\n      }\n\n      if (e.key === 'Home') {\n        var _listRef$value;\n\n        (_listRef$value = listRef.value) === null || _listRef$value === void 0 ? void 0 : _listRef$value.focus('first');\n      } else if (e.key === 'End') {\n        var _listRef$value2;\n\n        (_listRef$value2 = listRef.value) === null || _listRef$value2 === void 0 ? void 0 : _listRef$value2.focus('last');\n      } // html select hotkeys\n\n\n      var KEYBOARD_LOOKUP_THRESHOLD = 1000; // milliseconds\n\n      if (!checkPrintable(e)) return;\n      var now = performance.now();\n\n      if (now - keyboardLookupLastTime > KEYBOARD_LOOKUP_THRESHOLD) {\n        keyboardLookupPrefix = '';\n      }\n\n      keyboardLookupPrefix += e.key.toLowerCase();\n      keyboardLookupLastTime = now;\n      var item = items.value.find(function (item) {\n        return item.title.toLowerCase().startsWith(keyboardLookupPrefix);\n      });\n\n      if (item !== undefined) {\n        model.value = [item];\n        var index = displayItems.value.indexOf(item);\n        IN_BROWSER && window.requestAnimationFrame(function () {\n          var _vVirtualScrollRef$va;\n\n          index >= 0 && ((_vVirtualScrollRef$va = vVirtualScrollRef.value) === null || _vVirtualScrollRef$va === void 0 ? void 0 : _vVirtualScrollRef$va.scrollToIndex(index));\n        });\n      }\n    }\n    /** @param set - null means toggle */\n\n\n    function select(item) {\n      var set = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      if (item.props.disabled) return;\n\n      if (props.multiple) {\n        var index = model.value.findIndex(function (selection) {\n          return (props.valueComparator || deepEqual)(selection.value, item.value);\n        });\n        var add = set == null ? !~index : set;\n\n        if (~index) {\n          var value = add ? [].concat(_toConsumableArray(model.value), [item]) : _toConsumableArray(model.value);\n          value.splice(index, 1);\n          model.value = value;\n        } else if (add) {\n          model.value = [].concat(_toConsumableArray(model.value), [item]);\n        }\n      } else {\n        var _add = set !== false;\n\n        model.value = _add ? [item] : [];\n        nextTick(function () {\n          menu.value = false;\n        });\n      }\n    }\n\n    function onBlur(e) {\n      var _listRef$value3;\n\n      if (!((_listRef$value3 = listRef.value) !== null && _listRef$value3 !== void 0 && _listRef$value3.$el.contains(e.relatedTarget))) {\n        menu.value = false;\n      }\n    }\n\n    function onAfterEnter() {\n      if (props.eager) {\n        var _vVirtualScrollRef$va2;\n\n        (_vVirtualScrollRef$va2 = vVirtualScrollRef.value) === null || _vVirtualScrollRef$va2 === void 0 ? void 0 : _vVirtualScrollRef$va2.calculateVisibleItems();\n      }\n    }\n\n    function onAfterLeave() {\n      if (isFocused.value) {\n        var _vTextFieldRef$value;\n\n        (_vTextFieldRef$value = vTextFieldRef.value) === null || _vTextFieldRef$value === void 0 ? void 0 : _vTextFieldRef$value.focus();\n      }\n    }\n\n    function onFocusin(e) {\n      isFocused.value = true;\n    }\n\n    function onModelUpdate(v) {\n      if (v == null) model.value = [];else if (matchesSelector(vTextFieldRef.value, ':autofill') || matchesSelector(vTextFieldRef.value, ':-webkit-autofill')) {\n        var item = items.value.find(function (item) {\n          return item.title === v;\n        });\n\n        if (item) {\n          select(item);\n        }\n      } else if (vTextFieldRef.value) {\n        vTextFieldRef.value.value = '';\n      }\n    }\n\n    watch(menu, function () {\n      if (!props.hideSelected && menu.value && model.value.length) {\n        var index = displayItems.value.findIndex(function (item) {\n          return model.value.some(function (s) {\n            return (props.valueComparator || deepEqual)(s.value, item.value);\n          });\n        });\n        IN_BROWSER && window.requestAnimationFrame(function () {\n          var _vVirtualScrollRef$va3;\n\n          index >= 0 && ((_vVirtualScrollRef$va3 = vVirtualScrollRef.value) === null || _vVirtualScrollRef$va3 === void 0 ? void 0 : _vVirtualScrollRef$va3.scrollToIndex(index));\n        });\n      }\n    });\n    watch(function () {\n      return props.items;\n    }, function (newVal, oldVal) {\n      if (menu.value) return;\n\n      if (isFocused.value && !oldVal.length && newVal.length) {\n        menu.value = true;\n      }\n    });\n    useRender(function () {\n      var _ref4;\n\n      var hasChips = !!(props.chips || slots.chip);\n      var hasList = !!(!props.hideNoData || displayItems.value.length || slots['prepend-item'] || slots['append-item'] || slots['no-data']);\n      var isDirty = model.value.length > 0;\n      var textFieldProps = VTextField.filterProps(props);\n      var placeholder = isDirty || !isFocused.value && props.label && !props.persistentPlaceholder ? undefined : props.placeholder;\n      return _createVNode(VTextField, _mergeProps({\n        \"ref\": vTextFieldRef\n      }, textFieldProps, {\n        \"modelValue\": model.value.map(function (v) {\n          return v.props.value;\n        }).join(', '),\n        \"onUpdate:modelValue\": onModelUpdate,\n        \"focused\": isFocused.value,\n        \"onUpdate:focused\": function onUpdateFocused($event) {\n          return isFocused.value = $event;\n        },\n        \"validationValue\": model.externalValue,\n        \"counterValue\": counterValue.value,\n        \"dirty\": isDirty,\n        \"class\": ['v-select', (_ref4 = {\n          'v-select--active-menu': menu.value,\n          'v-select--chips': !!props.chips\n        }, _defineProperty(_ref4, \"v-select--\".concat(props.multiple ? 'multiple' : 'single'), true), _defineProperty(_ref4, 'v-select--selected', model.value.length), _defineProperty(_ref4, 'v-select--selection-slot', !!slots.selection), _ref4), props.class],\n        \"style\": props.style,\n        \"inputmode\": \"none\",\n        \"placeholder\": placeholder,\n        \"onClick:clear\": onClear,\n        \"onMousedown:control\": onMousedownControl,\n        \"onBlur\": onBlur,\n        \"onKeydown\": onKeydown,\n        \"aria-label\": t(label.value),\n        \"title\": t(label.value)\n      }), _objectSpread(_objectSpread({}, slots), {}, {\n        default: function _default() {\n          return _createVNode(_Fragment, null, [_createVNode(VMenu, _mergeProps({\n            \"ref\": vMenuRef,\n            \"modelValue\": menu.value,\n            \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n              return menu.value = $event;\n            },\n            \"activator\": \"parent\",\n            \"contentClass\": \"v-select__content\",\n            \"disabled\": menuDisabled.value,\n            \"eager\": props.eager,\n            \"maxHeight\": 310,\n            \"openOnClick\": false,\n            \"closeOnContentClick\": false,\n            \"transition\": props.transition,\n            \"onAfterEnter\": onAfterEnter,\n            \"onAfterLeave\": onAfterLeave\n          }, computedMenuProps.value), {\n            default: function _default() {\n              var _props$itemColor;\n\n              return [hasList && _createVNode(VList, _mergeProps({\n                \"ref\": listRef,\n                \"selected\": selectedValues.value,\n                \"selectStrategy\": props.multiple ? 'independent' : 'single-independent',\n                \"onMousedown\": function onMousedown(e) {\n                  return e.preventDefault();\n                },\n                \"onKeydown\": onListKeydown,\n                \"onFocusin\": onFocusin,\n                \"tabindex\": \"-1\",\n                \"aria-live\": \"polite\",\n                \"color\": (_props$itemColor = props.itemColor) !== null && _props$itemColor !== void 0 ? _props$itemColor : props.color\n              }, listEvents, props.listProps), {\n                default: function _default() {\n                  var _slots$prependItem, _slots$noData, _slots$noData2, _slots$appendItem;\n\n                  return [(_slots$prependItem = slots['prepend-item']) === null || _slots$prependItem === void 0 ? void 0 : _slots$prependItem.call(slots), !displayItems.value.length && !props.hideNoData && ((_slots$noData = (_slots$noData2 = slots['no-data']) === null || _slots$noData2 === void 0 ? void 0 : _slots$noData2.call(slots)) !== null && _slots$noData !== void 0 ? _slots$noData : _createVNode(VListItem, {\n                    \"key\": \"no-data\",\n                    \"title\": t(props.noDataText)\n                  }, null)), _createVNode(VVirtualScroll, {\n                    \"ref\": vVirtualScrollRef,\n                    \"renderless\": true,\n                    \"items\": displayItems.value,\n                    \"itemKey\": \"value\"\n                  }, {\n                    default: function _default(_ref2) {\n                      var _slots$item, _slots$item2;\n\n                      var item = _ref2.item,\n                          index = _ref2.index,\n                          itemRef = _ref2.itemRef;\n                      var itemProps = mergeProps(item.props, {\n                        ref: itemRef,\n                        key: item.value,\n                        onClick: function onClick() {\n                          return select(item, null);\n                        }\n                      });\n                      return (_slots$item = (_slots$item2 = slots.item) === null || _slots$item2 === void 0 ? void 0 : _slots$item2.call(slots, {\n                        item: item,\n                        index: index,\n                        props: itemProps\n                      })) !== null && _slots$item !== void 0 ? _slots$item : _createVNode(VListItem, _mergeProps(itemProps, {\n                        \"role\": \"option\"\n                      }), {\n                        prepend: function prepend(_ref3) {\n                          var isSelected = _ref3.isSelected;\n                          return _createVNode(_Fragment, null, [props.multiple && !props.hideSelected ? _createVNode(VCheckboxBtn, {\n                            \"key\": item.value,\n                            \"modelValue\": isSelected,\n                            \"ripple\": false,\n                            \"tabindex\": \"-1\"\n                          }, null) : undefined, item.props.prependAvatar && _createVNode(VAvatar, {\n                            \"image\": item.props.prependAvatar\n                          }, null), item.props.prependIcon && _createVNode(VIcon, {\n                            \"icon\": item.props.prependIcon\n                          }, null)]);\n                        }\n                      });\n                    }\n                  }), (_slots$appendItem = slots['append-item']) === null || _slots$appendItem === void 0 ? void 0 : _slots$appendItem.call(slots)];\n                }\n              })];\n            }\n          }), model.value.map(function (item, index) {\n            function onChipClose(e) {\n              e.stopPropagation();\n              e.preventDefault();\n              select(item, false);\n            }\n\n            var slotProps = {\n              'onClick:close': onChipClose,\n              onKeydown: function onKeydown(e) {\n                if (e.key !== 'Enter' && e.key !== ' ') return;\n                e.preventDefault();\n                e.stopPropagation();\n                onChipClose(e);\n              },\n              onMousedown: function onMousedown(e) {\n                e.preventDefault();\n                e.stopPropagation();\n              },\n              modelValue: true,\n              'onUpdate:modelValue': undefined\n            };\n            var hasSlot = hasChips ? !!slots.chip : !!slots.selection;\n            var slotContent = hasSlot ? ensureValidVNode(hasChips ? slots.chip({\n              item: item,\n              index: index,\n              props: slotProps\n            }) : slots.selection({\n              item: item,\n              index: index\n            })) : undefined;\n            if (hasSlot && !slotContent) return undefined;\n            return _createVNode(\"div\", {\n              \"key\": item.value,\n              \"class\": \"v-select__selection\"\n            }, [hasChips ? !slots.chip ? _createVNode(VChip, _mergeProps({\n              \"key\": \"chip\",\n              \"closable\": props.closableChips,\n              \"size\": \"small\",\n              \"text\": item.title,\n              \"disabled\": item.props.disabled\n            }, slotProps), null) : _createVNode(VDefaultsProvider, {\n              \"key\": \"chip-defaults\",\n              \"defaults\": {\n                VChip: {\n                  closable: props.closableChips,\n                  size: 'small',\n                  text: item.title\n                }\n              }\n            }, {\n              default: function _default() {\n                return [slotContent];\n              }\n            }) : slotContent !== null && slotContent !== void 0 ? slotContent : _createVNode(\"span\", {\n              \"class\": \"v-select__selection-text\"\n            }, [item.title, props.multiple && index < model.value.length - 1 && _createVNode(\"span\", {\n              \"class\": \"v-select__selection-comma\"\n            }, [_createTextVNode(\",\")])])]);\n          })]);\n        },\n        'append-inner': function appendInner() {\n          var _slots$appendInner, _vTextFieldRef$value2;\n\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          return _createVNode(_Fragment, null, [(_slots$appendInner = slots['append-inner']) === null || _slots$appendInner === void 0 ? void 0 : _slots$appendInner.call.apply(_slots$appendInner, [slots].concat(args)), props.menuIcon ? _createVNode(VIcon, {\n            \"class\": \"v-select__menu-icon\",\n            \"color\": (_vTextFieldRef$value2 = vTextFieldRef.value) === null || _vTextFieldRef$value2 === void 0 ? void 0 : _vTextFieldRef$value2.fieldIconColor,\n            \"icon\": props.menuIcon\n          }, null) : undefined]);\n        }\n      }));\n    });\n    return forwardRefs({\n      isFocused: isFocused,\n      menu: menu,\n      select: select\n    }, vTextFieldRef);\n  }\n});","map":{"version":3,"mappings":"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","names":["VDialogTransition","VAvatar","VCheckboxBtn","VChip","VDefaultsProvider","VIcon","VList","VListItem","VMenu","makeVTextFieldProps","VTextField","VVirtualScroll","useScrolling","useForm","forwardRefs","IconValue","makeItemsProps","useItems","useLocale","useProxiedModel","makeTransitionProps","computed","mergeProps","nextTick","ref","shallowRef","watch","checkPrintable","deepEqual","ensureValidVNode","genericComponent","IN_BROWSER","matchesSelector","omit","propsFactory","useRender","wrapInArray","makeSelectProps","chips","Boolean","closableChips","closeText","type","String","default","openText","eager","hideNoData","hideSelected","listProps","Object","menu","menuIcon","menuProps","multiple","noDataText","openOnClear","itemColor","itemChildren","makeVSelectProps","modelValue","role","transition","component","VSelect","name","props","emits","focused","value","ue","setup","_ref","slots","t","vTextFieldRef","vMenuRef","vVirtualScrollRef","items","transformIn","transformOut","model","v","transformed","counterValue","length","form","selectedValues","map","selection","isFocused","keyboardLookupPrefix","keyboardLookupLastTime","displayItems","filter","item","some","s","valueComparator","menuDisabled","isReadonly","isDisabled","_menu","get","set","Î¨openChildren","size","label","computedMenuProps","activatorProps","listRef","listEvents","onClear","e","onMousedownControl","onListKeydown","onKeydown","key","includes","preventDefault","focus","KEYBOARD_LOOKUP_THRESHOLD","now","performance","toLowerCase","find","title","startsWith","undefined","index","indexOf","window","requestAnimationFrame","scrollToIndex","select","disabled","findIndex","add","splice","onBlur","$el","contains","relatedTarget","onAfterEnter","calculateVisibleItems","onAfterLeave","onFocusin","onModelUpdate","newVal","oldVal","hasChips","chip","hasList","isDirty","textFieldProps","filterProps","placeholder","persistentPlaceholder","join","$event","externalValue","class","style","color","_createVNode","_ref2","itemRef","itemProps","onClick","prepend","_ref3","isSelected","prependAvatar","prependIcon","onChipClose","stopPropagation","slotProps","onMousedown","hasSlot","slotContent","closable","text","args","_key","arguments","fieldIconColor"],"sources":["../../../src/components/VSelect/VSelect.tsx"],"sourcesContent":["// Styles\nimport './VSelect.sass'\n\n// Components\nimport { VDialogTransition } from '@/components/transitions'\nimport { VAvatar } from '@/components/VAvatar'\nimport { VCheckboxBtn } from '@/components/VCheckbox'\nimport { VChip } from '@/components/VChip'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VIcon } from '@/components/VIcon'\nimport { VList, VListItem } from '@/components/VList'\nimport { VMenu } from '@/components/VMenu'\nimport { makeVTextFieldProps, VTextField } from '@/components/VTextField/VTextField'\nimport { VVirtualScroll } from '@/components/VVirtualScroll'\n\n// Composables\nimport { useScrolling } from './useScrolling'\nimport { useForm } from '@/composables/form'\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { IconValue } from '@/composables/icons'\nimport { makeItemsProps, useItems } from '@/composables/list-items'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { makeTransitionProps } from '@/composables/transition'\n\n// Utilities\nimport { computed, mergeProps, nextTick, ref, shallowRef, watch } from 'vue'\nimport {\n  checkPrintable,\n  deepEqual,\n  ensureValidVNode,\n  genericComponent,\n  IN_BROWSER,\n  matchesSelector,\n  omit,\n  propsFactory,\n  useRender,\n  wrapInArray,\n} from '@/util'\n\n// Types\nimport type { Component, PropType } from 'vue'\nimport type { VFieldSlots } from '@/components/VField/VField'\nimport type { VInputSlots } from '@/components/VInput/VInput'\nimport type { ListItem } from '@/composables/list-items'\nimport type { GenericProps, SelectItemKey } from '@/util'\n\ntype Primitive = string | number | boolean | symbol\n\ntype Val <T, ReturnObject extends boolean> = [T] extends [Primitive]\n  ? T\n  : (ReturnObject extends true ? T : any)\n\ntype Value <T, ReturnObject extends boolean, Multiple extends boolean> =\n  Multiple extends true\n    ? readonly Val<T, ReturnObject>[]\n    : Val<T, ReturnObject> | null\n\nexport const makeSelectProps = propsFactory({\n  chips: Boolean,\n  closableChips: Boolean,\n  closeText: {\n    type: String,\n    default: '$vuetify.close',\n  },\n  openText: {\n    type: String,\n    default: '$vuetify.open',\n  },\n  eager: Boolean,\n  hideNoData: Boolean,\n  hideSelected: Boolean,\n  listProps: {\n    type: Object as PropType<VList['$props']>,\n  },\n  menu: Boolean,\n  menuIcon: {\n    type: IconValue,\n    default: '$dropdown',\n  },\n  menuProps: {\n    type: Object as PropType<VMenu['$props']>,\n  },\n  multiple: Boolean,\n  noDataText: {\n    type: String,\n    default: '$vuetify.noDataText',\n  },\n  openOnClear: Boolean,\n  itemColor: String,\n\n  ...makeItemsProps({ itemChildren: false }),\n}, 'Select')\n\nexport const makeVSelectProps = propsFactory({\n  ...makeSelectProps(),\n  ...omit(makeVTextFieldProps({\n    modelValue: null,\n    role: 'combobox',\n  }), ['validationValue', 'dirty', 'appendInnerIcon']),\n  ...makeTransitionProps({ transition: { component: VDialogTransition as Component } }),\n}, 'VSelect')\n\ntype ItemType<T> = T extends readonly (infer U)[] ? U : never\n\nexport const VSelect = genericComponent<new <\n  T extends readonly any[],\n  Item = ItemType<T>,\n  ReturnObject extends boolean = false,\n  Multiple extends boolean = false,\n  V extends Value<Item, ReturnObject, Multiple> = Value<Item, ReturnObject, Multiple>\n>(\n  props: {\n    items?: T\n    itemTitle?: SelectItemKey<ItemType<T>>\n    itemValue?: SelectItemKey<ItemType<T>>\n    itemProps?: SelectItemKey<ItemType<T>>\n    returnObject?: ReturnObject\n    multiple?: Multiple\n    modelValue?: V | null\n    'onUpdate:modelValue'?: (value: V) => void\n  },\n  slots: Omit<VInputSlots & VFieldSlots, 'default'> & {\n    item: { item: ListItem<Item>, index: number, props: Record<string, unknown> }\n    chip: { item: ListItem<Item>, index: number, props: Record<string, unknown> }\n    selection: { item: ListItem<Item>, index: number }\n    'prepend-item': never\n    'append-item': never\n    'no-data': never\n  }\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VSelect',\n\n  props: makeVSelectProps(),\n\n  emits: {\n    'update:focused': (focused: boolean) => true,\n    'update:modelValue': (value: any) => true,\n    'update:menu': (ue: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const { t } = useLocale()\n    const vTextFieldRef = ref<VTextField>()\n    const vMenuRef = ref<VMenu>()\n    const vVirtualScrollRef = ref<VVirtualScroll>()\n    const { items, transformIn, transformOut } = useItems(props)\n    const model = useProxiedModel(\n      props,\n      'modelValue',\n      [],\n      v => transformIn(v === null ? [null] : wrapInArray(v)),\n      v => {\n        const transformed = transformOut(v)\n        return props.multiple ? transformed : (transformed[0] ?? null)\n      }\n    )\n    const counterValue = computed(() => {\n      return typeof props.counterValue === 'function' ? props.counterValue(model.value)\n        : typeof props.counterValue === 'number' ? props.counterValue\n        : model.value.length\n    })\n    const form = useForm(props)\n    const selectedValues = computed(() => model.value.map(selection => selection.value))\n    const isFocused = shallowRef(false)\n\n    let keyboardLookupPrefix = ''\n    let keyboardLookupLastTime: number\n\n    const displayItems = computed(() => {\n      if (props.hideSelected) {\n        return items.value.filter(item => !model.value.some(s => (props.valueComparator || deepEqual)(s, item)))\n      }\n      return items.value\n    })\n\n    const menuDisabled = computed(() => (\n      (props.hideNoData && !displayItems.value.length) ||\n      form.isReadonly.value || form.isDisabled.value\n    ))\n    const _menu = useProxiedModel(props, 'menu')\n    const menu = computed({\n      get: () => _menu.value,\n      set: v => {\n        if (_menu.value && !v && vMenuRef.value?.Î¨openChildren.size) return\n        if (v && menuDisabled.value) return\n        _menu.value = v\n      },\n    })\n\n    const label = computed(() => menu.value ? props.closeText : props.openText)\n\n    const computedMenuProps = computed(() => {\n      return {\n        ...props.menuProps,\n        activatorProps: {\n          ...(props.menuProps?.activatorProps || {}),\n          'aria-haspopup': 'listbox', // Set aria-haspopup to 'listbox'\n        },\n      }\n    })\n\n    const listRef = ref<VList>()\n    const listEvents = useScrolling(listRef, vTextFieldRef)\n    function onClear (e: MouseEvent) {\n      if (props.openOnClear) {\n        menu.value = true\n      }\n    }\n    function onMousedownControl () {\n      if (menuDisabled.value) return\n\n      menu.value = !menu.value\n    }\n    function onListKeydown (e: KeyboardEvent) {\n      if (checkPrintable(e)) {\n        onKeydown(e)\n      }\n    }\n    function onKeydown (e: KeyboardEvent) {\n      if (!e.key || form.isReadonly.value) return\n\n      if (['Enter', ' ', 'ArrowDown', 'ArrowUp', 'Home', 'End'].includes(e.key)) {\n        e.preventDefault()\n      }\n\n      if (['Enter', 'ArrowDown', ' '].includes(e.key)) {\n        menu.value = true\n      }\n\n      if (['Escape', 'Tab'].includes(e.key)) {\n        menu.value = false\n      }\n\n      if (e.key === 'Home') {\n        listRef.value?.focus('first')\n      } else if (e.key === 'End') {\n        listRef.value?.focus('last')\n      }\n\n      // html select hotkeys\n      const KEYBOARD_LOOKUP_THRESHOLD = 1000 // milliseconds\n\n      if (!checkPrintable(e)) return\n\n      const now = performance.now()\n      if (now - keyboardLookupLastTime > KEYBOARD_LOOKUP_THRESHOLD) {\n        keyboardLookupPrefix = ''\n      }\n      keyboardLookupPrefix += e.key.toLowerCase()\n      keyboardLookupLastTime = now\n\n      const item = items.value.find(item => item.title.toLowerCase().startsWith(keyboardLookupPrefix))\n      if (item !== undefined) {\n        model.value = [item]\n        const index = displayItems.value.indexOf(item)\n        IN_BROWSER && window.requestAnimationFrame(() => {\n          index >= 0 && vVirtualScrollRef.value?.scrollToIndex(index)\n        })\n      }\n    }\n\n    /** @param set - null means toggle */\n    function select (item: ListItem, set: boolean | null = true) {\n      if (item.props.disabled) return\n\n      if (props.multiple) {\n        const index = model.value.findIndex(selection => (props.valueComparator || deepEqual)(selection.value, item.value))\n        const add = set == null ? !~index : set\n\n        if (~index) {\n          const value = add ? [...model.value, item] : [...model.value]\n          value.splice(index, 1)\n          model.value = value\n        } else if (add) {\n          model.value = [...model.value, item]\n        }\n      } else {\n        const add = set !== false\n        model.value = add ? [item] : []\n\n        nextTick(() => {\n          menu.value = false\n        })\n      }\n    }\n    function onBlur (e: FocusEvent) {\n      if (!listRef.value?.$el.contains(e.relatedTarget as HTMLElement)) {\n        menu.value = false\n      }\n    }\n    function onAfterEnter () {\n      if (props.eager) {\n        vVirtualScrollRef.value?.calculateVisibleItems()\n      }\n    }\n    function onAfterLeave () {\n      if (isFocused.value) {\n        vTextFieldRef.value?.focus()\n      }\n    }\n    function onFocusin (e: FocusEvent) {\n      isFocused.value = true\n    }\n    function onModelUpdate (v: any) {\n      if (v == null) model.value = []\n      else if (matchesSelector(vTextFieldRef.value, ':autofill') || matchesSelector(vTextFieldRef.value, ':-webkit-autofill')) {\n        const item = items.value.find(item => item.title === v)\n        if (item) {\n          select(item)\n        }\n      } else if (vTextFieldRef.value) {\n        vTextFieldRef.value.value = ''\n      }\n    }\n\n    watch(menu, () => {\n      if (!props.hideSelected && menu.value && model.value.length) {\n        const index = displayItems.value.findIndex(\n          item => model.value.some(s => (props.valueComparator || deepEqual)(s.value, item.value))\n        )\n        IN_BROWSER && window.requestAnimationFrame(() => {\n          index >= 0 && vVirtualScrollRef.value?.scrollToIndex(index)\n        })\n      }\n    })\n\n    watch(() => props.items, (newVal, oldVal) => {\n      if (menu.value) return\n\n      if (isFocused.value && !oldVal.length && newVal.length) {\n        menu.value = true\n      }\n    })\n\n    useRender(() => {\n      const hasChips = !!(props.chips || slots.chip)\n      const hasList = !!(\n        (!props.hideNoData || displayItems.value.length) ||\n        slots['prepend-item'] ||\n        slots['append-item'] ||\n        slots['no-data']\n      )\n      const isDirty = model.value.length > 0\n      const textFieldProps = VTextField.filterProps(props)\n\n      const placeholder = isDirty || (\n        !isFocused.value &&\n        props.label &&\n        !props.persistentPlaceholder\n      ) ? undefined : props.placeholder\n\n      return (\n        <VTextField\n          ref={ vTextFieldRef }\n          { ...textFieldProps }\n          modelValue={ model.value.map(v => v.props.value).join(', ') }\n          onUpdate:modelValue={ onModelUpdate }\n          v-model:focused={ isFocused.value }\n          validationValue={ model.externalValue }\n          counterValue={ counterValue.value }\n          dirty={ isDirty }\n          class={[\n            'v-select',\n            {\n              'v-select--active-menu': menu.value,\n              'v-select--chips': !!props.chips,\n              [`v-select--${props.multiple ? 'multiple' : 'single'}`]: true,\n              'v-select--selected': model.value.length,\n              'v-select--selection-slot': !!slots.selection,\n            },\n            props.class,\n          ]}\n          style={ props.style }\n          inputmode=\"none\"\n          placeholder={ placeholder }\n          onClick:clear={ onClear }\n          onMousedown:control={ onMousedownControl }\n          onBlur={ onBlur }\n          onKeydown={ onKeydown }\n          aria-label={ t(label.value) }\n          title={ t(label.value) }\n        >\n          {{\n            ...slots,\n            default: () => (\n              <>\n                <VMenu\n                  ref={ vMenuRef }\n                  v-model={ menu.value }\n                  activator=\"parent\"\n                  contentClass=\"v-select__content\"\n                  disabled={ menuDisabled.value }\n                  eager={ props.eager }\n                  maxHeight={ 310 }\n                  openOnClick={ false }\n                  closeOnContentClick={ false }\n                  transition={ props.transition }\n                  onAfterEnter={ onAfterEnter }\n                  onAfterLeave={ onAfterLeave }\n                  { ...computedMenuProps.value }\n                >\n                  { hasList && (\n                    <VList\n                      ref={ listRef }\n                      selected={ selectedValues.value }\n                      selectStrategy={ props.multiple ? 'independent' : 'single-independent' }\n                      onMousedown={ (e: MouseEvent) => e.preventDefault() }\n                      onKeydown={ onListKeydown }\n                      onFocusin={ onFocusin }\n                      tabindex=\"-1\"\n                      aria-live=\"polite\"\n                      color={ props.itemColor ?? props.color }\n                      { ...listEvents }\n                      { ...props.listProps }\n                    >\n                      { slots['prepend-item']?.() }\n\n                      { !displayItems.value.length && !props.hideNoData && (slots['no-data']?.() ?? (\n                        <VListItem key=\"no-data\" title={ t(props.noDataText) } />\n                      ))}\n\n                      <VVirtualScroll ref={ vVirtualScrollRef } renderless items={ displayItems.value } itemKey=\"value\">\n                        { ({ item, index, itemRef }) => {\n                          const itemProps = mergeProps(item.props, {\n                            ref: itemRef,\n                            key: item.value,\n                            onClick: () => select(item, null),\n                          })\n\n                          return slots.item?.({\n                            item,\n                            index,\n                            props: itemProps,\n                          }) ?? (\n                            <VListItem { ...itemProps } role=\"option\">\n                              {{\n                                prepend: ({ isSelected }) => (\n                                  <>\n                                    { props.multiple && !props.hideSelected ? (\n                                      <VCheckboxBtn\n                                        key={ item.value }\n                                        modelValue={ isSelected }\n                                        ripple={ false }\n                                        tabindex=\"-1\"\n                                      />\n                                    ) : undefined }\n\n                                    { item.props.prependAvatar && (\n                                      <VAvatar image={ item.props.prependAvatar } />\n                                    )}\n\n                                    { item.props.prependIcon && (\n                                      <VIcon icon={ item.props.prependIcon } />\n                                    )}\n                                  </>\n                                ),\n                              }}\n                            </VListItem>\n                          )\n                        }}\n                      </VVirtualScroll>\n\n                      { slots['append-item']?.() }\n                    </VList>\n                  )}\n                </VMenu>\n\n                { model.value.map((item, index) => {\n                  function onChipClose (e: Event) {\n                    e.stopPropagation()\n                    e.preventDefault()\n\n                    select(item, false)\n                  }\n\n                  const slotProps = {\n                    'onClick:close': onChipClose,\n                    onKeydown (e: KeyboardEvent) {\n                      if (e.key !== 'Enter' && e.key !== ' ') return\n\n                      e.preventDefault()\n                      e.stopPropagation()\n\n                      onChipClose(e)\n                    },\n                    onMousedown (e: MouseEvent) {\n                      e.preventDefault()\n                      e.stopPropagation()\n                    },\n                    modelValue: true,\n                    'onUpdate:modelValue': undefined,\n                  }\n\n                  const hasSlot = hasChips ? !!slots.chip : !!slots.selection\n                  const slotContent = hasSlot\n                    ? ensureValidVNode(\n                      hasChips\n                        ? slots.chip!({ item, index, props: slotProps })\n                        : slots.selection!({ item, index })\n                    )\n                    : undefined\n\n                  if (hasSlot && !slotContent) return undefined\n\n                  return (\n                    <div key={ item.value } class=\"v-select__selection\">\n                      { hasChips ? (\n                        !slots.chip ? (\n                          <VChip\n                            key=\"chip\"\n                            closable={ props.closableChips }\n                            size=\"small\"\n                            text={ item.title }\n                            disabled={ item.props.disabled }\n                            { ...slotProps }\n                          />\n                        ) : (\n                          <VDefaultsProvider\n                            key=\"chip-defaults\"\n                            defaults={{\n                              VChip: {\n                                closable: props.closableChips,\n                                size: 'small',\n                                text: item.title,\n                              },\n                            }}\n                          >\n                            { slotContent }\n                          </VDefaultsProvider>\n                        )\n                      ) : (\n                        slotContent ?? (\n                          <span class=\"v-select__selection-text\">\n                            { item.title }\n                            { props.multiple && (index < model.value.length - 1) && (\n                              <span class=\"v-select__selection-comma\">,</span>\n                            )}\n                          </span>\n                        )\n                      )}\n                    </div>\n                  )\n                })}\n              </>\n            ),\n            'append-inner': (...args) => (\n              <>\n                { slots['append-inner']?.(...args) }\n                { props.menuIcon ? (\n                  <VIcon\n                    class=\"v-select__menu-icon\"\n                    color={ vTextFieldRef.value?.fieldIconColor }\n                    icon={ props.menuIcon }\n                  />\n                ) : undefined }\n              </>\n            ),\n          }}\n        </VTextField>\n      )\n    })\n\n    return forwardRefs({\n      isFocused,\n      menu,\n      select,\n    }, vTextFieldRef)\n  },\n})\n\nexport type VSelect = InstanceType<typeof VSelect>\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { createVNode as _createVNode, resolveDirective as _resolveDirective, mergeProps as _mergeProps, withDirectives as _withDirectives } from \"vue\";\n/* eslint-disable complexity */\n// Styles\n\nimport \"./VCard.css\"; // Components\n\nimport { VCardActions } from \"./VCardActions.js\";\nimport { VCardItem } from \"./VCardItem.js\";\nimport { VCardText } from \"./VCardText.js\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.js\";\nimport { VImg } from \"../VImg/index.js\"; // Composables\n\nimport { makeBorderProps, useBorder } from \"../../composables/border.js\";\nimport { makeComponentProps } from \"../../composables/component.js\";\nimport { makeDensityProps, useDensity } from \"../../composables/density.js\";\nimport { makeDimensionProps, useDimension } from \"../../composables/dimensions.js\";\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.js\";\nimport { IconValue } from \"../../composables/icons.js\";\nimport { LoaderSlot, makeLoaderProps, useLoader } from \"../../composables/loader.js\";\nimport { makeLocationProps, useLocation } from \"../../composables/location.js\";\nimport { makePositionProps, usePosition } from \"../../composables/position.js\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.js\";\nimport { makeRouterProps, useLink } from \"../../composables/router.js\";\nimport { makeTagProps } from \"../../composables/tag.js\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.js\";\nimport { genOverlays, makeVariantProps, useVariant } from \"../../composables/variant.js\"; // Directives\n\nimport { Ripple } from \"../../directives/ripple/index.js\"; // Utilities\n\nimport { computed } from 'vue';\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.js\"; // Types\n\nexport const makeVCardProps = propsFactory({\n  appendAvatar: String,\n  appendIcon: IconValue,\n  disabled: Boolean,\n  flat: Boolean,\n  hover: Boolean,\n  image: String,\n  link: {\n    type: Boolean,\n    default: undefined\n  },\n  prependAvatar: String,\n  prependIcon: IconValue,\n  ripple: {\n    type: [Boolean, Object],\n    default: true\n  },\n  subtitle: {\n    type: [String, Number, Boolean],\n    default: undefined\n  },\n  text: {\n    type: [String, Number, Boolean],\n    default: undefined\n  },\n  title: {\n    type: [String, Number, Boolean],\n    default: undefined\n  },\n  ...makeBorderProps(),\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n  ...makeDimensionProps(),\n  ...makeElevationProps(),\n  ...makeLoaderProps(),\n  ...makeLocationProps(),\n  ...makePositionProps(),\n  ...makeRoundedProps(),\n  ...makeRouterProps(),\n  ...makeTagProps(),\n  ...makeThemeProps(),\n  ...makeVariantProps({\n    variant: 'elevated'\n  })\n}, 'VCard');\nexport const VCard = genericComponent()({\n  name: 'VCard',\n  directives: {\n    Ripple\n  },\n  props: makeVCardProps(),\n\n  setup(props, _ref) {\n    let {\n      attrs,\n      slots\n    } = _ref;\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      borderClasses\n    } = useBorder(props);\n    const {\n      colorClasses,\n      colorStyles,\n      variantClasses\n    } = useVariant(props);\n    const {\n      densityClasses\n    } = useDensity(props);\n    const {\n      dimensionStyles\n    } = useDimension(props);\n    const {\n      elevationClasses\n    } = useElevation(props);\n    const {\n      loaderClasses\n    } = useLoader(props);\n    const {\n      locationStyles\n    } = useLocation(props);\n    const {\n      positionClasses\n    } = usePosition(props);\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const link = useLink(props, attrs);\n    const isLink = computed(() => props.link !== false && link.isLink.value);\n    const isClickable = computed(() => !props.disabled && props.link !== false && (props.link || link.isClickable.value));\n    useRender(() => {\n      const Tag = isLink.value ? 'a' : props.tag;\n      const hasTitle = !!(slots.title || props.title != null);\n      const hasSubtitle = !!(slots.subtitle || props.subtitle != null);\n      const hasHeader = hasTitle || hasSubtitle;\n      const hasAppend = !!(slots.append || props.appendAvatar || props.appendIcon);\n      const hasPrepend = !!(slots.prepend || props.prependAvatar || props.prependIcon);\n      const hasImage = !!(slots.image || props.image);\n      const hasCardItem = hasHeader || hasPrepend || hasAppend;\n      const hasText = !!(slots.text || props.text != null);\n      return _withDirectives(_createVNode(Tag, _mergeProps({\n        \"class\": ['v-card', {\n          'v-card--disabled': props.disabled,\n          'v-card--flat': props.flat,\n          'v-card--hover': props.hover && !(props.disabled || props.flat),\n          'v-card--link': isClickable.value\n        }, themeClasses.value, borderClasses.value, colorClasses.value, densityClasses.value, elevationClasses.value, loaderClasses.value, positionClasses.value, roundedClasses.value, variantClasses.value, props.class],\n        \"style\": [colorStyles.value, dimensionStyles.value, locationStyles.value, props.style],\n        \"onClick\": isClickable.value && link.navigate,\n        \"tabindex\": props.disabled ? -1 : undefined\n      }, link.linkProps), {\n        default: () => [hasImage && _createVNode(\"div\", {\n          \"key\": \"image\",\n          \"class\": \"v-card__image\"\n        }, [!slots.image ? _createVNode(VImg, {\n          \"key\": \"image-img\",\n          \"cover\": true,\n          \"src\": props.image\n        }, null) : _createVNode(VDefaultsProvider, {\n          \"key\": \"image-defaults\",\n          \"disabled\": !props.image,\n          \"defaults\": {\n            VImg: {\n              cover: true,\n              src: props.image\n            }\n          }\n        }, slots.image)]), _createVNode(LoaderSlot, {\n          \"name\": \"v-card\",\n          \"active\": !!props.loading,\n          \"color\": typeof props.loading === 'boolean' ? undefined : props.loading\n        }, {\n          default: slots.loader\n        }), hasCardItem && _createVNode(VCardItem, {\n          \"key\": \"item\",\n          \"prependAvatar\": props.prependAvatar,\n          \"prependIcon\": props.prependIcon,\n          \"title\": props.title,\n          \"subtitle\": props.subtitle,\n          \"appendAvatar\": props.appendAvatar,\n          \"appendIcon\": props.appendIcon\n        }, {\n          default: slots.item,\n          prepend: slots.prepend,\n          title: slots.title,\n          subtitle: slots.subtitle,\n          append: slots.append\n        }), hasText && _createVNode(VCardText, {\n          \"key\": \"text\"\n        }, {\n          default: () => [slots.text?.() ?? props.text]\n        }), slots.default?.(), slots.actions && _createVNode(VCardActions, null, {\n          default: slots.actions\n        }), genOverlays(isClickable.value, 'v-card')]\n      }), [[_resolveDirective(\"ripple\"), isClickable.value && props.ripple]]);\n    });\n    return {};\n  }\n\n});","map":{"version":3,"mappings":";AAAA;AAEA;;AACA,qB,CAEA;;AAAA,SACSA,YADT,QACqB,mBADrB;AACqB,SACZC,SADY,QACH,gBADG;AACH,SACTC,SADS,QACA,gBADA;AACA,SACTC,iBADS,QACQ,+BADR;AACQ,SACjBC,IADiB,QACb,kBADa,C,CAG1B;;AAAA,SACSC,eADT,EAC0BC,SAD1B,QACmC,6BADnC;AACmC,SAC1BC,kBAD0B,QACR,gCADQ;AACR,SAClBC,gBADkB,EACAC,UADA,QACU,8BADV;AACU,SAC5BC,kBAD4B,EACRC,YADQ,QACI,iCADJ;AACI,SAChCC,kBADgC,EACZC,YADY,QACA,gCADA;AACA,SAChCC,SADgC,QACvB,4BADuB;AACvB,SACTC,UADS,EACGC,eADH,EACoBC,SADpB,QAC6B,6BAD7B;AAC6B,SACtCC,iBADsC,EACnBC,WADmB,QACR,+BADQ;AACR,SAC9BC,iBAD8B,EACXC,WADW,QACA,+BADA;AACA,SAC9BC,gBAD8B,EACZC,UADY,QACF,8BADE;AACF,SAC5BC,eAD4B,EACXC,OADW,QACJ,6BADI;AACJ,SACxBC,YADwB,QACZ,0BADY;AACZ,SACZC,cADY,EACIC,YADJ,QACgB,4BADhB;AACgB,SAC5BC,WAD4B,EACfC,gBADe,EACGC,UADH,QACa,8BADb,C,CAGrC;;AAAA,SACSC,MADT,QACe,kCADf,C,CAGA;;AACA,SAASC,QAAT,QAAyB,KAAzB;AAA8B,SACrBC,gBADqB,EACHC,YADG,EACWC,SADX,QACoB,qBADpB,C,CAG9B;;AAMA,OAAO,MAAMC,cAAc,GAAGF,YAAY,CAAC;AACzCG,cAAY,EAAEC,MAD2B;AAEzCC,YAAU,EAAE1B,SAF6B;AAGzC2B,UAAQ,EAAEC,OAH+B;AAIzCC,MAAI,EAAED,OAJmC;AAKzCE,OAAK,EAAEF,OALkC;AAMzCG,OAAK,EAAEN,MANkC;AAOzCO,MAAI,EAAE;AACJC,QAAI,EAAEL,OADF;AAEJM,WAAO,EAAEC;AAFL,GAPmC;AAWzCC,eAAa,EAAEX,MAX0B;AAYzCY,aAAW,EAAErC,SAZ4B;AAazCsC,QAAM,EAAE;AACNL,QAAI,EAAE,CAACL,OAAD,EAAUW,MAAV,CADA;AAENL,WAAO,EAAE;AAFH,GAbiC;AAiBzCM,UAAQ,EAAE;AACRP,QAAI,EAAE,CAACR,MAAD,EAASgB,MAAT,EAAiBb,OAAjB,CADE;AAERM,WAAO,EAAEC;AAFD,GAjB+B;AAqBzCO,MAAI,EAAE;AACJT,QAAI,EAAE,CAACR,MAAD,EAASgB,MAAT,EAAiBb,OAAjB,CADF;AAEJM,WAAO,EAAEC;AAFL,GArBmC;AAyBzCQ,OAAK,EAAE;AACLV,QAAI,EAAE,CAACR,MAAD,EAASgB,MAAT,EAAiBb,OAAjB,CADD;AAELM,WAAO,EAAEC;AAFJ,GAzBkC;AA8BzC,KAAG5C,eAAe,EA9BuB;AA+BzC,KAAGE,kBAAkB,EA/BoB;AAgCzC,KAAGC,gBAAgB,EAhCsB;AAiCzC,KAAGE,kBAAkB,EAjCoB;AAkCzC,KAAGE,kBAAkB,EAlCoB;AAmCzC,KAAGI,eAAe,EAnCuB;AAoCzC,KAAGE,iBAAiB,EApCqB;AAqCzC,KAAGE,iBAAiB,EArCqB;AAsCzC,KAAGE,gBAAgB,EAtCsB;AAuCzC,KAAGE,eAAe,EAvCuB;AAwCzC,KAAGE,YAAY,EAxC0B;AAyCzC,KAAGC,cAAc,EAzCwB;AA0CzC,KAAGG,gBAAgB,CAAC;AAAE4B,WAAO,EAAE;AAAX,GAAD;AA1CsB,CAAD,EA2CvC,OA3CuC,CAAnC;AAsDP,OAAO,MAAMC,KAAK,GAAGzB,gBAAgB,GAAe;AAClD0B,MAAI,EAAE,OAD4C;AAGlDC,YAAU,EAAE;AAAE7B;AAAF,GAHsC;AAKlD8B,OAAK,EAAEzB,cAAc,EAL6B;;AAOlD0B,OAAKA,CAAED,KAAFC,EAAOC,IAAPD,EAA2B;AAAA,QAAlB;AAAEE,WAAF;AAASC;AAAT,QAAgBF,IAAE;AAC9B,UAAM;AAAEG;AAAF,QAAmBvC,YAAY,CAACkC,KAAD,CAArC;AACA,UAAM;AAAEM;AAAF,QAAoB9D,SAAS,CAACwD,KAAD,CAAnC;AACA,UAAM;AAAEO,kBAAF;AAAgBC,iBAAhB;AAA6BC;AAA7B,QAAgDxC,UAAU,CAAC+B,KAAD,CAAhE;AACA,UAAM;AAAEU;AAAF,QAAqB/D,UAAU,CAACqD,KAAD,CAArC;AACA,UAAM;AAAEW;AAAF,QAAsB9D,YAAY,CAACmD,KAAD,CAAxC;AACA,UAAM;AAAEY;AAAF,QAAuB7D,YAAY,CAACiD,KAAD,CAAzC;AACA,UAAM;AAAEa;AAAF,QAAoB1D,SAAS,CAAC6C,KAAD,CAAnC;AACA,UAAM;AAAEc;AAAF,QAAqBzD,WAAW,CAAC2C,KAAD,CAAtC;AACA,UAAM;AAAEe;AAAF,QAAsBxD,WAAW,CAACyC,KAAD,CAAvC;AACA,UAAM;AAAEgB;AAAF,QAAqBvD,UAAU,CAACuC,KAAD,CAArC;AACA,UAAMhB,IAAI,GAAGrB,OAAO,CAACqC,KAAD,EAAQG,KAAR,CAApB;AAEA,UAAMc,MAAM,GAAG9C,QAAQ,CAAC,MAAM6B,KAAK,CAAChB,IAANgB,KAAe,KAAfA,IAAwBhB,IAAI,CAACiC,MAALjC,CAAYkC,KAA3C,CAAvB;AACA,UAAMC,WAAW,GAAGhD,QAAQ,CAAC,MAC3B,CAAC6B,KAAK,CAACrB,QAAP,IACAqB,KAAK,CAAChB,IAANgB,KAAe,KADf,KAECA,KAAK,CAAChB,IAANgB,IAAchB,IAAI,CAACmC,WAALnC,CAAiBkC,KAFhC,CAD0B,CAA5B;AAMA5C,aAAS,CAAC,MAAM;AACd,YAAM8C,GAAG,GAAGH,MAAM,CAACC,KAAPD,GAAe,GAAfA,GAAqBjB,KAAK,CAACqB,GAAvC;AACA,YAAMC,QAAQ,GAAG,CAAC,EAAElB,KAAK,CAACT,KAANS,IAAeJ,KAAK,CAACL,KAANK,IAAe,IAAhC,CAAlB;AACA,YAAMuB,WAAW,GAAG,CAAC,EAAEnB,KAAK,CAACZ,QAANY,IAAkBJ,KAAK,CAACR,QAANQ,IAAkB,IAAtC,CAArB;AACA,YAAMwB,SAAS,GAAGF,QAAQ,IAAIC,WAA9B;AACA,YAAME,SAAS,GAAG,CAAC,EAAErB,KAAK,CAACsB,MAANtB,IAAgBJ,KAAK,CAACxB,YAAtB4B,IAAsCJ,KAAK,CAACtB,UAA9C,CAAnB;AACA,YAAMiD,UAAU,GAAG,CAAC,EAAEvB,KAAK,CAACwB,OAANxB,IAAiBJ,KAAK,CAACZ,aAAvBgB,IAAwCJ,KAAK,CAACX,WAAhD,CAApB;AACA,YAAMwC,QAAQ,GAAG,CAAC,EAAEzB,KAAK,CAACrB,KAANqB,IAAeJ,KAAK,CAACjB,KAAvB,CAAlB;AACA,YAAM+C,WAAW,GAAGN,SAAS,IAAIG,UAAbH,IAA2BC,SAA/C;AACA,YAAMM,OAAO,GAAG,CAAC,EAAE3B,KAAK,CAACV,IAANU,IAAcJ,KAAK,CAACN,IAANM,IAAc,IAA9B,CAAjB;AAEA;AAAA,iBAEW,CACL,QADK,EAEL;AACE,8BAAoBA,KAAK,CAACrB,QAD5B;AAEE,0BAAgBqB,KAAK,CAACnB,IAFxB;AAGE,2BAAiBmB,KAAK,CAAClB,KAANkB,IAAe,EAAEA,KAAK,CAACrB,QAANqB,IAAkBA,KAAK,CAACnB,IAA1B,CAHlC;AAIE,0BAAgBsC,WAAW,CAACD;AAJ9B,SAFK,EAQLb,YAAY,CAACa,KARR,EASLZ,aAAa,CAACY,KATT,EAULX,YAAY,CAACW,KAVR,EAWLR,cAAc,CAACQ,KAXV,EAYLN,gBAAgB,CAACM,KAZZ,EAaLL,aAAa,CAACK,KAbT,EAcLH,eAAe,CAACG,KAdX,EAeLF,cAAc,CAACE,KAfV,EAgBLT,cAAc,CAACS,KAhBV,EAiBLlB,KAAK,CAACgC,KAjBD,CAFX;AAoBK,iBACM,CACLxB,WAAW,CAACU,KADP,EAELP,eAAe,CAACO,KAFX,EAGLJ,cAAc,CAACI,KAHV,EAILlB,KAAK,CAACiC,KAJD,CArBX;AA0BK,mBACSd,WAAW,CAACD,KAAZC,IAAqBnC,IAAI,CAACkD,QA3BxC;AA2BgD,oBAEjClC,KAAK,CAACrB,QAANqB,GAAiB,CAAC,CAAlBA,GAAsBb;AA7BrC,SA8BSH,IAAI,CAACmD,SA9Bd,GA8BuB;AAAAjD,wBAEjB2C,QAAQ;AAAA;AAAA;AAAA,YAEJ,CAACzB,KAAK,CAACrB,KAAP,GAAYqD;AAAA;AAAA;AAAA,iBAIJpC,KAAK,CAACjB;AAJF,WAIO,IAJP,CAAZ,GAImBqD;AAAA;AAAA,sBAKN,CAACpC,KAAK,CAACjB,KALD;AAKM,sBACb;AACRzC,gBAAI,EAAE;AACJ+F,mBAAK,EAAE,IADH;AAEJC,iBAAG,EAAEtC,KAAK,CAACjB;AAFP;AADE;AANO,WAYCqB,KAAK,CAACrB,KAZP,CANf,EAFS,EAwBlBqD;AAAA;AAAA,oBAIU,CAAC,CAACpC,KAAK,CAACuC,OAJlB;AAIyB,mBAChB,OAAOvC,KAAK,CAACuC,OAAb,KAAyB,SAAzB,GAAqCpD,SAArC,GAAiDa,KAAK,CAACuC;AALhE,WAMU;AAAErD,iBAAO,EAAEkB,KAAK,CAACoC;AAAjB,SANV,CAxBkB,EAiCjBV,WAAW;AAAA;AAAA,2BAGO9B,KAAK,CAACZ,aAHb;AAG0B,yBACrBY,KAAK,CAACX,WAJX;AAIsB,mBACvBW,KAAK,CAACL,KALL;AAKU,sBACRK,KAAK,CAACR,QANR;AAMgB,0BACVQ,KAAK,CAACxB,YAPZ;AAOwB,wBACpBwB,KAAK,CAACtB;AARV,WAQoB;AAG3BQ,iBAAO,EAAEkB,KAAK,CAACqC,IAHY;AAI3Bb,iBAAO,EAAExB,KAAK,CAACwB,OAJY;AAK3BjC,eAAK,EAAES,KAAK,CAACT,KALc;AAM3BH,kBAAQ,EAAEY,KAAK,CAACZ,QANW;AAO3BkC,gBAAM,EAAEtB,KAAK,CAACsB;AAPa,SARpB,CAjCM,EAqDjBK,OAAO;AAAA;AAAA;AAAA7C,0BAEHkB,KAAK,CAACV,IAANU,QAAkBJ,KAAK,CAACN,IAFrB;AAAA,UArDU,EA2DjBU,KAAK,CAAClB,OAANkB,IA3DiB,EA6DjBA,KAAK,CAACsC,OAANtC,IAAagC,iCACU;AAAElD,iBAAO,EAAEkB,KAAK,CAACsC;AAAjB,SADV,CA7DI,EAiEjB3E,WAAW,CAACoD,WAAW,CAACD,KAAb,EAAoB,QAApB,CAjEM;AAAA,OA9BvB,GA+F8C,+BAnE/BC,WAAW,CAACD,KAAZC,IAAqBnB,KAAK,CAACV,MAmEI,EA/F9C;AAkGD,KA7GQ,CAAThB;AA+GA,WAAO,EAAP;AACF;;AA3IkD,CAAf,CAA9B","names":["VCardActions","VCardItem","VCardText","VDefaultsProvider","VImg","makeBorderProps","useBorder","makeComponentProps","makeDensityProps","useDensity","makeDimensionProps","useDimension","makeElevationProps","useElevation","IconValue","LoaderSlot","makeLoaderProps","useLoader","makeLocationProps","useLocation","makePositionProps","usePosition","makeRoundedProps","useRounded","makeRouterProps","useLink","makeTagProps","makeThemeProps","provideTheme","genOverlays","makeVariantProps","useVariant","Ripple","computed","genericComponent","propsFactory","useRender","makeVCardProps","appendAvatar","String","appendIcon","disabled","Boolean","flat","hover","image","link","type","default","undefined","prependAvatar","prependIcon","ripple","Object","subtitle","Number","text","title","variant","VCard","name","directives","props","setup","_ref","attrs","slots","themeClasses","borderClasses","colorClasses","colorStyles","variantClasses","densityClasses","dimensionStyles","elevationClasses","loaderClasses","locationStyles","positionClasses","roundedClasses","isLink","value","isClickable","Tag","tag","hasTitle","hasSubtitle","hasHeader","hasAppend","append","hasPrepend","prepend","hasImage","hasCardItem","hasText","class","style","navigate","linkProps","_createVNode","cover","src","loading","loader","item","actions"],"sources":["../../../src/components/VCard/VCard.tsx"],"sourcesContent":["/* eslint-disable complexity */\n\n// Styles\nimport './VCard.sass'\n\n// Components\nimport { VCardActions } from './VCardActions'\nimport { VCardItem } from './VCardItem'\nimport { VCardText } from './VCardText'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VImg } from '@/components/VImg'\n\n// Composables\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { IconValue } from '@/composables/icons'\nimport { LoaderSlot, makeLoaderProps, useLoader } from '@/composables/loader'\nimport { makeLocationProps, useLocation } from '@/composables/location'\nimport { makePositionProps, usePosition } from '@/composables/position'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeRouterProps, useLink } from '@/composables/router'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { genOverlays, makeVariantProps, useVariant } from '@/composables/variant'\n\n// Directives\nimport { Ripple } from '@/directives/ripple'\n\n// Utilities\nimport { computed } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { VCardItemSlots } from './VCardItem'\nimport type { LoaderSlotProps } from '@/composables/loader'\nimport type { RippleDirectiveBinding } from '@/directives/ripple'\n\nexport const makeVCardProps = propsFactory({\n  appendAvatar: String,\n  appendIcon: IconValue,\n  disabled: Boolean,\n  flat: Boolean,\n  hover: Boolean,\n  image: String,\n  link: {\n    type: Boolean,\n    default: undefined,\n  },\n  prependAvatar: String,\n  prependIcon: IconValue,\n  ripple: {\n    type: [Boolean, Object] as PropType<RippleDirectiveBinding['value']>,\n    default: true,\n  },\n  subtitle: {\n    type: [String, Number, Boolean],\n    default: undefined,\n  },\n  text: {\n    type: [String, Number, Boolean],\n    default: undefined,\n  },\n  title: {\n    type: [String, Number, Boolean],\n    default: undefined,\n  },\n\n  ...makeBorderProps(),\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n  ...makeDimensionProps(),\n  ...makeElevationProps(),\n  ...makeLoaderProps(),\n  ...makeLocationProps(),\n  ...makePositionProps(),\n  ...makeRoundedProps(),\n  ...makeRouterProps(),\n  ...makeTagProps(),\n  ...makeThemeProps(),\n  ...makeVariantProps({ variant: 'elevated' } as const),\n}, 'VCard')\n\nexport type VCardSlots = VCardItemSlots & {\n  default: never\n  actions: never\n  text: never\n  loader: LoaderSlotProps\n  image: never\n  item: never\n}\n\nexport const VCard = genericComponent<VCardSlots>()({\n  name: 'VCard',\n\n  directives: { Ripple },\n\n  props: makeVCardProps(),\n\n  setup (props, { attrs, slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { borderClasses } = useBorder(props)\n    const { colorClasses, colorStyles, variantClasses } = useVariant(props)\n    const { densityClasses } = useDensity(props)\n    const { dimensionStyles } = useDimension(props)\n    const { elevationClasses } = useElevation(props)\n    const { loaderClasses } = useLoader(props)\n    const { locationStyles } = useLocation(props)\n    const { positionClasses } = usePosition(props)\n    const { roundedClasses } = useRounded(props)\n    const link = useLink(props, attrs)\n\n    const isLink = computed(() => props.link !== false && link.isLink.value)\n    const isClickable = computed(() =>\n      !props.disabled &&\n      props.link !== false &&\n      (props.link || link.isClickable.value)\n    )\n\n    useRender(() => {\n      const Tag = isLink.value ? 'a' : props.tag\n      const hasTitle = !!(slots.title || props.title != null)\n      const hasSubtitle = !!(slots.subtitle || props.subtitle != null)\n      const hasHeader = hasTitle || hasSubtitle\n      const hasAppend = !!(slots.append || props.appendAvatar || props.appendIcon)\n      const hasPrepend = !!(slots.prepend || props.prependAvatar || props.prependIcon)\n      const hasImage = !!(slots.image || props.image)\n      const hasCardItem = hasHeader || hasPrepend || hasAppend\n      const hasText = !!(slots.text || props.text != null)\n\n      return (\n        <Tag\n          class={[\n            'v-card',\n            {\n              'v-card--disabled': props.disabled,\n              'v-card--flat': props.flat,\n              'v-card--hover': props.hover && !(props.disabled || props.flat),\n              'v-card--link': isClickable.value,\n            },\n            themeClasses.value,\n            borderClasses.value,\n            colorClasses.value,\n            densityClasses.value,\n            elevationClasses.value,\n            loaderClasses.value,\n            positionClasses.value,\n            roundedClasses.value,\n            variantClasses.value,\n            props.class,\n          ]}\n          style={[\n            colorStyles.value,\n            dimensionStyles.value,\n            locationStyles.value,\n            props.style,\n          ]}\n          onClick={ isClickable.value && link.navigate }\n          v-ripple={ isClickable.value && props.ripple }\n          tabindex={ props.disabled ? -1 : undefined }\n          { ...link.linkProps }\n        >\n          { hasImage && (\n            <div key=\"image\" class=\"v-card__image\">\n              { !slots.image ? (\n                <VImg\n                  key=\"image-img\"\n                  cover\n                  src={ props.image }\n                />\n              ) : (\n                <VDefaultsProvider\n                  key=\"image-defaults\"\n                  disabled={ !props.image }\n                  defaults={{\n                    VImg: {\n                      cover: true,\n                      src: props.image,\n                    },\n                  }}\n                  v-slots:default={ slots.image }\n                />\n              )}\n            </div>\n          )}\n\n          <LoaderSlot\n            name=\"v-card\"\n            active={ !!props.loading }\n            color={ typeof props.loading === 'boolean' ? undefined : props.loading }\n            v-slots={{ default: slots.loader }}\n          />\n\n          { hasCardItem && (\n            <VCardItem\n              key=\"item\"\n              prependAvatar={ props.prependAvatar }\n              prependIcon={ props.prependIcon }\n              title={ props.title }\n              subtitle={ props.subtitle }\n              appendAvatar={ props.appendAvatar }\n              appendIcon={ props.appendIcon }\n            >\n              {{\n                default: slots.item,\n                prepend: slots.prepend,\n                title: slots.title,\n                subtitle: slots.subtitle,\n                append: slots.append,\n              }}\n            </VCardItem>\n          )}\n\n          { hasText && (\n            <VCardText key=\"text\">\n              { slots.text?.() ?? props.text }\n            </VCardText>\n          )}\n\n          { slots.default?.() }\n\n          { slots.actions && (\n            <VCardActions v-slots={{ default: slots.actions }} />\n          )}\n\n          { genOverlays(isClickable.value, 'v-card') }\n        </Tag>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VCard = InstanceType<typeof VCard>\n"]},"metadata":{},"sourceType":"module"}
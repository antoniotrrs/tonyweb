{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\"; // Components\n\nimport { VFadeTransition } from \"../transitions/index.js\";\nimport { makeDataTableExpandProps, provideExpanded } from \"../VDataTable/composables/expand.js\";\nimport { makeDataTableGroupProps, provideGroupBy, useGroupedItems } from \"../VDataTable/composables/group.js\";\nimport { useOptions } from \"../VDataTable/composables/options.js\";\nimport { createPagination, makeDataTablePaginateProps, providePagination, usePaginatedItems } from \"../VDataTable/composables/paginate.js\";\nimport { makeDataTableSelectProps, provideSelection } from \"../VDataTable/composables/select.js\";\nimport { createSort, makeDataTableSortProps, provideSort, useSortedItems } from \"../VDataTable/composables/sort.js\"; // Composables\n\nimport { makeDataIteratorItemsProps, useDataIteratorItems } from \"./composables/items.js\";\nimport { makeComponentProps } from \"../../composables/component.js\";\nimport { makeFilterProps, useFilter } from \"../../composables/filter.js\";\nimport { LoaderSlot } from \"../../composables/loader.js\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.js\";\nimport { makeTagProps } from \"../../composables/tag.js\";\nimport { makeTransitionProps, MaybeTransition } from \"../../composables/transition.js\"; // Utilities\n\nimport { computed, toRef } from 'vue';\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.js\"; // Types\n\nexport const makeVDataIteratorProps = propsFactory({\n  search: String,\n  loading: Boolean,\n  ...makeComponentProps(),\n  ...makeDataIteratorItemsProps(),\n  ...makeDataTableSelectProps(),\n  ...makeDataTableSortProps(),\n  ...makeDataTablePaginateProps({\n    itemsPerPage: 5\n  }),\n  ...makeDataTableExpandProps(),\n  ...makeDataTableGroupProps(),\n  ...makeFilterProps(),\n  ...makeTagProps(),\n  ...makeTransitionProps({\n    transition: {\n      component: VFadeTransition,\n      hideOnLeave: true\n    }\n  })\n}, 'VDataIterator');\nexport const VDataIterator = genericComponent()({\n  name: 'VDataIterator',\n  props: makeVDataIteratorProps(),\n  emits: {\n    'update:modelValue': value => true,\n    'update:groupBy': value => true,\n    'update:page': value => true,\n    'update:itemsPerPage': value => true,\n    'update:sortBy': value => true,\n    'update:options': value => true,\n    'update:expanded': value => true,\n    'update:currentItems': value => true\n  },\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const groupBy = useProxiedModel(props, 'groupBy');\n    const search = toRef(props, 'search');\n    const {\n      items\n    } = useDataIteratorItems(props);\n    const {\n      filteredItems\n    } = useFilter(props, items, search, {\n      transform: item => item.raw\n    });\n    const {\n      sortBy,\n      multiSort,\n      mustSort\n    } = createSort(props);\n    const {\n      page,\n      itemsPerPage\n    } = createPagination(props);\n    const {\n      toggleSort\n    } = provideSort({\n      sortBy,\n      multiSort,\n      mustSort,\n      page\n    });\n    const {\n      sortByWithGroups,\n      opened,\n      extractRows,\n      isGroupOpen,\n      toggleGroup\n    } = provideGroupBy({\n      groupBy,\n      sortBy\n    });\n    const {\n      sortedItems\n    } = useSortedItems(props, filteredItems, sortByWithGroups, {\n      transform: item => item.raw\n    });\n    const {\n      flatItems\n    } = useGroupedItems(sortedItems, groupBy, opened);\n    const itemsLength = computed(() => flatItems.value.length);\n    const {\n      startIndex,\n      stopIndex,\n      pageCount,\n      prevPage,\n      nextPage,\n      setItemsPerPage,\n      setPage\n    } = providePagination({\n      page,\n      itemsPerPage,\n      itemsLength\n    });\n    const {\n      paginatedItems\n    } = usePaginatedItems({\n      items: flatItems,\n      startIndex,\n      stopIndex,\n      itemsPerPage\n    });\n    const paginatedItemsWithoutGroups = computed(() => extractRows(paginatedItems.value));\n    const {\n      isSelected,\n      select,\n      selectAll,\n      toggleSelect\n    } = provideSelection(props, {\n      allItems: items,\n      currentPage: paginatedItemsWithoutGroups\n    });\n    const {\n      isExpanded,\n      toggleExpand\n    } = provideExpanded(props);\n    useOptions({\n      page,\n      itemsPerPage,\n      sortBy,\n      groupBy,\n      search\n    });\n    const slotProps = computed(() => ({\n      page: page.value,\n      itemsPerPage: itemsPerPage.value,\n      sortBy: sortBy.value,\n      pageCount: pageCount.value,\n      toggleSort,\n      prevPage,\n      nextPage,\n      setPage,\n      setItemsPerPage,\n      isSelected,\n      select,\n      selectAll,\n      toggleSelect,\n      isExpanded,\n      toggleExpand,\n      isGroupOpen,\n      toggleGroup,\n      items: paginatedItemsWithoutGroups.value,\n      groupedItems: paginatedItems.value\n    }));\n    useRender(() => _createVNode(props.tag, {\n      \"class\": ['v-data-iterator', {\n        'v-data-iterator--loading': props.loading\n      }, props.class],\n      \"style\": props.style\n    }, {\n      default: () => [slots.header?.(slotProps.value), _createVNode(MaybeTransition, {\n        \"transition\": props.transition\n      }, {\n        default: () => [props.loading ? _createVNode(LoaderSlot, {\n          \"key\": \"loader\",\n          \"name\": \"v-data-iterator\",\n          \"active\": true\n        }, {\n          default: slotProps => slots.loader?.(slotProps)\n        }) : _createVNode(\"div\", {\n          \"key\": \"items\"\n        }, [!paginatedItems.value.length ? slots['no-data']?.() : slots.default?.(slotProps.value)])]\n      }), slots.footer?.(slotProps.value)]\n    }));\n    return {};\n  }\n\n});","map":{"version":3,"mappings":"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","names":["VFadeTransition","makeDataTableExpandProps","provideExpanded","makeDataTableGroupProps","provideGroupBy","useGroupedItems","useOptions","createPagination","makeDataTablePaginateProps","providePagination","usePaginatedItems","makeDataTableSelectProps","provideSelection","createSort","makeDataTableSortProps","provideSort","useSortedItems","makeDataIteratorItemsProps","useDataIteratorItems","makeComponentProps","makeFilterProps","useFilter","LoaderSlot","useProxiedModel","makeTagProps","makeTransitionProps","MaybeTransition","computed","toRef","genericComponent","propsFactory","useRender","makeVDataIteratorProps","search","String","loading","Boolean","itemsPerPage","transition","component","hideOnLeave","VDataIterator","name","props","emits","value","setup","_ref","slots","groupBy","items","filteredItems","transform","item","raw","sortBy","multiSort","mustSort","page","toggleSort","sortByWithGroups","opened","extractRows","isGroupOpen","toggleGroup","sortedItems","flatItems","itemsLength","length","startIndex","stopIndex","pageCount","prevPage","nextPage","setItemsPerPage","setPage","paginatedItems","paginatedItemsWithoutGroups","isSelected","select","selectAll","toggleSelect","allItems","currentPage","isExpanded","toggleExpand","slotProps","groupedItems","class","style","default","header","_createVNode","loader","footer"],"sources":["../../../src/components/VDataIterator/VDataIterator.tsx"],"sourcesContent":["// Components\nimport { VFadeTransition } from '@/components/transitions'\nimport { makeDataTableExpandProps, provideExpanded } from '@/components/VDataTable/composables/expand'\nimport { makeDataTableGroupProps, provideGroupBy, useGroupedItems } from '@/components/VDataTable/composables/group'\nimport { useOptions } from '@/components/VDataTable/composables/options'\nimport {\n  createPagination,\n  makeDataTablePaginateProps,\n  providePagination,\n  usePaginatedItems,\n} from '@/components/VDataTable/composables/paginate'\nimport { makeDataTableSelectProps, provideSelection } from '@/components/VDataTable/composables/select'\nimport { createSort, makeDataTableSortProps, provideSort, useSortedItems } from '@/components/VDataTable/composables/sort'\n\n// Composables\nimport { makeDataIteratorItemsProps, useDataIteratorItems } from './composables/items'\nimport { makeComponentProps } from '@/composables/component'\nimport { makeFilterProps, useFilter } from '@/composables/filter'\nimport { LoaderSlot } from '@/composables/loader'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeTransitionProps, MaybeTransition } from '@/composables/transition'\n\n// Utilities\nimport { computed, toRef } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { Component } from 'vue'\nimport type { DataIteratorItem } from './composables/items'\nimport type { Group } from '@/components/VDataTable/composables/group'\nimport type { SortItem } from '@/components/VDataTable/composables/sort'\nimport type { LoaderSlotProps } from '@/composables/loader'\nimport type { GenericProps } from '@/util'\n\ntype VDataIteratorSlotProps<T> = {\n  page: number\n  itemsPerPage: number\n  sortBy: readonly SortItem[]\n  pageCount: number\n  toggleSort: ReturnType<typeof provideSort>['toggleSort']\n  prevPage: ReturnType<typeof providePagination>['prevPage']\n  nextPage: ReturnType<typeof providePagination>['nextPage']\n  setPage: ReturnType<typeof providePagination>['setPage']\n  setItemsPerPage: ReturnType<typeof providePagination>['setItemsPerPage']\n  isSelected: ReturnType<typeof provideSelection>['isSelected']\n  select: ReturnType<typeof provideSelection>['select']\n  selectAll: ReturnType<typeof provideSelection>['selectAll']\n  toggleSelect: ReturnType<typeof provideSelection>['toggleSelect']\n  isExpanded: ReturnType<typeof provideExpanded>['isExpanded']\n  toggleExpand: ReturnType<typeof provideExpanded>['toggleExpand']\n  isGroupOpen: ReturnType<typeof provideGroupBy>['isGroupOpen']\n  toggleGroup: ReturnType<typeof provideGroupBy>['toggleGroup']\n  items: readonly DataIteratorItem<T>[]\n  groupedItems: readonly (DataIteratorItem<T> | Group<DataIteratorItem<T>>)[]\n}\n\nexport type VDataIteratorSlots<T> = {\n  default: VDataIteratorSlotProps<T>\n  header: VDataIteratorSlotProps<T>\n  footer: VDataIteratorSlotProps<T>\n  loader: LoaderSlotProps\n  'no-data': never\n}\n\nexport const makeVDataIteratorProps = propsFactory({\n  search: String,\n  loading: Boolean,\n\n  ...makeComponentProps(),\n  ...makeDataIteratorItemsProps(),\n  ...makeDataTableSelectProps(),\n  ...makeDataTableSortProps(),\n  ...makeDataTablePaginateProps({ itemsPerPage: 5 }),\n  ...makeDataTableExpandProps(),\n  ...makeDataTableGroupProps(),\n  ...makeFilterProps(),\n  ...makeTagProps(),\n  ...makeTransitionProps({\n    transition: {\n      component: VFadeTransition as Component,\n      hideOnLeave: true,\n    },\n  }),\n}, 'VDataIterator')\n\nexport const VDataIterator = genericComponent<new <T> (\n  props: {\n    items?: readonly T[]\n  },\n  slots: VDataIteratorSlots<T>,\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VDataIterator',\n\n  props: makeVDataIteratorProps(),\n\n  emits: {\n    'update:modelValue': (value: any[]) => true,\n    'update:groupBy': (value: any) => true,\n    'update:page': (value: number) => true,\n    'update:itemsPerPage': (value: number) => true,\n    'update:sortBy': (value: any) => true,\n    'update:options': (value: any) => true,\n    'update:expanded': (value: any) => true,\n    'update:currentItems': (value: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const groupBy = useProxiedModel(props, 'groupBy')\n    const search = toRef(props, 'search')\n\n    const { items } = useDataIteratorItems(props)\n    const { filteredItems } = useFilter(props, items, search, { transform: item => item.raw })\n\n    const { sortBy, multiSort, mustSort } = createSort(props)\n    const { page, itemsPerPage } = createPagination(props)\n\n    const { toggleSort } = provideSort({ sortBy, multiSort, mustSort, page })\n    const { sortByWithGroups, opened, extractRows, isGroupOpen, toggleGroup } = provideGroupBy({ groupBy, sortBy })\n\n    const { sortedItems } = useSortedItems(props, filteredItems, sortByWithGroups, { transform: item => item.raw })\n    const { flatItems } = useGroupedItems(sortedItems, groupBy, opened)\n\n    const itemsLength = computed(() => flatItems.value.length)\n\n    const {\n      startIndex,\n      stopIndex,\n      pageCount,\n      prevPage,\n      nextPage,\n      setItemsPerPage,\n      setPage,\n    } = providePagination({ page, itemsPerPage, itemsLength })\n    const { paginatedItems } = usePaginatedItems({ items: flatItems, startIndex, stopIndex, itemsPerPage })\n\n    const paginatedItemsWithoutGroups = computed(() => extractRows(paginatedItems.value))\n\n    const {\n      isSelected,\n      select,\n      selectAll,\n      toggleSelect,\n    } = provideSelection(props, { allItems: items, currentPage: paginatedItemsWithoutGroups })\n    const { isExpanded, toggleExpand } = provideExpanded(props)\n\n    useOptions({\n      page,\n      itemsPerPage,\n      sortBy,\n      groupBy,\n      search,\n    })\n\n    const slotProps = computed(() => ({\n      page: page.value,\n      itemsPerPage: itemsPerPage.value,\n      sortBy: sortBy.value,\n      pageCount: pageCount.value,\n      toggleSort,\n      prevPage,\n      nextPage,\n      setPage,\n      setItemsPerPage,\n      isSelected,\n      select,\n      selectAll,\n      toggleSelect,\n      isExpanded,\n      toggleExpand,\n      isGroupOpen,\n      toggleGroup,\n      items: paginatedItemsWithoutGroups.value,\n      groupedItems: paginatedItems.value,\n    }))\n\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-data-iterator',\n          {\n            'v-data-iterator--loading': props.loading,\n          },\n          props.class,\n        ]}\n        style={ props.style }\n      >\n        { slots.header?.(slotProps.value) }\n\n        <MaybeTransition transition={ props.transition }>\n          { props.loading ? (\n            <LoaderSlot key=\"loader\" name=\"v-data-iterator\" active>\n              { slotProps => slots.loader?.(slotProps) }\n            </LoaderSlot>\n          ) : (\n            <div key=\"items\">\n              { !paginatedItems.value.length\n                ? slots['no-data']?.()\n                : slots.default?.(slotProps.value)\n              }\n            </div>\n          )}\n        </MaybeTransition>\n\n        { slots.footer?.(slotProps.value) }\n      </props.tag>\n    ))\n\n    return {}\n  },\n})\n\nexport type VDataIterator = InstanceType<typeof VDataIterator>\n"]},"metadata":{},"sourceType":"module"}
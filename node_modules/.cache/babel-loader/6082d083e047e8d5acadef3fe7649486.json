{"ast":null,"code":"import _objectSpread from \"/Users/antoniotorres/Documents/tony/tonyweb/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { Fragment as _Fragment, createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\"; // Styles\n\nimport \"./VSlider.css\"; // Components\n\nimport { VSliderThumb } from \"./VSliderThumb.js\";\nimport { VSliderTrack } from \"./VSliderTrack.js\";\nimport { makeVInputProps, VInput } from \"../VInput/VInput.js\";\nimport { VLabel } from \"../VLabel/index.js\"; // Composables\n\nimport { makeSliderProps, useSlider, useSteps } from \"./slider.js\";\nimport { makeFocusProps, useFocus } from \"../../composables/focus.js\";\nimport { useRtl } from \"../../composables/locale.js\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.js\"; // Utilities\n\nimport { computed, ref } from 'vue';\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.js\"; // Types\n\nexport var makeVSliderProps = propsFactory(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, makeFocusProps()), makeSliderProps()), makeVInputProps()), {}, {\n  modelValue: {\n    type: [Number, String],\n    default: 0\n  }\n}), 'VSlider');\nexport var VSlider = genericComponent()({\n  name: 'VSlider',\n  props: makeVSliderProps(),\n  emits: {\n    'update:focused': function updateFocused(value) {\n      return true;\n    },\n    'update:modelValue': function updateModelValue(v) {\n      return true;\n    },\n    start: function start(value) {\n      return true;\n    },\n    end: function end(value) {\n      return true;\n    }\n  },\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots,\n        emit = _ref.emit;\n    var thumbContainerRef = ref();\n\n    var _useRtl = useRtl(),\n        rtlClasses = _useRtl.rtlClasses;\n\n    var steps = useSteps(props);\n    var model = useProxiedModel(props, 'modelValue', undefined, function (value) {\n      return steps.roundValue(value == null ? steps.min.value : value);\n    });\n\n    var _useSlider = useSlider({\n      props: props,\n      steps: steps,\n      onSliderStart: function onSliderStart() {\n        emit('start', model.value);\n      },\n      onSliderEnd: function onSliderEnd(_ref2) {\n        var value = _ref2.value;\n        var roundedValue = roundValue(value);\n        model.value = roundedValue;\n        emit('end', roundedValue);\n      },\n      onSliderMove: function onSliderMove(_ref3) {\n        var value = _ref3.value;\n        return model.value = roundValue(value);\n      },\n      getActiveThumb: function getActiveThumb() {\n        var _thumbContainerRef$va;\n\n        return (_thumbContainerRef$va = thumbContainerRef.value) === null || _thumbContainerRef$va === void 0 ? void 0 : _thumbContainerRef$va.$el;\n      }\n    }),\n        min = _useSlider.min,\n        max = _useSlider.max,\n        mousePressed = _useSlider.mousePressed,\n        roundValue = _useSlider.roundValue,\n        onSliderMousedown = _useSlider.onSliderMousedown,\n        onSliderTouchstart = _useSlider.onSliderTouchstart,\n        trackContainerRef = _useSlider.trackContainerRef,\n        position = _useSlider.position,\n        hasLabels = _useSlider.hasLabels,\n        readonly = _useSlider.readonly;\n\n    var _useFocus = useFocus(props),\n        isFocused = _useFocus.isFocused,\n        focus = _useFocus.focus,\n        blur = _useFocus.blur;\n\n    var trackStop = computed(function () {\n      return position(model.value);\n    });\n    useRender(function () {\n      var inputProps = VInput.filterProps(props);\n      var hasPrepend = !!(props.label || slots.label || slots.prepend);\n      return _createVNode(VInput, _mergeProps({\n        \"class\": ['v-slider', {\n          'v-slider--has-labels': !!slots['tick-label'] || hasLabels.value,\n          'v-slider--focused': isFocused.value,\n          'v-slider--pressed': mousePressed.value,\n          'v-slider--disabled': props.disabled\n        }, rtlClasses.value, props.class],\n        \"style\": props.style\n      }, inputProps, {\n        \"focused\": isFocused.value\n      }), _objectSpread(_objectSpread({}, slots), {}, {\n        prepend: hasPrepend ? function (slotProps) {\n          var _slots$label, _slots$label2, _slots$prepend;\n\n          return _createVNode(_Fragment, null, [(_slots$label = (_slots$label2 = slots.label) === null || _slots$label2 === void 0 ? void 0 : _slots$label2.call(slots, slotProps)) !== null && _slots$label !== void 0 ? _slots$label : props.label ? _createVNode(VLabel, {\n            \"id\": slotProps.id.value,\n            \"class\": \"v-slider__label\",\n            \"text\": props.label\n          }, null) : undefined, (_slots$prepend = slots.prepend) === null || _slots$prepend === void 0 ? void 0 : _slots$prepend.call(slots, slotProps)]);\n        } : undefined,\n        default: function _default(_ref4) {\n          var id = _ref4.id,\n              messagesId = _ref4.messagesId;\n          return _createVNode(\"div\", {\n            \"class\": \"v-slider__container\",\n            \"onMousedown\": !readonly.value ? onSliderMousedown : undefined,\n            \"onTouchstartPassive\": !readonly.value ? onSliderTouchstart : undefined\n          }, [_createVNode(\"input\", {\n            \"id\": id.value,\n            \"name\": props.name || id.value,\n            \"disabled\": !!props.disabled,\n            \"readonly\": !!props.readonly,\n            \"tabindex\": \"-1\",\n            \"value\": model.value\n          }, null), _createVNode(VSliderTrack, {\n            \"ref\": trackContainerRef,\n            \"start\": 0,\n            \"stop\": trackStop.value\n          }, {\n            'tick-label': slots['tick-label']\n          }), _createVNode(VSliderThumb, {\n            \"ref\": thumbContainerRef,\n            \"aria-describedby\": messagesId.value,\n            \"focused\": isFocused.value,\n            \"min\": min.value,\n            \"max\": max.value,\n            \"modelValue\": model.value,\n            \"onUpdate:modelValue\": function onUpdateModelValue(v) {\n              return model.value = v;\n            },\n            \"position\": trackStop.value,\n            \"elevation\": props.elevation,\n            \"onFocus\": focus,\n            \"onBlur\": blur,\n            \"ripple\": props.ripple,\n            \"name\": props.name\n          }, {\n            'thumb-label': slots['thumb-label']\n          })]);\n        }\n      }));\n    });\n    return {};\n  }\n});","map":{"version":3,"mappings":"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","names":["VSliderThumb","VSliderTrack","makeVInputProps","VInput","VLabel","makeSliderProps","useSlider","useSteps","makeFocusProps","useFocus","useRtl","useProxiedModel","computed","ref","genericComponent","propsFactory","useRender","makeVSliderProps","modelValue","type","Number","String","default","VSlider","name","props","emits","value","v","start","end","setup","_ref","slots","emit","thumbContainerRef","rtlClasses","steps","model","undefined","roundValue","min","onSliderStart","onSliderEnd","_ref2","roundedValue","onSliderMove","_ref3","getActiveThumb","$el","max","mousePressed","onSliderMousedown","onSliderTouchstart","trackContainerRef","position","hasLabels","readonly","isFocused","focus","blur","trackStop","inputProps","filterProps","hasPrepend","label","prepend","disabled","class","style","slotProps","_createVNode","id","_ref4","messagesId","elevation","ripple"],"sources":["../../../src/components/VSlider/VSlider.tsx"],"sourcesContent":["// Styles\nimport './VSlider.sass'\n\n// Components\nimport { VSliderThumb } from './VSliderThumb'\nimport { VSliderTrack } from './VSliderTrack'\nimport { makeVInputProps, VInput } from '@/components/VInput/VInput'\nimport { VLabel } from '@/components/VLabel'\n\n// Composables\nimport { makeSliderProps, useSlider, useSteps } from './slider'\nimport { makeFocusProps, useFocus } from '@/composables/focus'\nimport { useRtl } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed, ref } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { VSliderThumbSlots } from './VSliderThumb'\nimport type { VSliderTrackSlots } from './VSliderTrack'\nimport type { VInputSlot, VInputSlots } from '@/components/VInput/VInput'\n\nexport type VSliderSlots = VInputSlots & VSliderThumbSlots & VSliderTrackSlots & {\n  label: VInputSlot\n}\n\nexport const makeVSliderProps = propsFactory({\n  ...makeFocusProps(),\n  ...makeSliderProps(),\n  ...makeVInputProps(),\n\n  modelValue: {\n    type: [Number, String],\n    default: 0,\n  },\n}, 'VSlider')\n\nexport const VSlider = genericComponent<VSliderSlots>()({\n  name: 'VSlider',\n\n  props: makeVSliderProps(),\n\n  emits: {\n    'update:focused': (value: boolean) => true,\n    'update:modelValue': (v: number) => true,\n    start: (value: number) => true,\n    end: (value: number) => true,\n  },\n\n  setup (props, { slots, emit }) {\n    const thumbContainerRef = ref()\n    const { rtlClasses } = useRtl()\n\n    const steps = useSteps(props)\n\n    const model = useProxiedModel(\n      props,\n      'modelValue',\n      undefined,\n      value => {\n        return steps.roundValue(value == null ? steps.min.value : value)\n      },\n    )\n\n    const {\n      min,\n      max,\n      mousePressed,\n      roundValue,\n      onSliderMousedown,\n      onSliderTouchstart,\n      trackContainerRef,\n      position,\n      hasLabels,\n      readonly,\n    } = useSlider({\n      props,\n      steps,\n      onSliderStart: () => {\n        emit('start', model.value)\n      },\n      onSliderEnd: ({ value }) => {\n        const roundedValue = roundValue(value)\n        model.value = roundedValue\n        emit('end', roundedValue)\n      },\n      onSliderMove: ({ value }) => model.value = roundValue(value),\n      getActiveThumb: () => thumbContainerRef.value?.$el,\n    })\n\n    const { isFocused, focus, blur } = useFocus(props)\n    const trackStop = computed(() => position(model.value))\n\n    useRender(() => {\n      const inputProps = VInput.filterProps(props)\n      const hasPrepend = !!(props.label || slots.label || slots.prepend)\n\n      return (\n        <VInput\n          class={[\n            'v-slider',\n            {\n              'v-slider--has-labels': !!slots['tick-label'] || hasLabels.value,\n              'v-slider--focused': isFocused.value,\n              'v-slider--pressed': mousePressed.value,\n              'v-slider--disabled': props.disabled,\n            },\n            rtlClasses.value,\n            props.class,\n          ]}\n          style={ props.style }\n          { ...inputProps }\n          focused={ isFocused.value }\n        >\n          {{\n            ...slots,\n            prepend: hasPrepend ? slotProps => (\n              <>\n                { slots.label?.(slotProps) ?? (\n                  props.label\n                    ? (\n                      <VLabel\n                        id={ slotProps.id.value }\n                        class=\"v-slider__label\"\n                        text={ props.label }\n                      />\n                    ) : undefined\n                )}\n\n                { slots.prepend?.(slotProps) }\n              </>\n            ) : undefined,\n            default: ({ id, messagesId }) => (\n              <div\n                class=\"v-slider__container\"\n                onMousedown={ !readonly.value ? onSliderMousedown : undefined }\n                onTouchstartPassive={ !readonly.value ? onSliderTouchstart : undefined }\n              >\n                <input\n                  id={ id.value }\n                  name={ props.name || id.value }\n                  disabled={ !!props.disabled }\n                  readonly={ !!props.readonly }\n                  tabindex=\"-1\"\n                  value={ model.value }\n                />\n\n                <VSliderTrack\n                  ref={ trackContainerRef }\n                  start={ 0 }\n                  stop={ trackStop.value }\n                >\n                  {{ 'tick-label': slots['tick-label'] }}\n                </VSliderTrack>\n\n                <VSliderThumb\n                  ref={ thumbContainerRef }\n                  aria-describedby={ messagesId.value }\n                  focused={ isFocused.value }\n                  min={ min.value }\n                  max={ max.value }\n                  modelValue={ model.value }\n                  onUpdate:modelValue={ v => (model.value = v) }\n                  position={ trackStop.value }\n                  elevation={ props.elevation }\n                  onFocus={ focus }\n                  onBlur={ blur }\n                  ripple={ props.ripple }\n                  name={ props.name }\n                >\n                  {{ 'thumb-label': slots['thumb-label'] }}\n                </VSliderThumb>\n              </div>\n            ),\n          }}\n        </VInput>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VSlider = InstanceType<typeof VSlider>\n"]},"metadata":{},"sourceType":"module"}
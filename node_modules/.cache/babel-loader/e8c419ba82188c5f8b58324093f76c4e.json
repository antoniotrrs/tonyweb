{"ast":null,"code":"import _toConsumableArray from \"/Users/antoniotorres/Documents/tony/tonyweb/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _createForOfIteratorHelper from \"/Users/antoniotorres/Documents/tony/tonyweb/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _asyncToGenerator from \"/Users/antoniotorres/Documents/tony/tonyweb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.includes.js\";\n// Utilities\nimport { shallowRef, watch } from 'vue'; // Types\n\nexport function useScrolling(listRef, textFieldRef) {\n  var isScrolling = shallowRef(false);\n  var scrollTimeout;\n\n  function onListScroll(e) {\n    cancelAnimationFrame(scrollTimeout);\n    isScrolling.value = true;\n    scrollTimeout = requestAnimationFrame(function () {\n      scrollTimeout = requestAnimationFrame(function () {\n        isScrolling.value = false;\n      });\n    });\n  }\n\n  function finishScrolling() {\n    return _finishScrolling.apply(this, arguments);\n  }\n\n  function _finishScrolling() {\n    _finishScrolling = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return new Promise(function (resolve) {\n                return requestAnimationFrame(resolve);\n              });\n\n            case 2:\n              _context.next = 4;\n              return new Promise(function (resolve) {\n                return requestAnimationFrame(resolve);\n              });\n\n            case 4:\n              _context.next = 6;\n              return new Promise(function (resolve) {\n                return requestAnimationFrame(resolve);\n              });\n\n            case 6:\n              _context.next = 8;\n              return new Promise(function (resolve) {\n                if (isScrolling.value) {\n                  var stop = watch(isScrolling, function () {\n                    stop();\n                    resolve();\n                  });\n                } else resolve();\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _finishScrolling.apply(this, arguments);\n  }\n\n  function onListKeydown(_x) {\n    return _onListKeydown.apply(this, arguments);\n  }\n\n  function _onListKeydown() {\n    _onListKeydown = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(e) {\n      var _listRef$value;\n\n      var _textFieldRef$value, el, children, top, _iterator, _step, child, bottom, _iterator2, _step2, _child;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (e.key === 'Tab') {\n                (_textFieldRef$value = textFieldRef.value) === null || _textFieldRef$value === void 0 ? void 0 : _textFieldRef$value.focus();\n              }\n\n              if (['PageDown', 'PageUp', 'Home', 'End'].includes(e.key)) {\n                _context2.next = 3;\n                break;\n              }\n\n              return _context2.abrupt(\"return\");\n\n            case 3:\n              el = (_listRef$value = listRef.value) === null || _listRef$value === void 0 ? void 0 : _listRef$value.$el;\n\n              if (el) {\n                _context2.next = 6;\n                break;\n              }\n\n              return _context2.abrupt(\"return\");\n\n            case 6:\n              if (e.key === 'Home' || e.key === 'End') {\n                el.scrollTo({\n                  top: e.key === 'Home' ? 0 : el.scrollHeight,\n                  behavior: 'smooth'\n                });\n              }\n\n              _context2.next = 9;\n              return finishScrolling();\n\n            case 9:\n              children = el.querySelectorAll(':scope > :not(.v-virtual-scroll__spacer)');\n\n              if (!(e.key === 'PageDown' || e.key === 'Home')) {\n                _context2.next = 32;\n                break;\n              }\n\n              top = el.getBoundingClientRect().top;\n              _iterator = _createForOfIteratorHelper(children);\n              _context2.prev = 13;\n\n              _iterator.s();\n\n            case 15:\n              if ((_step = _iterator.n()).done) {\n                _context2.next = 22;\n                break;\n              }\n\n              child = _step.value;\n\n              if (!(child.getBoundingClientRect().top >= top)) {\n                _context2.next = 20;\n                break;\n              }\n\n              child.focus();\n              return _context2.abrupt(\"break\", 22);\n\n            case 20:\n              _context2.next = 15;\n              break;\n\n            case 22:\n              _context2.next = 27;\n              break;\n\n            case 24:\n              _context2.prev = 24;\n              _context2.t0 = _context2[\"catch\"](13);\n\n              _iterator.e(_context2.t0);\n\n            case 27:\n              _context2.prev = 27;\n\n              _iterator.f();\n\n              return _context2.finish(27);\n\n            case 30:\n              _context2.next = 51;\n              break;\n\n            case 32:\n              bottom = el.getBoundingClientRect().bottom;\n              _iterator2 = _createForOfIteratorHelper(_toConsumableArray(children).reverse());\n              _context2.prev = 34;\n\n              _iterator2.s();\n\n            case 36:\n              if ((_step2 = _iterator2.n()).done) {\n                _context2.next = 43;\n                break;\n              }\n\n              _child = _step2.value;\n\n              if (!(_child.getBoundingClientRect().bottom <= bottom)) {\n                _context2.next = 41;\n                break;\n              }\n\n              _child.focus();\n\n              return _context2.abrupt(\"break\", 43);\n\n            case 41:\n              _context2.next = 36;\n              break;\n\n            case 43:\n              _context2.next = 48;\n              break;\n\n            case 45:\n              _context2.prev = 45;\n              _context2.t1 = _context2[\"catch\"](34);\n\n              _iterator2.e(_context2.t1);\n\n            case 48:\n              _context2.prev = 48;\n\n              _iterator2.f();\n\n              return _context2.finish(48);\n\n            case 51:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[13, 24, 27, 30], [34, 45, 48, 51]]);\n    }));\n    return _onListKeydown.apply(this, arguments);\n  }\n\n  return {\n    onScrollPassive: onListScroll,\n    onKeydown: onListKeydown\n  }; // typescript doesn't know about vue's event merging\n}","map":{"version":3,"mappings":"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","names":["shallowRef","watch","useScrolling","listRef","textFieldRef","isScrolling","scrollTimeout","onListScroll","e","cancelAnimationFrame","value","requestAnimationFrame","finishScrolling","Promise","resolve","stop","onListKeydown","key","focus","includes","el","$el","scrollTo","top","scrollHeight","behavior","children","querySelectorAll","getBoundingClientRect","child","bottom","reverse","onScrollPassive","onKeydown"],"sources":["../../../src/components/VSelect/useScrolling.ts"],"sourcesContent":["// Utilities\nimport { shallowRef, watch } from 'vue'\n\n// Types\nimport type { Ref } from 'vue'\nimport type { VList } from '@/components/VList'\nimport type { VTextField } from '@/components/VTextField'\n\nexport function useScrolling (listRef: Ref<VList | undefined>, textFieldRef: Ref<VTextField | undefined>) {\n  const isScrolling = shallowRef(false)\n  let scrollTimeout: number\n  function onListScroll (e: Event) {\n    cancelAnimationFrame(scrollTimeout)\n    isScrolling.value = true\n    scrollTimeout = requestAnimationFrame(() => {\n      scrollTimeout = requestAnimationFrame(() => {\n        isScrolling.value = false\n      })\n    })\n  }\n  async function finishScrolling () {\n    await new Promise(resolve => requestAnimationFrame(resolve))\n    await new Promise(resolve => requestAnimationFrame(resolve))\n    await new Promise(resolve => requestAnimationFrame(resolve))\n    await new Promise<void>(resolve => {\n      if (isScrolling.value) {\n        const stop = watch(isScrolling, () => {\n          stop()\n          resolve()\n        })\n      } else resolve()\n    })\n  }\n  async function onListKeydown (e: KeyboardEvent) {\n    if (e.key === 'Tab') {\n      textFieldRef.value?.focus()\n    }\n\n    if (!['PageDown', 'PageUp', 'Home', 'End'].includes(e.key)) return\n    const el: HTMLElement = listRef.value?.$el\n    if (!el) return\n\n    if (e.key === 'Home' || e.key === 'End') {\n      el.scrollTo({\n        top: e.key === 'Home' ? 0 : el.scrollHeight,\n        behavior: 'smooth',\n      })\n    }\n\n    await finishScrolling()\n\n    const children = el.querySelectorAll(':scope > :not(.v-virtual-scroll__spacer)')\n\n    if (e.key === 'PageDown' || e.key === 'Home') {\n      const top = el.getBoundingClientRect().top\n      for (const child of children) {\n        if (child.getBoundingClientRect().top >= top) {\n          (child as HTMLElement).focus()\n          break\n        }\n      }\n    } else {\n      const bottom = el.getBoundingClientRect().bottom\n      for (const child of [...children].reverse()) {\n        if (child.getBoundingClientRect().bottom <= bottom) {\n          (child as HTMLElement).focus()\n          break\n        }\n      }\n    }\n  }\n\n  return {\n    onScrollPassive: onListScroll,\n    onKeydown: onListKeydown,\n  } as Record<string, Function> // typescript doesn't know about vue's event merging\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"/Users/antoniotorres/Documents/tony/tonyweb/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _typeof from \"/Users/antoniotorres/Documents/tony/tonyweb/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport _objectWithoutProperties from \"/Users/antoniotorres/Documents/tony/tonyweb/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"transition\", \"disabled\", \"group\"],\n    _excluded2 = [\"component\"];\nimport \"core-js/modules/es.object.from-entries.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.object.entries.js\";\n// Utilities\nimport { h, mergeProps, Transition, TransitionGroup } from 'vue';\nimport { propsFactory } from \"../util/index.js\"; // Types\n\nexport var makeTransitionProps = propsFactory({\n  transition: {\n    type: [Boolean, String, Object],\n    default: 'fade-transition',\n    validator: function validator(val) {\n      return val !== true;\n    }\n  }\n}, 'transition');\nexport var MaybeTransition = function MaybeTransition(props, _ref) {\n  var slots = _ref.slots;\n\n  var transition = props.transition,\n      disabled = props.disabled,\n      group = props.group,\n      rest = _objectWithoutProperties(props, _excluded);\n\n  var _ref3 = _typeof(transition) === 'object' ? transition : {},\n      _ref3$component = _ref3.component,\n      component = _ref3$component === void 0 ? group ? TransitionGroup : Transition : _ref3$component,\n      customProps = _objectWithoutProperties(_ref3, _excluded2);\n\n  return h(component, mergeProps(typeof transition === 'string' ? {\n    name: disabled ? '' : transition\n  } : customProps, typeof transition === 'string' ? {} : Object.fromEntries(Object.entries({\n    disabled: disabled,\n    group: group\n  }).filter(function (_ref2) {\n    var _ref4 = _slicedToArray(_ref2, 2),\n        _ = _ref4[0],\n        v = _ref4[1];\n\n    return v !== undefined;\n  })), rest), slots);\n};","map":{"version":3,"mappings":";;;;;;;;;AAAA;AACA,SAASA,CAAT,EAAYC,UAAZ,EAAwBC,UAAxB,EAAoCC,eAApC,QAA2D,KAA3D;AAAgE,SACvDC,YADuD,QAC3C,kBAD2C,C,CAGhE;;AAGA,OAAO,IAAMC,mBAAmB,GAAGD,YAAY,CAAC;AAC9CE,YAAU,EAAE;AACVC,QAAI,EAAE,CAACC,OAAD,EAAUC,MAAV,EAAkBC,MAAlB,CADI;AAEVC,WAAO,EAAE,iBAFC;AAGVC,aAAS,EAAEC,sBAAG;AAAA,aAAIA,GAAG,KAAK,IAAZ;AAAA;AAHJ;AADkC,CAAD,EAM5C,YAN4C,CAAxC;AAcP,OAAO,IAAMC,eAA0D,GAAGA,SAA7DA,eAA6DA,CAACC,KAADD,EAAME,IAANF,EAAsB;AAAA,MAAZG,KAAY,GAALD,IAAK,CAAZC,KAAY;;AAC9F,MAAQX,UAAR,GAAiDS,KAAjD,CAAQT,UAAR;AAAA,MAAoBY,QAApB,GAAiDH,KAAjD,CAAoBG,QAApB;AAAA,MAA8BC,KAA9B,GAAiDJ,KAAjD,CAA8BI,KAA9B;AAAA,MAAwCC,IAAxC,4BAAiDL,KAAjD;;AAEA,cAGI,QAAOT,UAAP,MAAsB,QAAtB,GAAiCA,UAAjC,GAA8C,EAHlD;AAAA,8BACEe,SADF;AAAA,MACEA,SADF,gCACcF,KAAK,GAAGhB,eAAH,GAAqBD,UADxC;AAAA,MAEKoB,WAFL;;AAKA,SAAOtB,CAAC,CACNqB,SADM,EAENpB,UAAU,CACR,OAAOK,UAAP,KAAsB,QAAtB,GACI;AAAEiB,QAAI,EAAEL,QAAQ,GAAG,EAAH,GAAQZ;AAAxB,GADJ,GAEIgB,WAHI,EAIR,OAAOhB,UAAP,KAAsB,QAAtB,GACI,EADJ,GAEII,MAAM,CAACc,WAAPd,CAAmBA,MAAM,CAACe,OAAPf,CAAe;AAAEQ,YAAQ,EAARA,QAAF;AAAYC;AAAZ,GAAfT,EAAoCgB,MAApChB,CAA2CiB;AAAA,+BAAOA,KAAP;AAAA,QAAEC,CAAF;AAAA,QAAKC,CAAL;;AAAO,WAAKA,CAAC,KAAKC,SAAX;AAAoB,GAAtEpB,CAAnBA,CANI,EAORU,IAPQ,CAFJ,EAWNH,KAXM,CAAR;AAaD,CArBM","names":["h","mergeProps","Transition","TransitionGroup","propsFactory","makeTransitionProps","transition","type","Boolean","String","Object","default","validator","val","MaybeTransition","props","_ref","slots","disabled","group","rest","component","customProps","name","fromEntries","entries","filter","_ref2","_","v","undefined"],"sources":["../../src/composables/transition.ts"],"sourcesContent":["// Utilities\nimport { h, mergeProps, Transition, TransitionGroup } from 'vue'\nimport { propsFactory } from '@/util'\n\n// Types\nimport type { Component, FunctionalComponent, PropType, TransitionProps } from 'vue'\n\nexport const makeTransitionProps = propsFactory({\n  transition: {\n    type: [Boolean, String, Object] as PropType<string | boolean | TransitionProps & { component?: Component }>,\n    default: 'fade-transition',\n    validator: val => val !== true,\n  },\n}, 'transition')\n\ninterface MaybeTransitionProps extends TransitionProps {\n  transition?: string | boolean | TransitionProps & { component?: any }\n  disabled?: boolean\n  group?: boolean\n}\n\nexport const MaybeTransition: FunctionalComponent<MaybeTransitionProps> = (props, { slots }) => {\n  const { transition, disabled, group, ...rest } = props\n\n  const {\n    component = group ? TransitionGroup : Transition,\n    ...customProps\n  } = typeof transition === 'object' ? transition : {}\n\n  return h(\n    component,\n    mergeProps(\n      typeof transition === 'string'\n        ? { name: disabled ? '' : transition }\n        : customProps as any,\n      typeof transition === 'string'\n        ? {}\n        : Object.fromEntries(Object.entries({ disabled, group }).filter(([_, v]) => v !== undefined)),\n      rest as any,\n    ),\n    slots\n  )\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import \"core-js/modules/es.array.map.js\";\nimport { createVNode as _createVNode, createTextVNode as _createTextVNode } from \"vue\"; // Components\n\nimport { VDataTableColumn } from \"./VDataTableColumn.js\";\nimport { VBtn } from \"../VBtn/index.js\";\nimport { VCheckboxBtn } from \"../VCheckbox/index.js\"; // Composables\n\nimport { useGroupBy } from \"./composables/group.js\";\nimport { useHeaders } from \"./composables/headers.js\";\nimport { useSelection } from \"./composables/select.js\"; // Utilities\n\nimport { computed } from 'vue';\nimport { genericComponent, propsFactory } from \"../../util/index.js\"; // Types\n\nexport var makeVDataTableGroupHeaderRowProps = propsFactory({\n  item: {\n    type: Object,\n    required: true\n  }\n}, 'VDataTableGroupHeaderRow');\nexport var VDataTableGroupHeaderRow = genericComponent()({\n  name: 'VDataTableGroupHeaderRow',\n  props: makeVDataTableGroupHeaderRowProps(),\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n\n    var _useGroupBy = useGroupBy(),\n        isGroupOpen = _useGroupBy.isGroupOpen,\n        toggleGroup = _useGroupBy.toggleGroup,\n        extractRows = _useGroupBy.extractRows;\n\n    var _useSelection = useSelection(),\n        isSelected = _useSelection.isSelected,\n        isSomeSelected = _useSelection.isSomeSelected,\n        select = _useSelection.select;\n\n    var _useHeaders = useHeaders(),\n        columns = _useHeaders.columns;\n\n    var rows = computed(function () {\n      return extractRows([props.item]);\n    });\n    return function () {\n      return _createVNode(\"tr\", {\n        \"class\": \"v-data-table-group-header-row\",\n        \"style\": {\n          '--v-data-table-group-header-row-depth': props.item.depth\n        }\n      }, [columns.value.map(function (column) {\n        if (column.key === 'data-table-group') {\n          var _slots$dataTableGro, _slots$dataTableGro2;\n\n          var icon = isGroupOpen(props.item) ? '$expand' : '$next';\n\n          var onClick = function onClick() {\n            return toggleGroup(props.item);\n          };\n\n          return (_slots$dataTableGro = (_slots$dataTableGro2 = slots['data-table-group']) === null || _slots$dataTableGro2 === void 0 ? void 0 : _slots$dataTableGro2.call(slots, {\n            item: props.item,\n            count: rows.value.length,\n            props: {\n              icon: icon,\n              onClick: onClick\n            }\n          })) !== null && _slots$dataTableGro !== void 0 ? _slots$dataTableGro : _createVNode(VDataTableColumn, {\n            \"class\": \"v-data-table-group-header-row__column\"\n          }, {\n            default: function _default() {\n              return [_createVNode(VBtn, {\n                \"size\": \"small\",\n                \"variant\": \"text\",\n                \"icon\": icon,\n                \"onClick\": onClick\n              }, null), _createVNode(\"span\", null, [props.item.value]), _createVNode(\"span\", null, [_createTextVNode(\"(\"), rows.value.length, _createTextVNode(\")\")])];\n            }\n          });\n        }\n\n        if (column.key === 'data-table-select') {\n          var _slots$dataTableSel, _slots$dataTableSel2;\n\n          var modelValue = isSelected(rows.value);\n          var indeterminate = isSomeSelected(rows.value) && !modelValue;\n\n          var selectGroup = function selectGroup(v) {\n            return select(rows.value, v);\n          };\n\n          return (_slots$dataTableSel = (_slots$dataTableSel2 = slots['data-table-select']) === null || _slots$dataTableSel2 === void 0 ? void 0 : _slots$dataTableSel2.call(slots, {\n            props: {\n              modelValue: modelValue,\n              indeterminate: indeterminate,\n              'onUpdate:modelValue': selectGroup\n            }\n          })) !== null && _slots$dataTableSel !== void 0 ? _slots$dataTableSel : _createVNode(\"td\", null, [_createVNode(VCheckboxBtn, {\n            \"modelValue\": modelValue,\n            \"indeterminate\": indeterminate,\n            \"onUpdate:modelValue\": selectGroup\n          }, null)]);\n        }\n\n        return _createVNode(\"td\", null, null);\n      })]);\n    };\n  }\n});","map":{"version":3,"mappings":";wFAAA;;AAAA,SACSA,gBADT,QACyB,uBADzB;AACyB,SAChBC,IADgB,QACZ,kBADY;AACZ,SACJC,YADI,QACQ,uBADR,C,CAGb;;AAAA,SACSC,UADT,QACmB,wBADnB;AACmB,SACVC,UADU,QACA,0BADA;AACA,SACVC,YADU,QACE,yBADF,C,CAGnB;;AACA,SAASC,QAAT,QAAyB,KAAzB;AAA8B,SACrBC,gBADqB,EACHC,YADG,QACS,qBADT,C,CAG9B;;AASA,OAAO,IAAMC,iCAAiC,GAAGD,YAAY,CAAC;AAC5DE,MAAI,EAAE;AACJC,QAAI,EAAEC,MADF;AAEJC,YAAQ,EAAE;AAFN;AADsD,CAAD,EAK1D,0BAL0D,CAAtD;AAOP,OAAO,IAAMC,wBAAwB,GAAGP,gBAAgB,GAAkC;AACxFQ,MAAI,EAAE,0BADkF;AAGxFC,OAAK,EAAEP,iCAAiC,EAHgD;AAKxFQ,OALwF,iBAKjFD,KALiF,EAK5EE,IAL4E,EAK/D;AAAA,QAATC,KAAS,GAAFD,IAAE,CAATC,KAAS;;AACvB,sBAAkDhB,UAAU,EAA5D;AAAA,QAAQiB,WAAR,eAAQA,WAAR;AAAA,QAAqBC,WAArB,eAAqBA,WAArB;AAAA,QAAkCC,WAAlC,eAAkCA,WAAlC;;AACA,wBAA+CjB,YAAY,EAA3D;AAAA,QAAQkB,UAAR,iBAAQA,UAAR;AAAA,QAAoBC,cAApB,iBAAoBA,cAApB;AAAA,QAAoCC,MAApC,iBAAoCA,MAApC;;AACA,sBAAoBrB,UAAU,EAA9B;AAAA,QAAQsB,OAAR,eAAQA,OAAR;;AAEA,QAAMC,IAAI,GAAGrB,QAAQ,CAAC,YAAM;AAC1B,aAAOgB,WAAW,CAAC,CAACN,KAAK,CAACN,IAAP,CAAD,CAAlB;AACD,KAFoB,CAArB;AAIA,WAAO;AAAA;AAAA;AAAA,iBAGI;AACL,mDAAyCM,KAAK,CAACN,IAANM,CAAWY;AAD/C;AAHJ,SAKF,CAECF,OAAO,CAACG,KAARH,CAAcI,GAAdJ,CAAkBK,gBAAM,EAAI;AAC5B,YAAIA,MAAM,CAACC,GAAPD,KAAe,kBAAnB,EAAuC;AAAA;;AACrC,cAAME,IAAI,GAAGb,WAAW,CAACJ,KAAK,CAACN,IAAP,CAAXU,GAA0B,SAA1BA,GAAsC,OAAnD;;AACA,cAAMc,OAAO,GAAGA,SAAVA,OAAUA;AAAAA,mBAAMb,WAAW,CAACL,KAAK,CAACN,IAAP,CAAjBwB;AAAAA,WAAhB;;AAEA,gEAAOf,KAAK,CAAC,kBAAD,CAAZ,yDAAOA,+BAAK,EAAuB;AAAET,gBAAI,EAAEM,KAAK,CAACN,IAAd;AAAoByB,iBAAK,EAAER,IAAI,CAACE,KAALF,CAAWS,MAAtC;AAA8CpB,iBAAK,EAAE;AAAEiB,kBAAI,EAAJA,IAAF;AAAQC;AAAR;AAArD,WAAvB,CAAZ,qEAA4GG;AAAA;AAAA;AAAAC;AAAAA;AAAA;AAAA;AAAA,wBAK/FL,IAL+F;AAK3F,2BACDC;AAN4F,iBAMrF,IANqF,GAMrFG,4BAEXrB,KAAK,CAACN,IAANM,CAAWa,KAFA,EANqF,EAQhFQ,mDACfV,IAAI,CAACE,KAALF,CAAWS,MADI,EACEG,qBADF,EARgF;AAAAD;AAAA,YAA5G;AAYF;;AAEA,YAAIP,MAAM,CAACC,GAAPD,KAAe,mBAAnB,EAAwC;AAAA;;AACtC,cAAMS,UAAU,GAAGjB,UAAU,CAACI,IAAI,CAACE,KAAN,CAA7B;AACA,cAAMY,aAAa,GAAGjB,cAAc,CAACG,IAAI,CAACE,KAAN,CAAdL,IAA8B,CAACgB,UAArD;;AACA,cAAME,WAAW,GAAIC,SAAfD,WAAeC,EAAU;AAAA,mBAAKlB,MAAM,CAACE,IAAI,CAACE,KAAN,EAAac,CAAb,CAAX;AAAA,WAA/B;;AACA,gEAAOxB,KAAK,CAAC,mBAAD,CAAZ,yDAAOA,+BAAK,EAAwB;AAAEH,iBAAK,EAAE;AAAEwB,wBAAU,EAAVA,UAAF;AAAcC,2BAAa,EAAbA,aAAd;AAA6B,qCAAuBC;AAApD;AAAT,WAAxB,CAAZ,qEAAiHL;AAAA,0BAG9FG,UAH8F;AAGpF,6BACPC,aAJ2F;AAI9E,mCACPC;AALqF,aAK1E,IAL0E,GAAjH;AASF;;AAEA;AACD,OAnCChB,CAFD,CALE;AAAA,KAAP;AA6CF;AA3DwF,CAAlC,CAAjD","names":["VDataTableColumn","VBtn","VCheckboxBtn","useGroupBy","useHeaders","useSelection","computed","genericComponent","propsFactory","makeVDataTableGroupHeaderRowProps","item","type","Object","required","VDataTableGroupHeaderRow","name","props","setup","_ref","slots","isGroupOpen","toggleGroup","extractRows","isSelected","isSomeSelected","select","columns","rows","depth","value","map","column","key","icon","onClick","count","length","_createVNode","default","_createTextVNode","modelValue","indeterminate","selectGroup","v"],"sources":["../../../src/components/VDataTable/VDataTableGroupHeaderRow.tsx"],"sourcesContent":["// Components\nimport { VDataTableColumn } from './VDataTableColumn'\nimport { VBtn } from '@/components/VBtn'\nimport { VCheckboxBtn } from '@/components/VCheckbox'\n\n// Composables\nimport { useGroupBy } from './composables/group'\nimport { useHeaders } from './composables/headers'\nimport { useSelection } from './composables/select'\n\n// Utilities\nimport { computed } from 'vue'\nimport { genericComponent, propsFactory } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { Group } from './composables/group'\n\nexport type VDataTableGroupHeaderRowSlots = {\n  'data-table-group': { item: Group, count: number, props: Record<string, unknown> }\n  'data-table-select': { props: Record<string, unknown> }\n}\n\nexport const makeVDataTableGroupHeaderRowProps = propsFactory({\n  item: {\n    type: Object as PropType<Group>,\n    required: true,\n  },\n}, 'VDataTableGroupHeaderRow')\n\nexport const VDataTableGroupHeaderRow = genericComponent<VDataTableGroupHeaderRowSlots>()({\n  name: 'VDataTableGroupHeaderRow',\n\n  props: makeVDataTableGroupHeaderRowProps(),\n\n  setup (props, { slots }) {\n    const { isGroupOpen, toggleGroup, extractRows } = useGroupBy()\n    const { isSelected, isSomeSelected, select } = useSelection()\n    const { columns } = useHeaders()\n\n    const rows = computed(() => {\n      return extractRows([props.item])\n    })\n\n    return () => (\n      <tr\n        class=\"v-data-table-group-header-row\"\n        style={{\n          '--v-data-table-group-header-row-depth': props.item.depth,\n        }}\n      >\n        { columns.value.map(column => {\n          if (column.key === 'data-table-group') {\n            const icon = isGroupOpen(props.item) ? '$expand' : '$next'\n            const onClick = () => toggleGroup(props.item)\n\n            return slots['data-table-group']?.({ item: props.item, count: rows.value.length, props: { icon, onClick } }) ?? (\n              <VDataTableColumn class=\"v-data-table-group-header-row__column\">\n                <VBtn\n                  size=\"small\"\n                  variant=\"text\"\n                  icon={ icon }\n                  onClick={ onClick }\n                />\n                <span>{ props.item.value }</span>\n                <span>({ rows.value.length })</span>\n              </VDataTableColumn>\n            )\n          }\n\n          if (column.key === 'data-table-select') {\n            const modelValue = isSelected(rows.value)\n            const indeterminate = isSomeSelected(rows.value) && !modelValue\n            const selectGroup = (v: boolean) => select(rows.value, v)\n            return slots['data-table-select']?.({ props: { modelValue, indeterminate, 'onUpdate:modelValue': selectGroup } }) ?? (\n              <td>\n                <VCheckboxBtn\n                  modelValue={ modelValue }\n                  indeterminate={ indeterminate }\n                  onUpdate:modelValue={ selectGroup }\n                />\n              </td>\n            )\n          }\n\n          return <td />\n        })}\n      </tr>\n    )\n  },\n})\n"]},"metadata":{},"sourceType":"module"}
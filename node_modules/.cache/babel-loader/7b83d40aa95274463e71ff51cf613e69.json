{"ast":null,"code":"import { Fragment as _Fragment, createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\"; // Styles\n\nimport \"./VColorPicker.css\"; // Components\n\nimport { VColorPickerCanvas } from \"./VColorPickerCanvas.js\";\nimport { VColorPickerEdit } from \"./VColorPickerEdit.js\";\nimport { VColorPickerPreview } from \"./VColorPickerPreview.js\";\nimport { VColorPickerSwatches } from \"./VColorPickerSwatches.js\";\nimport { makeVPickerProps, VPicker } from \"../../labs/VPicker/VPicker.js\"; // Composables\n\nimport { useRtl } from \"../../composables/index.js\";\nimport { provideDefaults } from \"../../composables/defaults.js\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.js\"; // Utilities\n\nimport { computed, onBeforeMount, ref, watch } from 'vue';\nimport { extractColor, modes, nullColor } from \"./util/index.js\";\nimport { consoleWarn, defineComponent, HSVtoCSS, parseColor, propsFactory, RGBtoHSV, useRender } from \"../../util/index.js\"; // Types\n\nexport const makeVColorPickerProps = propsFactory({\n  canvasHeight: {\n    type: [String, Number],\n    default: 150\n  },\n  disabled: Boolean,\n  dotSize: {\n    type: [Number, String],\n    default: 10\n  },\n  hideCanvas: Boolean,\n  hideSliders: Boolean,\n  hideInputs: Boolean,\n  mode: {\n    type: String,\n    default: 'rgba',\n    validator: v => Object.keys(modes).includes(v)\n  },\n  modes: {\n    type: Array,\n    default: () => Object.keys(modes),\n    validator: v => Array.isArray(v) && v.every(m => Object.keys(modes).includes(m))\n  },\n  showSwatches: Boolean,\n  swatches: Array,\n  swatchesMaxHeight: {\n    type: [Number, String],\n    default: 150\n  },\n  modelValue: {\n    type: [Object, String]\n  },\n  ...makeVPickerProps({\n    hideHeader: true\n  })\n}, 'VColorPicker');\nexport const VColorPicker = defineComponent({\n  name: 'VColorPicker',\n  props: makeVColorPickerProps(),\n  emits: {\n    'update:modelValue': color => true,\n    'update:mode': mode => true\n  },\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const mode = useProxiedModel(props, 'mode');\n    const hue = ref(null);\n    const model = useProxiedModel(props, 'modelValue', undefined, v => {\n      if (v == null || v === '') return null;\n      let c;\n\n      try {\n        c = RGBtoHSV(parseColor(v));\n      } catch (err) {\n        consoleWarn(err);\n        return null;\n      }\n\n      return c;\n    }, v => {\n      if (!v) return null;\n      return extractColor(v, props.modelValue);\n    });\n    const currentColor = computed(() => {\n      return model.value ? { ...model.value,\n        h: hue.value ?? model.value.h\n      } : null;\n    });\n    const {\n      rtlClasses\n    } = useRtl();\n    let externalChange = true;\n    watch(model, v => {\n      if (!externalChange) {\n        // prevent hue shift from rgb conversion inaccuracy\n        externalChange = true;\n        return;\n      }\n\n      if (!v) return;\n      hue.value = v.h;\n    }, {\n      immediate: true\n    });\n\n    const updateColor = hsva => {\n      externalChange = false;\n      hue.value = hsva.h;\n      model.value = hsva;\n    };\n\n    onBeforeMount(() => {\n      if (!props.modes.includes(mode.value)) mode.value = props.modes[0];\n    });\n    provideDefaults({\n      VSlider: {\n        color: undefined,\n        trackColor: undefined,\n        trackFillColor: undefined\n      }\n    });\n    useRender(() => {\n      const pickerProps = VPicker.filterProps(props);\n      return _createVNode(VPicker, _mergeProps(pickerProps, {\n        \"class\": ['v-color-picker', rtlClasses.value, props.class],\n        \"style\": [{\n          '--v-color-picker-color-hsv': HSVtoCSS({ ...(currentColor.value ?? nullColor),\n            a: 1\n          })\n        }, props.style]\n      }), { ...slots,\n        default: () => _createVNode(_Fragment, null, [!props.hideCanvas && _createVNode(VColorPickerCanvas, {\n          \"key\": \"canvas\",\n          \"color\": currentColor.value,\n          \"onUpdate:color\": updateColor,\n          \"disabled\": props.disabled,\n          \"dotSize\": props.dotSize,\n          \"width\": props.width,\n          \"height\": props.canvasHeight\n        }, null), (!props.hideSliders || !props.hideInputs) && _createVNode(\"div\", {\n          \"key\": \"controls\",\n          \"class\": \"v-color-picker__controls\"\n        }, [!props.hideSliders && _createVNode(VColorPickerPreview, {\n          \"key\": \"preview\",\n          \"color\": currentColor.value,\n          \"onUpdate:color\": updateColor,\n          \"hideAlpha\": !mode.value.endsWith('a'),\n          \"disabled\": props.disabled\n        }, null), !props.hideInputs && _createVNode(VColorPickerEdit, {\n          \"key\": \"edit\",\n          \"modes\": props.modes,\n          \"mode\": mode.value,\n          \"onUpdate:mode\": m => mode.value = m,\n          \"color\": currentColor.value,\n          \"onUpdate:color\": updateColor,\n          \"disabled\": props.disabled\n        }, null)]), props.showSwatches && _createVNode(VColorPickerSwatches, {\n          \"key\": \"swatches\",\n          \"color\": currentColor.value,\n          \"onUpdate:color\": updateColor,\n          \"maxHeight\": props.swatchesMaxHeight,\n          \"swatches\": props.swatches,\n          \"disabled\": props.disabled\n        }, null)])\n      });\n    });\n    return {};\n  }\n\n});","map":{"version":3,"mappings":"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","names":["VColorPickerCanvas","VColorPickerEdit","VColorPickerPreview","VColorPickerSwatches","makeVPickerProps","VPicker","useRtl","provideDefaults","useProxiedModel","computed","onBeforeMount","ref","watch","extractColor","modes","nullColor","consoleWarn","defineComponent","HSVtoCSS","parseColor","propsFactory","RGBtoHSV","useRender","makeVColorPickerProps","canvasHeight","type","String","Number","default","disabled","Boolean","dotSize","hideCanvas","hideSliders","hideInputs","mode","validator","v","Object","keys","includes","Array","isArray","every","m","showSwatches","swatches","swatchesMaxHeight","modelValue","hideHeader","VColorPicker","name","props","emits","color","setup","_ref","slots","hue","model","undefined","c","err","currentColor","value","h","rtlClasses","externalChange","immediate","updateColor","hsva","VSlider","trackColor","trackFillColor","pickerProps","filterProps","class","a","style","_createVNode","width","endsWith"],"sources":["../../../src/components/VColorPicker/VColorPicker.tsx"],"sourcesContent":["// Styles\nimport './VColorPicker.sass'\n\n// Components\nimport { VColorPickerCanvas } from './VColorPickerCanvas'\nimport { VColorPickerEdit } from './VColorPickerEdit'\nimport { VColorPickerPreview } from './VColorPickerPreview'\nimport { VColorPickerSwatches } from './VColorPickerSwatches'\nimport { makeVPickerProps, VPicker } from '@/labs/VPicker/VPicker'\n\n// Composables\nimport { useRtl } from '@/composables'\nimport { provideDefaults } from '@/composables/defaults'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed, onBeforeMount, ref, watch } from 'vue'\nimport { extractColor, modes, nullColor } from './util'\nimport { consoleWarn, defineComponent, HSVtoCSS, parseColor, propsFactory, RGBtoHSV, useRender } from '@/util'\n\n// Types\nimport type { DeepReadonly, PropType } from 'vue'\nimport type { Color, HSV } from '@/util'\n\nexport const makeVColorPickerProps = propsFactory({\n  canvasHeight: {\n    type: [String, Number],\n    default: 150,\n  },\n  disabled: Boolean,\n  dotSize: {\n    type: [Number, String],\n    default: 10,\n  },\n  hideCanvas: Boolean,\n  hideSliders: Boolean,\n  hideInputs: Boolean,\n  mode: {\n    type: String as PropType<keyof typeof modes>,\n    default: 'rgba',\n    validator: (v: string) => Object.keys(modes).includes(v),\n  },\n  modes: {\n    type: Array as PropType<readonly (keyof typeof modes)[]>,\n    default: () => Object.keys(modes),\n    validator: (v: any) => Array.isArray(v) && v.every(m => Object.keys(modes).includes(m)),\n  },\n  showSwatches: Boolean,\n  swatches: Array as PropType<DeepReadonly<Color[][]>>,\n  swatchesMaxHeight: {\n    type: [Number, String],\n    default: 150,\n  },\n  modelValue: {\n    type: [Object, String] as PropType<Record<string, unknown> | string | undefined | null>,\n  },\n\n  ...makeVPickerProps({ hideHeader: true }),\n}, 'VColorPicker')\n\nexport const VColorPicker = defineComponent({\n  name: 'VColorPicker',\n\n  props: makeVColorPickerProps(),\n\n  emits: {\n    'update:modelValue': (color: any) => true,\n    'update:mode': (mode: keyof typeof modes) => true,\n  },\n\n  setup (props, { slots }) {\n    const mode = useProxiedModel(props, 'mode')\n    const hue = ref<number | null>(null)\n    const model = useProxiedModel(\n      props,\n      'modelValue',\n      undefined,\n      v => {\n        if (v == null || v === '') return null\n\n        let c: HSV\n        try {\n          c = RGBtoHSV(parseColor(v as any))\n        } catch (err) {\n          consoleWarn(err as any)\n          return null\n        }\n\n        return c\n      },\n      v => {\n        if (!v) return null\n\n        return extractColor(v, props.modelValue)\n      }\n    )\n    const currentColor = computed(() => {\n      return model.value\n        ? { ...model.value, h: hue.value ?? model.value.h }\n        : null\n    })\n    const { rtlClasses } = useRtl()\n\n    let externalChange = true\n    watch(model, v => {\n      if (!externalChange) {\n        // prevent hue shift from rgb conversion inaccuracy\n        externalChange = true\n        return\n      }\n      if (!v) return\n      hue.value = v.h\n    }, { immediate: true })\n\n    const updateColor = (hsva: HSV) => {\n      externalChange = false\n      hue.value = hsva.h\n      model.value = hsva\n    }\n\n    onBeforeMount(() => {\n      if (!props.modes.includes(mode.value)) mode.value = props.modes[0]\n    })\n\n    provideDefaults({\n      VSlider: {\n        color: undefined,\n        trackColor: undefined,\n        trackFillColor: undefined,\n      },\n    })\n\n    useRender(() => {\n      const pickerProps = VPicker.filterProps(props)\n\n      return (\n        <VPicker\n          { ...pickerProps }\n          class={[\n            'v-color-picker',\n            rtlClasses.value,\n            props.class,\n          ]}\n          style={[\n            {\n              '--v-color-picker-color-hsv': HSVtoCSS({ ...(currentColor.value ?? nullColor), a: 1 }),\n            },\n            props.style,\n          ]}\n          v-slots={{\n            ...slots,\n            default: () => (\n              <>\n                { !props.hideCanvas && (\n                  <VColorPickerCanvas\n                    key=\"canvas\"\n                    color={ currentColor.value }\n                    onUpdate:color={ updateColor }\n                    disabled={ props.disabled }\n                    dotSize={ props.dotSize }\n                    width={ props.width }\n                    height={ props.canvasHeight }\n                  />\n                )}\n\n                { (!props.hideSliders || !props.hideInputs) && (\n                  <div key=\"controls\" class=\"v-color-picker__controls\">\n                    { !props.hideSliders && (\n                      <VColorPickerPreview\n                        key=\"preview\"\n                        color={ currentColor.value }\n                        onUpdate:color={ updateColor }\n                        hideAlpha={ !mode.value.endsWith('a') }\n                        disabled={ props.disabled }\n                      />\n                    )}\n\n                    { !props.hideInputs && (\n                      <VColorPickerEdit\n                        key=\"edit\"\n                        modes={ props.modes }\n                        mode={ mode.value }\n                        onUpdate:mode={ m => mode.value = m }\n                        color={ currentColor.value }\n                        onUpdate:color={ updateColor }\n                        disabled={ props.disabled }\n                      />\n                    )}\n                  </div>\n                )}\n\n                { props.showSwatches && (\n                  <VColorPickerSwatches\n                    key=\"swatches\"\n                    color={ currentColor.value }\n                    onUpdate:color={ updateColor }\n                    maxHeight={ props.swatchesMaxHeight }\n                    swatches={ props.swatches }\n                    disabled={ props.disabled }\n                  />\n                )}\n              </>\n            ),\n          }}\n        />\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VColorPicker = InstanceType<typeof VColorPicker>\n"]},"metadata":{},"sourceType":"module"}
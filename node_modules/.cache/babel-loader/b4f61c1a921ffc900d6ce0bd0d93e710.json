{"ast":null,"code":"import \"core-js/modules/es.regexp.constructor.js\";\nimport \"core-js/modules/es.regexp.dot-all.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.sticky.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.weak-map.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.replace.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport _typeof from \"./typeof.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport inherits from \"./inherits.js\";\nexport default function _wrapRegExp() {\n  _wrapRegExp = function _wrapRegExp(re, groups) {\n    return new BabelRegExp(re, void 0, groups);\n  };\n\n  var _super = RegExp.prototype,\n      _groups = new WeakMap();\n\n  function BabelRegExp(re, flags, groups) {\n    var _this = new RegExp(re, flags);\n\n    return _groups.set(_this, groups || _groups.get(re)), setPrototypeOf(_this, BabelRegExp.prototype);\n  }\n\n  function buildGroups(result, re) {\n    var g = _groups.get(re);\n\n    return Object.keys(g).reduce(function (groups, name) {\n      return groups[name] = result[g[name]], groups;\n    }, Object.create(null));\n  }\n\n  return inherits(BabelRegExp, RegExp), BabelRegExp.prototype.exec = function (str) {\n    var result = _super.exec.call(this, str);\n\n    return result && (result.groups = buildGroups(result, this)), result;\n  }, BabelRegExp.prototype[Symbol.replace] = function (str, substitution) {\n    if (\"string\" == typeof substitution) {\n      var groups = _groups.get(this);\n\n      return _super[Symbol.replace].call(this, str, substitution.replace(/\\$<([^>]+)>/g, function (_, name) {\n        return \"$\" + groups[name];\n      }));\n    }\n\n    if (\"function\" == typeof substitution) {\n      var _this = this;\n\n      return _super[Symbol.replace].call(this, str, function () {\n        var args = arguments;\n        return \"object\" != _typeof(args[args.length - 1]) && (args = [].slice.call(args)).push(buildGroups(args, _this)), substitution.apply(this, args);\n      });\n    }\n\n    return _super[Symbol.replace].call(this, str, substitution);\n  }, _wrapRegExp.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/antoniotorres/Documents/tony/tonyweb/node_modules/@babel/runtime/helpers/esm/wrapRegExp.js"],"names":["_typeof","setPrototypeOf","inherits","_wrapRegExp","re","groups","BabelRegExp","_super","RegExp","prototype","_groups","WeakMap","flags","_this","set","get","buildGroups","result","g","Object","keys","reduce","name","create","exec","str","call","Symbol","replace","substitution","_","args","arguments","length","slice","push","apply"],"mappings":"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","sourcesContent":["import _typeof from \"./typeof.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport inherits from \"./inherits.js\";\nexport default function _wrapRegExp() {\n  _wrapRegExp = function _wrapRegExp(re, groups) {\n    return new BabelRegExp(re, void 0, groups);\n  };\n\n  var _super = RegExp.prototype,\n      _groups = new WeakMap();\n\n  function BabelRegExp(re, flags, groups) {\n    var _this = new RegExp(re, flags);\n\n    return _groups.set(_this, groups || _groups.get(re)), setPrototypeOf(_this, BabelRegExp.prototype);\n  }\n\n  function buildGroups(result, re) {\n    var g = _groups.get(re);\n\n    return Object.keys(g).reduce(function (groups, name) {\n      return groups[name] = result[g[name]], groups;\n    }, Object.create(null));\n  }\n\n  return inherits(BabelRegExp, RegExp), BabelRegExp.prototype.exec = function (str) {\n    var result = _super.exec.call(this, str);\n\n    return result && (result.groups = buildGroups(result, this)), result;\n  }, BabelRegExp.prototype[Symbol.replace] = function (str, substitution) {\n    if (\"string\" == typeof substitution) {\n      var groups = _groups.get(this);\n\n      return _super[Symbol.replace].call(this, str, substitution.replace(/\\$<([^>]+)>/g, function (_, name) {\n        return \"$\" + groups[name];\n      }));\n    }\n\n    if (\"function\" == typeof substitution) {\n      var _this = this;\n\n      return _super[Symbol.replace].call(this, str, function () {\n        var args = arguments;\n        return \"object\" != _typeof(args[args.length - 1]) && (args = [].slice.call(args)).push(buildGroups(args, _this)), substitution.apply(this, args);\n      });\n    }\n\n    return _super[Symbol.replace].call(this, str, substitution);\n  }, _wrapRegExp.apply(this, arguments);\n}"]},"metadata":{},"sourceType":"module"}
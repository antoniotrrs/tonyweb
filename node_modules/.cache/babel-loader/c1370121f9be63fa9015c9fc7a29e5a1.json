{"ast":null,"code":"import _typeof from \"/Users/antoniotorres/Documents/tony/tonyweb/node_modules/@babel/runtime/helpers/esm/typeof.js\";\n\n// Types\nfunction mounted(el, binding) {\n  var _binding$modifiers;\n\n  var _ref = (_binding$modifiers = binding.modifiers) !== null && _binding$modifiers !== void 0 ? _binding$modifiers : {},\n      _ref$self = _ref.self,\n      self = _ref$self === void 0 ? false : _ref$self;\n\n  var value = binding.value;\n  var options = _typeof(value) === 'object' && value.options || {\n    passive: true\n  };\n  var handler = typeof value === 'function' || 'handleEvent' in value ? value : value.handler;\n  var target = self ? el : binding.arg ? document.querySelector(binding.arg) : window;\n  if (!target) return;\n  target.addEventListener('scroll', handler, options);\n  el._onScroll = Object(el._onScroll);\n  el._onScroll[binding.instance.$.uid] = {\n    handler: handler,\n    options: options,\n    // Don't reference self\n    target: self ? undefined : target\n  };\n}\n\nfunction unmounted(el, binding) {\n  var _el$_onScroll;\n\n  if (!((_el$_onScroll = el._onScroll) !== null && _el$_onScroll !== void 0 && _el$_onScroll[binding.instance.$.uid])) return;\n  var _el$_onScroll$binding = el._onScroll[binding.instance.$.uid],\n      handler = _el$_onScroll$binding.handler,\n      options = _el$_onScroll$binding.options,\n      _el$_onScroll$binding2 = _el$_onScroll$binding.target,\n      target = _el$_onScroll$binding2 === void 0 ? el : _el$_onScroll$binding2;\n  target.removeEventListener('scroll', handler, options);\n  delete el._onScroll[binding.instance.$.uid];\n}\n\nfunction updated(el, binding) {\n  if (binding.value === binding.oldValue) return;\n  unmounted(el, binding);\n  mounted(el, binding);\n}\n\nexport var Scroll = {\n  mounted: mounted,\n  unmounted: unmounted,\n  updated: updated\n};\nexport default Scroll;","map":{"version":3,"mappings":";;AAAA;AAaA,SAASA,OAAT,CAAkBC,EAAlB,EAAmCC,OAAnC,EAAoE;AAAA;;AAClE,mCAAyBA,OAAO,CAACC,SAAjC,mEAA8C,EAA9C;AAAA,uBAAQC,IAAR;AAAA,MAAQA,IAAR,0BAAe,KAAf;;AACA,MAAMC,KAAK,GAAGH,OAAO,CAACG,KAAtB;AACA,MAAMC,OAAO,GAAI,QAAOD,KAAP,MAAiB,QAAjB,IAA6BA,KAAK,CAACC,OAAnC,IAA+C;AAAEC,WAAO,EAAE;AAAX,GAAhE;AACA,MAAMC,OAAO,GAAG,OAAOH,KAAP,KAAiB,UAAjB,IAA+B,iBAAiBA,KAAhD,GAAwDA,KAAxD,GAAgEA,KAAK,CAACG,OAAtF;AAEA,MAAMC,MAAM,GAAGL,IAAI,GACfH,EADe,GAEfC,OAAO,CAACQ,GAARR,GACES,QAAQ,CAACC,aAATD,CAAuBT,OAAO,CAACQ,GAA/BC,CADFT,GAEEW,MAJN;AAMA,MAAI,CAACJ,MAAL,EAAa;AAEbA,QAAM,CAACK,gBAAPL,CAAwB,QAAxBA,EAAkCD,OAAlCC,EAA2CH,OAA3CG;AAEAR,IAAE,CAACc,SAAHd,GAAee,MAAM,CAACf,EAAE,CAACc,SAAJ,CAArBd;AACAA,IAAE,CAACc,SAAHd,CAAcC,OAAO,CAACe,QAARf,CAAkBgB,CAAlBhB,CAAoBiB,GAAlClB,IAAyC;AACvCO,WAAO,EAAPA,OADuC;AAEvCF,WAAO,EAAPA,OAFuC;AAGvC;AACAG,UAAM,EAAEL,IAAI,GAAGgB,SAAH,GAAeX;AAJY,GAAzCR;AAMF;;AAEA,SAASoB,SAAT,CAAoBpB,EAApB,EAAqCC,OAArC,EAAsE;AAAA;;AACpE,MAAI,mBAACD,EAAE,CAACc,SAAJ,0CAACd,cAAeC,OAAO,CAACe,QAARf,CAAkBgB,CAAlBhB,CAAoBiB,GAAnClB,CAAD,CAAJ,EAA8C;AAE9C,8BAA0CA,EAAE,CAACc,SAAHd,CAAaC,OAAO,CAACe,QAARf,CAAkBgB,CAAlBhB,CAAoBiB,GAAjClB,CAA1C;AAAA,MAAQO,OAAR,yBAAQA,OAAR;AAAA,MAAiBF,OAAjB,yBAAiBA,OAAjB;AAAA,qDAA0BG,MAA1B;AAAA,MAA0BA,MAA1B,uCAAmCR,EAAnC;AAEAQ,QAAM,CAACa,mBAAPb,CAA2B,QAA3BA,EAAqCD,OAArCC,EAA8CH,OAA9CG;AACA,SAAOR,EAAE,CAACc,SAAHd,CAAaC,OAAO,CAACe,QAARf,CAAkBgB,CAAlBhB,CAAoBiB,GAAjClB,CAAP;AACF;;AAEA,SAASsB,OAAT,CAAkBtB,EAAlB,EAAmCC,OAAnC,EAAoE;AAClE,MAAIA,OAAO,CAACG,KAARH,KAAkBA,OAAO,CAACsB,QAA9B,EAAwC;AAExCH,WAAS,CAACpB,EAAD,EAAKC,OAAL,CAATmB;AACArB,SAAO,CAACC,EAAD,EAAKC,OAAL,CAAPF;AACF;;AAEA,OAAO,IAAMyB,MAAM,GAAG;AACpBzB,SAAO,EAAPA,OADoB;AAEpBqB,WAAS,EAATA,SAFoB;AAGpBE;AAHoB,CAAf;AAMP,eAAeE,MAAf","names":["mounted","el","binding","modifiers","self","value","options","passive","handler","target","arg","document","querySelector","window","addEventListener","_onScroll","Object","instance","$","uid","undefined","unmounted","removeEventListener","updated","oldValue","Scroll"],"sources":["../../../src/directives/scroll/index.ts"],"sourcesContent":["// Types\nimport type { DirectiveBinding } from 'vue'\n\ninterface ScrollDirectiveBinding extends Omit<DirectiveBinding, 'modifiers'> {\n  value: EventListener | {\n    handler: EventListener\n    options?: AddEventListenerOptions\n  } | EventListenerObject & { options?: AddEventListenerOptions }\n  modifiers?: {\n    self?: boolean\n  }\n}\n\nfunction mounted (el: HTMLElement, binding: ScrollDirectiveBinding) {\n  const { self = false } = binding.modifiers ?? {}\n  const value = binding.value\n  const options = (typeof value === 'object' && value.options) || { passive: true }\n  const handler = typeof value === 'function' || 'handleEvent' in value ? value : value.handler\n\n  const target = self\n    ? el\n    : binding.arg\n      ? document.querySelector(binding.arg)\n      : window\n\n  if (!target) return\n\n  target.addEventListener('scroll', handler, options)\n\n  el._onScroll = Object(el._onScroll)\n  el._onScroll![binding.instance!.$.uid] = {\n    handler,\n    options,\n    // Don't reference self\n    target: self ? undefined : target,\n  }\n}\n\nfunction unmounted (el: HTMLElement, binding: ScrollDirectiveBinding) {\n  if (!el._onScroll?.[binding.instance!.$.uid]) return\n\n  const { handler, options, target = el } = el._onScroll[binding.instance!.$.uid]!\n\n  target.removeEventListener('scroll', handler, options)\n  delete el._onScroll[binding.instance!.$.uid]\n}\n\nfunction updated (el: HTMLElement, binding: ScrollDirectiveBinding) {\n  if (binding.value === binding.oldValue) return\n\n  unmounted(el, binding)\n  mounted(el, binding)\n}\n\nexport const Scroll = {\n  mounted,\n  unmounted,\n  updated,\n}\n\nexport default Scroll\n"]},"metadata":{},"sourceType":"module"}
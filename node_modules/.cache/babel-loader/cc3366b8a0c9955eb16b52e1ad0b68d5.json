{"ast":null,"code":"import { createVNode as _createVNode, resolveDirective as _resolveDirective, withDirectives as _withDirectives } from \"vue\"; // Styles\n\nimport \"./VStepperItem.css\"; // Components\n\nimport { VAvatar } from \"../VAvatar/VAvatar.js\";\nimport { VIcon } from \"../VIcon/VIcon.js\"; // Composables\n\nimport { makeGroupItemProps, useGroupItem } from \"../../composables/group.js\";\nimport { IconValue } from \"../../composables/icons.js\";\nimport { genOverlays } from \"../../composables/variant.js\"; // Directives\n\nimport { Ripple } from \"../../directives/ripple/index.js\"; // Utilities\n\nimport { computed } from 'vue';\nimport { VStepperSymbol } from \"./shared.js\";\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.js\"; // Types\n\nexport const makeStepperItemProps = propsFactory({\n  color: String,\n  title: String,\n  subtitle: String,\n  complete: Boolean,\n  completeIcon: {\n    type: IconValue,\n    default: '$complete'\n  },\n  editable: Boolean,\n  editIcon: {\n    type: IconValue,\n    default: '$edit'\n  },\n  error: Boolean,\n  errorIcon: {\n    type: IconValue,\n    default: '$error'\n  },\n  icon: IconValue,\n  ripple: {\n    type: [Boolean, Object],\n    default: true\n  },\n  rules: {\n    type: Array,\n    default: () => []\n  }\n}, 'StepperItem');\nexport const makeVStepperItemProps = propsFactory({ ...makeStepperItemProps(),\n  ...makeGroupItemProps()\n}, 'VStepperItem');\nexport const VStepperItem = genericComponent()({\n  name: 'VStepperItem',\n  directives: {\n    Ripple\n  },\n  props: makeVStepperItemProps(),\n  emits: {\n    'group:selected': val => true\n  },\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const group = useGroupItem(props, VStepperSymbol, true);\n    const step = computed(() => group?.value.value ?? props.value);\n    const isValid = computed(() => props.rules.every(handler => handler() === true));\n    const isClickable = computed(() => !props.disabled && props.editable);\n    const canEdit = computed(() => !props.disabled && props.editable);\n    const hasError = computed(() => props.error || !isValid.value);\n    const hasCompleted = computed(() => props.complete || props.rules.length > 0 && isValid.value);\n    const icon = computed(() => {\n      if (hasError.value) return props.errorIcon;\n      if (hasCompleted.value) return props.completeIcon;\n      if (group.isSelected.value && props.editable) return props.editIcon;\n      return props.icon;\n    });\n    const slotProps = computed(() => ({\n      canEdit: canEdit.value,\n      hasError: hasError.value,\n      hasCompleted: hasCompleted.value,\n      title: props.title,\n      subtitle: props.subtitle,\n      step: step.value,\n      value: props.value\n    }));\n    useRender(() => {\n      const hasColor = (!group || group.isSelected.value || hasCompleted.value || canEdit.value) && !hasError.value && !props.disabled;\n      const hasTitle = !!(props.title != null || slots.title);\n      const hasSubtitle = !!(props.subtitle != null || slots.subtitle);\n\n      function onClick() {\n        group?.toggle();\n      }\n\n      return _withDirectives(_createVNode(\"button\", {\n        \"class\": ['v-stepper-item', {\n          'v-stepper-item--complete': hasCompleted.value,\n          'v-stepper-item--disabled': props.disabled,\n          'v-stepper-item--error': hasError.value\n        }, group?.selectedClass.value],\n        \"disabled\": !props.editable,\n        \"type\": \"button\",\n        \"onClick\": onClick\n      }, [isClickable.value && genOverlays(true, 'v-stepper-item'), _createVNode(VAvatar, {\n        \"key\": \"stepper-avatar\",\n        \"class\": \"v-stepper-item__avatar\",\n        \"color\": hasColor ? props.color : undefined,\n        \"size\": 24\n      }, {\n        default: () => [slots.icon?.(slotProps.value) ?? (icon.value ? _createVNode(VIcon, {\n          \"icon\": icon.value\n        }, null) : step.value)]\n      }), _createVNode(\"div\", {\n        \"class\": \"v-stepper-item__content\"\n      }, [hasTitle && _createVNode(\"div\", {\n        \"key\": \"title\",\n        \"class\": \"v-stepper-item__title\"\n      }, [slots.title?.(slotProps.value) ?? props.title]), hasSubtitle && _createVNode(\"div\", {\n        \"key\": \"subtitle\",\n        \"class\": \"v-stepper-item__subtitle\"\n      }, [slots.subtitle?.(slotProps.value) ?? props.subtitle]), slots.default?.(slotProps.value)])]), [[_resolveDirective(\"ripple\"), props.ripple && props.editable, null]]);\n    });\n    return {};\n  }\n\n});","map":{"version":3,"mappings":"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","names":["VAvatar","VIcon","makeGroupItemProps","useGroupItem","IconValue","genOverlays","Ripple","computed","VStepperSymbol","genericComponent","propsFactory","useRender","makeStepperItemProps","color","String","title","subtitle","complete","Boolean","completeIcon","type","default","editable","editIcon","error","errorIcon","icon","ripple","Object","rules","Array","makeVStepperItemProps","VStepperItem","name","directives","props","emits","val","setup","_ref","slots","group","step","value","isValid","every","handler","isClickable","disabled","canEdit","hasError","hasCompleted","length","isSelected","slotProps","hasColor","hasTitle","hasSubtitle","onClick","toggle","selectedClass","_createVNode","undefined"],"sources":["../../../src/components/VStepper/VStepperItem.tsx"],"sourcesContent":["// Styles\nimport './VStepperItem.sass'\n\n// Components\nimport { VAvatar } from '@/components/VAvatar/VAvatar'\nimport { VIcon } from '@/components/VIcon/VIcon'\n\n// Composables\nimport { makeGroupItemProps, useGroupItem } from '@/composables/group'\nimport { IconValue } from '@/composables/icons'\nimport { genOverlays } from '@/composables/variant'\n\n// Directives\nimport { Ripple } from '@/directives/ripple'\n\n// Utilities\nimport { computed } from 'vue'\nimport { VStepperSymbol } from './shared'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { RippleDirectiveBinding } from '@/directives/ripple'\n\nexport type StepperItem = string | Record<string, any>\n\nexport type StepperItemSlot<T = any> = {\n  canEdit: boolean\n  hasError: boolean\n  hasCompleted: boolean\n  title?: string | number\n  subtitle?: string | number\n  step: T\n}\n\nexport type VStepperItemSlots<T = any> = {\n  default: StepperItemSlot<T>\n  icon: StepperItemSlot<T>\n  title: StepperItemSlot<T>\n  subtitle: StepperItemSlot<T>\n}\n\nexport type ValidationRule = () => string | boolean\n\nexport const makeStepperItemProps = propsFactory({\n  color: String,\n  title: String,\n  subtitle: String,\n  complete: Boolean,\n  completeIcon: {\n    type: IconValue,\n    default: '$complete',\n  },\n  editable: Boolean,\n  editIcon: {\n    type: IconValue,\n    default: '$edit',\n  },\n  error: Boolean,\n  errorIcon: {\n    type: IconValue,\n    default: '$error',\n  },\n  icon: IconValue,\n  ripple: {\n    type: [Boolean, Object] as PropType<RippleDirectiveBinding['value']>,\n    default: true,\n  },\n  rules: {\n    type: Array as PropType<readonly ValidationRule[]>,\n    default: () => ([]),\n  },\n}, 'StepperItem')\n\nexport const makeVStepperItemProps = propsFactory({\n  ...makeStepperItemProps(),\n  ...makeGroupItemProps(),\n}, 'VStepperItem')\n\nexport const VStepperItem = genericComponent<VStepperItemSlots>()({\n  name: 'VStepperItem',\n\n  directives: { Ripple },\n\n  props: makeVStepperItemProps(),\n\n  emits: {\n    'group:selected': (val: { value: boolean }) => true,\n  },\n\n  setup (props, { slots }) {\n    const group = useGroupItem(props, VStepperSymbol, true)\n    const step = computed(() => group?.value.value ?? props.value)\n    const isValid = computed(() => props.rules.every(handler => handler() === true))\n    const isClickable = computed(() => !props.disabled && props.editable)\n    const canEdit = computed(() => !props.disabled && props.editable)\n    const hasError = computed(() => props.error || !isValid.value)\n    const hasCompleted = computed(() => props.complete || (props.rules.length > 0 && isValid.value))\n    const icon = computed(() => {\n      if (hasError.value) return props.errorIcon\n      if (hasCompleted.value) return props.completeIcon\n      if (group.isSelected.value && props.editable) return props.editIcon\n\n      return props.icon\n    })\n    const slotProps = computed(() => ({\n      canEdit: canEdit.value,\n      hasError: hasError.value,\n      hasCompleted: hasCompleted.value,\n      title: props.title,\n      subtitle: props.subtitle,\n      step: step.value,\n      value: props.value,\n    }))\n\n    useRender(() => {\n      const hasColor = (\n        !group ||\n        group.isSelected.value ||\n        hasCompleted.value ||\n        canEdit.value\n      ) && (\n        !hasError.value &&\n        !props.disabled\n      )\n      const hasTitle = !!(props.title != null || slots.title)\n      const hasSubtitle = !!(props.subtitle != null || slots.subtitle)\n\n      function onClick () {\n        group?.toggle()\n      }\n\n      return (\n        <button\n          class={[\n            'v-stepper-item',\n            {\n              'v-stepper-item--complete': hasCompleted.value,\n              'v-stepper-item--disabled': props.disabled,\n              'v-stepper-item--error': hasError.value,\n            },\n            group?.selectedClass.value,\n          ]}\n          disabled={ !props.editable }\n          type=\"button\"\n          v-ripple={[\n            props.ripple && props.editable,\n            null,\n            null,\n          ]}\n          onClick={ onClick }\n        >\n          { isClickable.value && genOverlays(true, 'v-stepper-item') }\n\n          <VAvatar\n            key=\"stepper-avatar\"\n            class=\"v-stepper-item__avatar\"\n            color={ hasColor ? props.color : undefined }\n            size={ 24 }\n          >\n            { slots.icon?.(slotProps.value) ?? (\n              icon.value ? (\n                <VIcon icon={ icon.value }></VIcon>\n              ) : step.value\n            )}\n          </VAvatar>\n\n          <div class=\"v-stepper-item__content\">\n            { hasTitle && (\n              <div\n                key=\"title\"\n                class=\"v-stepper-item__title\"\n              >\n                { slots.title?.(slotProps.value) ?? props.title }\n              </div>\n            )}\n\n            { hasSubtitle && (\n              <div\n                key=\"subtitle\"\n                class=\"v-stepper-item__subtitle\"\n              >\n                { slots.subtitle?.(slotProps.value) ?? props.subtitle }\n              </div>\n            )}\n\n            { slots.default?.(slotProps.value) }\n          </div>\n        </button>\n      )\n    })\n    return {}\n  },\n})\n\nexport type VStepperItem = InstanceType<typeof VStepperItem>\n"]},"metadata":{},"sourceType":"module"}
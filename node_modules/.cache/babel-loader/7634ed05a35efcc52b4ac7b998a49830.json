{"ast":null,"code":"import _objectSpread from \"/Users/antoniotorres/Documents/tony/tonyweb/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { createVNode as _createVNode } from \"vue\"; // Styles\n\nimport \"./VApp.css\"; // Composables\n\nimport { makeComponentProps } from \"../../composables/component.js\";\nimport { createLayout, makeLayoutProps } from \"../../composables/layout.js\";\nimport { useRtl } from \"../../composables/locale.js\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.js\"; // Utilities\n\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.js\";\nexport var makeVAppProps = propsFactory(_objectSpread(_objectSpread(_objectSpread({}, makeComponentProps()), makeLayoutProps({\n  fullHeight: true\n})), makeThemeProps()), 'VApp');\nexport var VApp = genericComponent()({\n  name: 'VApp',\n  props: makeVAppProps(),\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n    var theme = provideTheme(props);\n\n    var _createLayout = createLayout(props),\n        layoutClasses = _createLayout.layoutClasses,\n        getLayoutItem = _createLayout.getLayoutItem,\n        items = _createLayout.items,\n        layoutRef = _createLayout.layoutRef;\n\n    var _useRtl = useRtl(),\n        rtlClasses = _useRtl.rtlClasses;\n\n    useRender(function () {\n      var _slots$default;\n\n      return _createVNode(\"div\", {\n        \"ref\": layoutRef,\n        \"class\": ['v-application', theme.themeClasses.value, layoutClasses.value, rtlClasses.value, props.class],\n        \"style\": [props.style]\n      }, [_createVNode(\"div\", {\n        \"class\": \"v-application__wrap\"\n      }, [(_slots$default = slots.default) === null || _slots$default === void 0 ? void 0 : _slots$default.call(slots)])]);\n    });\n    return {\n      getLayoutItem: getLayoutItem,\n      items: items,\n      theme: theme\n    };\n  }\n});","map":{"version":3,"mappings":";mDAAA;;AACA,oB,CAEA;;AAAA,SACSA,kBADT,QAC2B,gCAD3B;AAC2B,SAClBC,YADkB,EACJC,eADI,QACW,6BADX;AACW,SAC7BC,MAD6B,QACvB,6BADuB;AACvB,SACNC,cADM,EACUC,YADV,QACsB,4BADtB,C,CAGf;;AAAA,SACSC,gBADT,EAC2BC,YAD3B,EACyCC,SADzC,QACkD,qBADlD;AAGA,OAAO,IAAMC,aAAa,GAAGF,YAAY,+CACpCP,kBAAkB,EADkB,GAEpCE,eAAe,CAAC;AAAEQ,YAAU,EAAE;AAAd,CAAD,CAFqB,GAGpCN,cAAc,EAHsB,GAItC,MAJsC,CAAlC;AAMP,OAAO,IAAMO,IAAI,GAAGL,gBAAgB,GAAG;AACrCM,MAAI,EAAE,MAD+B;AAGrCC,OAAK,EAAEJ,aAAa,EAHiB;AAKrCK,OALqC,iBAK9BD,KAL8B,EAKzBE,IALyB,EAKZ;AAAA,QAATC,KAAS,GAAFD,IAAE,CAATC,KAAS;AACvB,QAAMC,KAAK,GAAGZ,YAAY,CAACQ,KAAD,CAA1B;;AACA,wBAA2DZ,YAAY,CAACY,KAAD,CAAvE;AAAA,QAAQK,aAAR,iBAAQA,aAAR;AAAA,QAAuBC,aAAvB,iBAAuBA,aAAvB;AAAA,QAAsCC,KAAtC,iBAAsCA,KAAtC;AAAA,QAA6CC,SAA7C,iBAA6CA,SAA7C;;AACA,kBAAuBlB,MAAM,EAA7B;AAAA,QAAQmB,UAAR,WAAQA,UAAR;;AAEAd,aAAS,CAAC;AAAA;;AAAA;AAAA,eAEAa,SAFA;AAES,iBACR,CACL,eADK,EAELJ,KAAK,CAACM,YAANN,CAAmBO,KAFd,EAGLN,aAAa,CAACM,KAHT,EAILF,UAAU,CAACE,KAJN,EAKLX,KAAK,CAACY,KALD,CAHD;AASL,iBACM,CACLZ,KAAK,CAACa,KADD;AAVD,SAYL;AAAA;AAAA,4BAGGV,KAAK,CAACW,OAHT,mDAGGX,yBAAK,CAHR,GAZK;AAAA,KAAD,CAATR;AAoBA,WAAO;AACLW,mBAAa,EAAbA,aADK;AAELC,WAAK,EAALA,KAFK;AAGLH;AAHK,KAAP;AAKF;AAnCqC,CAAH,CAA7B","names":["makeComponentProps","createLayout","makeLayoutProps","useRtl","makeThemeProps","provideTheme","genericComponent","propsFactory","useRender","makeVAppProps","fullHeight","VApp","name","props","setup","_ref","slots","theme","layoutClasses","getLayoutItem","items","layoutRef","rtlClasses","themeClasses","value","class","style","default"],"sources":["../../../src/components/VApp/VApp.tsx"],"sourcesContent":["// Styles\nimport './VApp.sass'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { createLayout, makeLayoutProps } from '@/composables/layout'\nimport { useRtl } from '@/composables/locale'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\n\n// Utilities\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVAppProps = propsFactory({\n  ...makeComponentProps(),\n  ...makeLayoutProps({ fullHeight: true }),\n  ...makeThemeProps(),\n}, 'VApp')\n\nexport const VApp = genericComponent()({\n  name: 'VApp',\n\n  props: makeVAppProps(),\n\n  setup (props, { slots }) {\n    const theme = provideTheme(props)\n    const { layoutClasses, getLayoutItem, items, layoutRef } = createLayout(props)\n    const { rtlClasses } = useRtl()\n\n    useRender(() => (\n      <div\n        ref={ layoutRef }\n        class={[\n          'v-application',\n          theme.themeClasses.value,\n          layoutClasses.value,\n          rtlClasses.value,\n          props.class,\n        ]}\n        style={[\n          props.style,\n        ]}\n      >\n        <div class=\"v-application__wrap\">\n          { slots.default?.() }\n        </div>\n      </div>\n    ))\n\n    return {\n      getLayoutItem,\n      items,\n      theme,\n    }\n  },\n})\n\nexport type VApp = InstanceType<typeof VApp>\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"// Utilities\nimport { nextTick, watch } from 'vue'; // Types\n\nexport function useSelectLink(link, select) {\n  watch(() => link.isActive?.value, isActive => {\n    if (link.isLink.value && isActive && select) {\n      nextTick(() => {\n        select(true);\n      });\n    }\n  }, {\n    immediate: true\n  });\n}","map":{"version":3,"mappings":"AAAA;AACA,SAASA,QAAT,EAAmBC,KAAnB,QAAgC,KAAhC,C,CAEA;;AAGA,OAAO,SAASC,aAAT,CAAwBC,IAAxB,EAAuCC,MAAvC,EAAqF;AAC1FH,OAAK,CAAC,MAAME,IAAI,CAACE,QAALF,EAAeG,KAAtB,EAA6BD,QAAQ,IAAI;AAC5C,QAAIF,IAAI,CAACI,MAALJ,CAAYG,KAAZH,IAAqBE,QAArBF,IAAiCC,MAArC,EAA6C;AAC3CJ,cAAQ,CAAC,MAAM;AACbI,cAAM,CAAC,IAAD,CAANA;AACD,OAFO,CAARJ;AAGF;AACD,GANI,EAMF;AACDQ,aAAS,EAAE;AADV,GANE,CAALP;AASF","names":["nextTick","watch","useSelectLink","link","select","isActive","value","isLink","immediate"],"sources":["../../src/composables/selectLink.ts"],"sourcesContent":["// Utilities\nimport { nextTick, watch } from 'vue'\n\n// Types\nimport type { UseLink } from './router'\n\nexport function useSelectLink (link: UseLink, select?: (value: boolean, e?: Event) => void) {\n  watch(() => link.isActive?.value, isActive => {\n    if (link.isLink.value && isActive && select) {\n      nextTick(() => {\n        select(true)\n      })\n    }\n  }, {\n    immediate: true,\n  })\n}\n"]},"metadata":{},"sourceType":"module"}
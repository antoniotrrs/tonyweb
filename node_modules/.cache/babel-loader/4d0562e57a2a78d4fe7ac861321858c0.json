{"ast":null,"code":"// Composables\nimport { VItemGroupSymbol } from \"./VItemGroup.js\";\nimport { makeGroupItemProps, useGroupItem } from \"../../composables/group.js\"; // Utilities\n\nimport { genericComponent } from \"../../util/index.js\";\nexport const VItem = genericComponent()({\n  name: 'VItem',\n  props: makeGroupItemProps(),\n  emits: {\n    'group:selected': val => true\n  },\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      isSelected,\n      select,\n      toggle,\n      selectedClass,\n      value,\n      disabled\n    } = useGroupItem(props, VItemGroupSymbol);\n    return () => slots.default?.({\n      isSelected: isSelected.value,\n      selectedClass: selectedClass.value,\n      select,\n      toggle,\n      value: value.value,\n      disabled: disabled.value\n    });\n  }\n\n});","map":{"version":3,"mappings":"AAAA;AAAA,SACSA,gBADT,QACyB,iBADzB;AACyB,SAChBC,kBADgB,EACIC,YADJ,QACgB,4BADhB,C,CAGzB;;AAAA,SACSC,gBADT,QACyB,qBADzB;AAcA,OAAO,MAAMC,KAAK,GAAGD,gBAAgB,GAAe;AAClDE,MAAI,EAAE,OAD4C;AAGlDC,OAAK,EAAEL,kBAAkB,EAHyB;AAKlDM,OAAK,EAAE;AACL,sBAAmBC,GAAuB,IAAK;AAD1C,GAL2C;;AASlDC,OAAKA,CAAEH,KAAFG,EAAOC,IAAPD,EAAoB;AAAA,QAAX;AAAEE;AAAF,QAASD,IAAE;AACvB,UAAM;AAAEE,gBAAF;AAAcC,YAAd;AAAsBC,YAAtB;AAA8BC,mBAA9B;AAA6CC,WAA7C;AAAoDC;AAApD,QAAiEf,YAAY,CAACI,KAAD,EAAQN,gBAAR,CAAnF;AACA,WAAO,MAAMW,KAAK,CAACO,OAANP,GAAgB;AAC3BC,gBAAU,EAAEA,UAAU,CAACI,KADI;AAE3BD,mBAAa,EAAEA,aAAa,CAACC,KAFF;AAG3BH,YAH2B;AAI3BC,YAJ2B;AAK3BE,WAAK,EAAEA,KAAK,CAACA,KALc;AAM3BC,cAAQ,EAAEA,QAAQ,CAACD;AANQ,KAAhBL,CAAb;AAQF;;AAnBkD,CAAf,CAA9B","names":["VItemGroupSymbol","makeGroupItemProps","useGroupItem","genericComponent","VItem","name","props","emits","val","setup","_ref","slots","isSelected","select","toggle","selectedClass","value","disabled","default"],"sources":["../../../src/components/VItemGroup/VItem.tsx"],"sourcesContent":["// Composables\nimport { VItemGroupSymbol } from './VItemGroup'\nimport { makeGroupItemProps, useGroupItem } from '@/composables/group'\n\n// Utilities\nimport { genericComponent } from '@/util'\n\ntype VItemSlots = {\n  default: {\n    isSelected: boolean | undefined\n    selectedClass: boolean | (string | undefined)[] | undefined\n    select: ((value: boolean) => void) | undefined\n    toggle: (() => void) | undefined\n    value: unknown\n    disabled: boolean | undefined\n  }\n}\n\nexport const VItem = genericComponent<VItemSlots>()({\n  name: 'VItem',\n\n  props: makeGroupItemProps(),\n\n  emits: {\n    'group:selected': (val: { value: boolean }) => true,\n  },\n\n  setup (props, { slots }) {\n    const { isSelected, select, toggle, selectedClass, value, disabled } = useGroupItem(props, VItemGroupSymbol)\n    return () => slots.default?.({\n      isSelected: isSelected.value,\n      selectedClass: selectedClass.value,\n      select,\n      toggle,\n      value: value.value,\n      disabled: disabled.value,\n    })\n  },\n})\n\nexport type VItem = InstanceType<typeof VItem>\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { createVNode as _createVNode, vShow as _vShow, withDirectives as _withDirectives, Fragment as _Fragment, mergeProps as _mergeProps, resolveDirective as _resolveDirective } from \"vue\";\n/* eslint-disable complexity */\n// Styles\n\nimport \"./VChip.css\"; // Components\n\nimport { VExpandXTransition } from \"../transitions/index.js\";\nimport { VAvatar } from \"../VAvatar/index.js\";\nimport { VChipGroupSymbol } from \"../VChipGroup/VChipGroup.js\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.js\";\nimport { VIcon } from \"../VIcon/index.js\"; // Composables\n\nimport { makeBorderProps, useBorder } from \"../../composables/border.js\";\nimport { makeComponentProps } from \"../../composables/component.js\";\nimport { makeDensityProps, useDensity } from \"../../composables/density.js\";\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.js\";\nimport { makeGroupItemProps, useGroupItem } from \"../../composables/group.js\";\nimport { IconValue } from \"../../composables/icons.js\";\nimport { useLocale } from \"../../composables/locale.js\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.js\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.js\";\nimport { makeRouterProps, useLink } from \"../../composables/router.js\";\nimport { makeSizeProps, useSize } from \"../../composables/size.js\";\nimport { makeTagProps } from \"../../composables/tag.js\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.js\";\nimport { genOverlays, makeVariantProps, useVariant } from \"../../composables/variant.js\"; // Directives\n\nimport { Ripple } from \"../../directives/ripple/index.js\"; // Utilities\n\nimport { computed, toDisplayString } from 'vue';\nimport { EventProp, genericComponent, propsFactory } from \"../../util/index.js\"; // Types\n\nexport const makeVChipProps = propsFactory({\n  activeClass: String,\n  appendAvatar: String,\n  appendIcon: IconValue,\n  baseColor: String,\n  closable: Boolean,\n  closeIcon: {\n    type: IconValue,\n    default: '$delete'\n  },\n  closeLabel: {\n    type: String,\n    default: '$vuetify.close'\n  },\n  draggable: Boolean,\n  filter: Boolean,\n  filterIcon: {\n    type: IconValue,\n    default: '$complete'\n  },\n  label: Boolean,\n  link: {\n    type: Boolean,\n    default: undefined\n  },\n  pill: Boolean,\n  prependAvatar: String,\n  prependIcon: IconValue,\n  ripple: {\n    type: [Boolean, Object],\n    default: true\n  },\n  text: {\n    type: [String, Number, Boolean],\n    default: undefined\n  },\n  modelValue: {\n    type: Boolean,\n    default: true\n  },\n  onClick: EventProp(),\n  onClickOnce: EventProp(),\n  ...makeBorderProps(),\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n  ...makeElevationProps(),\n  ...makeGroupItemProps(),\n  ...makeRoundedProps(),\n  ...makeRouterProps(),\n  ...makeSizeProps(),\n  ...makeTagProps({\n    tag: 'span'\n  }),\n  ...makeThemeProps(),\n  ...makeVariantProps({\n    variant: 'tonal'\n  })\n}, 'VChip');\nexport const VChip = genericComponent()({\n  name: 'VChip',\n  directives: {\n    Ripple\n  },\n  props: makeVChipProps(),\n  emits: {\n    'click:close': e => true,\n    'update:modelValue': value => true,\n    'group:selected': val => true,\n    click: e => true\n  },\n\n  setup(props, _ref) {\n    let {\n      attrs,\n      emit,\n      slots\n    } = _ref;\n    const {\n      t\n    } = useLocale();\n    const {\n      borderClasses\n    } = useBorder(props);\n    const {\n      densityClasses\n    } = useDensity(props);\n    const {\n      elevationClasses\n    } = useElevation(props);\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const {\n      sizeClasses\n    } = useSize(props);\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const isActive = useProxiedModel(props, 'modelValue');\n    const group = useGroupItem(props, VChipGroupSymbol, false);\n    const link = useLink(props, attrs);\n    const isLink = computed(() => props.link !== false && link.isLink.value);\n    const isClickable = computed(() => !props.disabled && props.link !== false && (!!group || props.link || link.isClickable.value));\n    const closeProps = computed(() => ({\n      'aria-label': t(props.closeLabel),\n\n      onClick(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        isActive.value = false;\n        emit('click:close', e);\n      }\n\n    }));\n    const variantProps = computed(() => {\n      const showColor = !group || group.isSelected.value;\n      return {\n        color: showColor ? props.color ?? props.baseColor : props.baseColor,\n        variant: props.variant\n      };\n    });\n    const {\n      colorClasses,\n      colorStyles,\n      variantClasses\n    } = useVariant(variantProps);\n\n    function onClick(e) {\n      emit('click', e);\n      if (!isClickable.value) return;\n      link.navigate?.(e);\n      group?.toggle();\n    }\n\n    function onKeyDown(e) {\n      if (e.key === 'Enter' || e.key === ' ') {\n        e.preventDefault();\n        onClick(e);\n      }\n    }\n\n    return () => {\n      const Tag = link.isLink.value ? 'a' : props.tag;\n      const hasAppendMedia = !!(props.appendIcon || props.appendAvatar);\n      const hasAppend = !!(hasAppendMedia || slots.append);\n      const hasClose = !!(slots.close || props.closable);\n      const hasFilter = !!(slots.filter || props.filter) && group;\n      const hasPrependMedia = !!(props.prependIcon || props.prependAvatar);\n      const hasPrepend = !!(hasPrependMedia || slots.prepend);\n      return isActive.value && _withDirectives(_createVNode(Tag, _mergeProps({\n        \"class\": ['v-chip', {\n          'v-chip--disabled': props.disabled,\n          'v-chip--label': props.label,\n          'v-chip--link': isClickable.value,\n          'v-chip--filter': hasFilter,\n          'v-chip--pill': props.pill,\n          [`${props.activeClass}`]: props.activeClass && link.isActive?.value\n        }, themeClasses.value, borderClasses.value, colorClasses.value, densityClasses.value, elevationClasses.value, roundedClasses.value, sizeClasses.value, variantClasses.value, group?.selectedClass.value, props.class],\n        \"style\": [colorStyles.value, props.style],\n        \"disabled\": props.disabled || undefined,\n        \"draggable\": props.draggable,\n        \"tabindex\": isClickable.value ? 0 : undefined,\n        \"onClick\": onClick,\n        \"onKeydown\": isClickable.value && !isLink.value && onKeyDown\n      }, link.linkProps), {\n        default: () => [genOverlays(isClickable.value, 'v-chip'), hasFilter && _createVNode(VExpandXTransition, {\n          \"key\": \"filter\"\n        }, {\n          default: () => [_withDirectives(_createVNode(\"div\", {\n            \"class\": \"v-chip__filter\"\n          }, [!slots.filter ? _createVNode(VIcon, {\n            \"key\": \"filter-icon\",\n            \"icon\": props.filterIcon\n          }, null) : _createVNode(VDefaultsProvider, {\n            \"key\": \"filter-defaults\",\n            \"disabled\": !props.filterIcon,\n            \"defaults\": {\n              VIcon: {\n                icon: props.filterIcon\n              }\n            }\n          }, slots.filter)]), [[_vShow, group.isSelected.value]])]\n        }), hasPrepend && _createVNode(\"div\", {\n          \"key\": \"prepend\",\n          \"class\": \"v-chip__prepend\"\n        }, [!slots.prepend ? _createVNode(_Fragment, null, [props.prependIcon && _createVNode(VIcon, {\n          \"key\": \"prepend-icon\",\n          \"icon\": props.prependIcon,\n          \"start\": true\n        }, null), props.prependAvatar && _createVNode(VAvatar, {\n          \"key\": \"prepend-avatar\",\n          \"image\": props.prependAvatar,\n          \"start\": true\n        }, null)]) : _createVNode(VDefaultsProvider, {\n          \"key\": \"prepend-defaults\",\n          \"disabled\": !hasPrependMedia,\n          \"defaults\": {\n            VAvatar: {\n              image: props.prependAvatar,\n              start: true\n            },\n            VIcon: {\n              icon: props.prependIcon,\n              start: true\n            }\n          }\n        }, slots.prepend)]), _createVNode(\"div\", {\n          \"class\": \"v-chip__content\",\n          \"data-no-activator\": \"\"\n        }, [slots.default?.({\n          isSelected: group?.isSelected.value,\n          selectedClass: group?.selectedClass.value,\n          select: group?.select,\n          toggle: group?.toggle,\n          value: group?.value.value,\n          disabled: props.disabled\n        }) ?? toDisplayString(props.text)]), hasAppend && _createVNode(\"div\", {\n          \"key\": \"append\",\n          \"class\": \"v-chip__append\"\n        }, [!slots.append ? _createVNode(_Fragment, null, [props.appendIcon && _createVNode(VIcon, {\n          \"key\": \"append-icon\",\n          \"end\": true,\n          \"icon\": props.appendIcon\n        }, null), props.appendAvatar && _createVNode(VAvatar, {\n          \"key\": \"append-avatar\",\n          \"end\": true,\n          \"image\": props.appendAvatar\n        }, null)]) : _createVNode(VDefaultsProvider, {\n          \"key\": \"append-defaults\",\n          \"disabled\": !hasAppendMedia,\n          \"defaults\": {\n            VAvatar: {\n              end: true,\n              image: props.appendAvatar\n            },\n            VIcon: {\n              end: true,\n              icon: props.appendIcon\n            }\n          }\n        }, slots.append)]), hasClose && _createVNode(\"button\", _mergeProps({\n          \"key\": \"close\",\n          \"class\": \"v-chip__close\",\n          \"type\": \"button\",\n          \"data-testid\": \"close-chip\"\n        }, closeProps.value), [!slots.close ? _createVNode(VIcon, {\n          \"key\": \"close-icon\",\n          \"icon\": props.closeIcon,\n          \"size\": \"x-small\"\n        }, null) : _createVNode(VDefaultsProvider, {\n          \"key\": \"close-defaults\",\n          \"defaults\": {\n            VIcon: {\n              icon: props.closeIcon,\n              size: 'x-small'\n            }\n          }\n        }, slots.close)])]\n      }), [[_resolveDirective(\"ripple\"), isClickable.value && props.ripple, null]]);\n    };\n  }\n\n});","map":{"version":3,"mappings":";AAAA;AACA;;AACA,qB,CAEA;;AAAA,SACSA,kBADT,QAC2B,yBAD3B;AAC2B,SAClBC,OADkB,QACX,qBADW;AACX,SACPC,gBADO,QACS,6BADT;AACS,SAChBC,iBADgB,QACC,+BADD;AACC,SACjBC,KADiB,QACZ,mBADY,C,CAG1B;;AAAA,SACSC,eADT,EAC0BC,SAD1B,QACmC,6BADnC;AACmC,SAC1BC,kBAD0B,QACR,gCADQ;AACR,SAClBC,gBADkB,EACAC,UADA,QACU,8BADV;AACU,SAC5BC,kBAD4B,EACRC,YADQ,QACI,gCADJ;AACI,SAChCC,kBADgC,EACZC,YADY,QACA,4BADA;AACA,SAChCC,SADgC,QACvB,4BADuB;AACvB,SACTC,SADS,QACA,6BADA;AACA,SACTC,eADS,QACM,mCADN;AACM,SACfC,gBADe,EACGC,UADH,QACa,8BADb;AACa,SAC5BC,eAD4B,EACXC,OADW,QACJ,6BADI;AACJ,SACxBC,aADwB,EACTC,OADS,QACF,2BADE;AACF,SACtBC,YADsB,QACV,0BADU;AACV,SACZC,cADY,EACIC,YADJ,QACgB,4BADhB;AACgB,SAC5BC,WAD4B,EACfC,gBADe,EACGC,UADH,QACa,8BADb,C,CAGrC;;AAAA,SACSC,MADT,QACe,kCADf,C,CAGA;;AACA,SAASC,QAAT,EAAmBC,eAAnB,QAA0C,KAA1C;AAA+C,SACtCC,SADsC,EAC3BC,gBAD2B,EACTC,YADS,QACG,qBADH,C,CAG/C;;AAoBA,OAAO,MAAMC,cAAc,GAAGD,YAAY,CAAC;AACzCE,aAAW,EAAEC,MAD4B;AAEzCC,cAAY,EAAED,MAF2B;AAGzCE,YAAU,EAAEzB,SAH6B;AAIzC0B,WAAS,EAAEH,MAJ8B;AAKzCI,UAAQ,EAAEC,OAL+B;AAMzCC,WAAS,EAAE;AACTC,QAAI,EAAE9B,SADG;AAET+B,WAAO,EAAE;AAFA,GAN8B;AAUzCC,YAAU,EAAE;AACVF,QAAI,EAAEP,MADI;AAEVQ,WAAO,EAAE;AAFC,GAV6B;AAczCE,WAAS,EAAEL,OAd8B;AAezCM,QAAM,EAAEN,OAfiC;AAgB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","names":["VExpandXTransition","VAvatar","VChipGroupSymbol","VDefaultsProvider","VIcon","makeBorderProps","useBorder","makeComponentProps","makeDensityProps","useDensity","makeElevationProps","useElevation","makeGroupItemProps","useGroupItem","IconValue","useLocale","useProxiedModel","makeRoundedProps","useRounded","makeRouterProps","useLink","makeSizeProps","useSize","makeTagProps","makeThemeProps","provideTheme","genOverlays","makeVariantProps","useVariant","Ripple","computed","toDisplayString","EventProp","genericComponent","propsFactory","makeVChipProps","activeClass","String","appendAvatar","appendIcon","baseColor","closable","Boolean","closeIcon","type","default","closeLabel","draggable","filter","filterIcon","label","link","undefined","pill","prependAvatar","prependIcon","ripple","Object","text","Number","modelValue","onClick","onClickOnce","tag","variant","VChip","name","directives","props","emits","e","value","val","click","setup","_ref","attrs","emit","slots","t","borderClasses","densityClasses","elevationClasses","roundedClasses","sizeClasses","themeClasses","isActive","group","isLink","isClickable","disabled","closeProps","preventDefault","stopPropagation","variantProps","showColor","isSelected","color","colorClasses","colorStyles","variantClasses","navigate","toggle","onKeyDown","key","Tag","hasAppendMedia","hasAppend","append","hasClose","close","hasFilter","hasPrependMedia","hasPrepend","prepend","_withDirectives","selectedClass","class","style","linkProps","_createVNode","icon","image","start","select","end","size"],"sources":["../../../src/components/VChip/VChip.tsx"],"sourcesContent":["/* eslint-disable complexity */\n// Styles\nimport './VChip.sass'\n\n// Components\nimport { VExpandXTransition } from '@/components/transitions'\nimport { VAvatar } from '@/components/VAvatar'\nimport { VChipGroupSymbol } from '@/components/VChipGroup/VChipGroup'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeGroupItemProps, useGroupItem } from '@/composables/group'\nimport { IconValue } from '@/composables/icons'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeRouterProps, useLink } from '@/composables/router'\nimport { makeSizeProps, useSize } from '@/composables/size'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { genOverlays, makeVariantProps, useVariant } from '@/composables/variant'\n\n// Directives\nimport { Ripple } from '@/directives/ripple'\n\n// Utilities\nimport { computed, toDisplayString } from 'vue'\nimport { EventProp, genericComponent, propsFactory } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { RippleDirectiveBinding } from '@/directives/ripple'\n\nexport type VChipSlots = {\n  default: {\n    isSelected: boolean | undefined\n    selectedClass: boolean | (string | undefined)[] | undefined\n    select: ((value: boolean) => void) | undefined\n    toggle: (() => void) | undefined\n    value: unknown\n    disabled: boolean\n  }\n  label: never\n  prepend: never\n  append: never\n  close: never\n  filter: never\n}\n\nexport const makeVChipProps = propsFactory({\n  activeClass: String,\n  appendAvatar: String,\n  appendIcon: IconValue,\n  baseColor: String,\n  closable: Boolean,\n  closeIcon: {\n    type: IconValue,\n    default: '$delete',\n  },\n  closeLabel: {\n    type: String,\n    default: '$vuetify.close',\n  },\n  draggable: Boolean,\n  filter: Boolean,\n  filterIcon: {\n    type: IconValue,\n    default: '$complete',\n  },\n  label: Boolean,\n  link: {\n    type: Boolean,\n    default: undefined,\n  },\n  pill: Boolean,\n  prependAvatar: String,\n  prependIcon: IconValue,\n  ripple: {\n    type: [Boolean, Object] as PropType<RippleDirectiveBinding['value']>,\n    default: true,\n  },\n  text: {\n    type: [String, Number, Boolean],\n    default: undefined,\n  },\n  modelValue: {\n    type: Boolean,\n    default: true,\n  },\n\n  onClick: EventProp<[MouseEvent]>(),\n  onClickOnce: EventProp<[MouseEvent]>(),\n\n  ...makeBorderProps(),\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n  ...makeElevationProps(),\n  ...makeGroupItemProps(),\n  ...makeRoundedProps(),\n  ...makeRouterProps(),\n  ...makeSizeProps(),\n  ...makeTagProps({ tag: 'span' }),\n  ...makeThemeProps(),\n  ...makeVariantProps({ variant: 'tonal' } as const),\n}, 'VChip')\n\nexport const VChip = genericComponent<VChipSlots>()({\n  name: 'VChip',\n\n  directives: { Ripple },\n\n  props: makeVChipProps(),\n\n  emits: {\n    'click:close': (e: MouseEvent) => true,\n    'update:modelValue': (value: boolean) => true,\n    'group:selected': (val: { value: boolean }) => true,\n    click: (e: MouseEvent | KeyboardEvent) => true,\n  },\n\n  setup (props, { attrs, emit, slots }) {\n    const { t } = useLocale()\n    const { borderClasses } = useBorder(props)\n    const { densityClasses } = useDensity(props)\n    const { elevationClasses } = useElevation(props)\n    const { roundedClasses } = useRounded(props)\n    const { sizeClasses } = useSize(props)\n    const { themeClasses } = provideTheme(props)\n\n    const isActive = useProxiedModel(props, 'modelValue')\n    const group = useGroupItem(props, VChipGroupSymbol, false)\n    const link = useLink(props, attrs)\n    const isLink = computed(() => props.link !== false && link.isLink.value)\n    const isClickable = computed(() =>\n      !props.disabled &&\n      props.link !== false &&\n      (!!group || props.link || link.isClickable.value)\n    )\n    const closeProps = computed(() => ({\n      'aria-label': t(props.closeLabel),\n      onClick (e: MouseEvent) {\n        e.preventDefault()\n        e.stopPropagation()\n\n        isActive.value = false\n\n        emit('click:close', e)\n      },\n    }))\n\n    const variantProps = computed(() => {\n      const showColor = !group || group.isSelected.value\n      return ({\n        color: showColor ? props.color ?? props.baseColor : props.baseColor,\n        variant: props.variant,\n      })\n    })\n    const { colorClasses, colorStyles, variantClasses } = useVariant(variantProps)\n\n    function onClick (e: MouseEvent) {\n      emit('click', e)\n\n      if (!isClickable.value) return\n\n      link.navigate?.(e)\n      group?.toggle()\n    }\n\n    function onKeyDown (e: KeyboardEvent) {\n      if (e.key === 'Enter' || e.key === ' ') {\n        e.preventDefault()\n        onClick(e as any as MouseEvent)\n      }\n    }\n\n    return () => {\n      const Tag = (link.isLink.value) ? 'a' : props.tag\n      const hasAppendMedia = !!(props.appendIcon || props.appendAvatar)\n      const hasAppend = !!(hasAppendMedia || slots.append)\n      const hasClose = !!(slots.close || props.closable)\n      const hasFilter = !!(slots.filter || props.filter) && group\n      const hasPrependMedia = !!(props.prependIcon || props.prependAvatar)\n      const hasPrepend = !!(hasPrependMedia || slots.prepend)\n\n      return isActive.value && (\n        <Tag\n          class={[\n            'v-chip',\n            {\n              'v-chip--disabled': props.disabled,\n              'v-chip--label': props.label,\n              'v-chip--link': isClickable.value,\n              'v-chip--filter': hasFilter,\n              'v-chip--pill': props.pill,\n              [`${props.activeClass}`]: props.activeClass && link.isActive?.value,\n            },\n            themeClasses.value,\n            borderClasses.value,\n            colorClasses.value,\n            densityClasses.value,\n            elevationClasses.value,\n            roundedClasses.value,\n            sizeClasses.value,\n            variantClasses.value,\n            group?.selectedClass.value,\n            props.class,\n          ]}\n          style={[\n            colorStyles.value,\n            props.style,\n          ]}\n          disabled={ props.disabled || undefined }\n          draggable={ props.draggable }\n          tabindex={ isClickable.value ? 0 : undefined }\n          onClick={ onClick }\n          onKeydown={ isClickable.value && !isLink.value && onKeyDown }\n          v-ripple={[isClickable.value && props.ripple, null]}\n          { ...link.linkProps }\n        >\n          { genOverlays(isClickable.value, 'v-chip') }\n\n          { hasFilter && (\n            <VExpandXTransition key=\"filter\">\n              <div\n                class=\"v-chip__filter\"\n                v-show={ group.isSelected.value }\n              >\n                { !slots.filter ? (\n                  <VIcon\n                    key=\"filter-icon\"\n                    icon={ props.filterIcon }\n                  />\n                ) : (\n                  <VDefaultsProvider\n                    key=\"filter-defaults\"\n                    disabled={ !props.filterIcon }\n                    defaults={{\n                      VIcon: { icon: props.filterIcon },\n                    }}\n                    v-slots:default={ slots.filter }\n                  />\n                )}\n              </div>\n            </VExpandXTransition>\n          )}\n\n          { hasPrepend && (\n            <div key=\"prepend\" class=\"v-chip__prepend\">\n              { !slots.prepend ? (\n                <>\n                  { props.prependIcon && (\n                    <VIcon\n                      key=\"prepend-icon\"\n                      icon={ props.prependIcon }\n                      start\n                    />\n                  )}\n\n                  { props.prependAvatar && (\n                    <VAvatar\n                      key=\"prepend-avatar\"\n                      image={ props.prependAvatar }\n                      start\n                    />\n                  )}\n                </>\n              ) : (\n                <VDefaultsProvider\n                  key=\"prepend-defaults\"\n                  disabled={ !hasPrependMedia }\n                  defaults={{\n                    VAvatar: {\n                      image: props.prependAvatar,\n                      start: true,\n                    },\n                    VIcon: {\n                      icon: props.prependIcon,\n                      start: true,\n                    },\n                  }}\n                  v-slots:default={ slots.prepend }\n                />\n              )}\n            </div>\n          )}\n\n          <div class=\"v-chip__content\" data-no-activator=\"\">\n            { slots.default?.({\n              isSelected: group?.isSelected.value,\n              selectedClass: group?.selectedClass.value,\n              select: group?.select,\n              toggle: group?.toggle,\n              value: group?.value.value,\n              disabled: props.disabled,\n            }) ?? toDisplayString(props.text)}\n          </div>\n\n          { hasAppend && (\n            <div key=\"append\" class=\"v-chip__append\">\n              { !slots.append ? (\n                <>\n                  { props.appendIcon && (\n                    <VIcon\n                      key=\"append-icon\"\n                      end\n                      icon={ props.appendIcon }\n                    />\n                  )}\n\n                  { props.appendAvatar && (\n                    <VAvatar\n                      key=\"append-avatar\"\n                      end\n                      image={ props.appendAvatar }\n                    />\n                  )}\n                </>\n              ) : (\n                <VDefaultsProvider\n                  key=\"append-defaults\"\n                  disabled={ !hasAppendMedia }\n                  defaults={{\n                    VAvatar: {\n                      end: true,\n                      image: props.appendAvatar,\n                    },\n                    VIcon: {\n                      end: true,\n                      icon: props.appendIcon,\n                    },\n                  }}\n                  v-slots:default={ slots.append }\n                />\n              )}\n            </div>\n          )}\n\n          { hasClose && (\n            <button\n              key=\"close\"\n              class=\"v-chip__close\"\n              type=\"button\"\n              data-testid=\"close-chip\"\n              { ...closeProps.value }\n            >\n              { !slots.close ? (\n                <VIcon\n                  key=\"close-icon\"\n                  icon={ props.closeIcon }\n                  size=\"x-small\"\n                />\n              ) : (\n                <VDefaultsProvider\n                  key=\"close-defaults\"\n                  defaults={{\n                    VIcon: {\n                      icon: props.closeIcon,\n                      size: 'x-small',\n                    },\n                  }}\n                  v-slots:default={ slots.close }\n                />\n              )}\n            </button>\n          )}\n        </Tag>\n      )\n    }\n  },\n})\n\nexport type VChip = InstanceType<typeof VChip>\n"]},"metadata":{},"sourceType":"module"}
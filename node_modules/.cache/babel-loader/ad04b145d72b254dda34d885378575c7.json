{"ast":null,"code":"import _objectSpread from \"/Users/antoniotorres/Documents/tony/tonyweb/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport { createVNode as _createVNode } from \"vue\"; // Styles\n\nimport \"./VInput.css\"; // Components\n\nimport { useInputIcon } from \"./InputIcon.js\";\nimport { VMessages } from \"../VMessages/VMessages.js\"; // Composables\n\nimport { makeComponentProps } from \"../../composables/component.js\";\nimport { makeDensityProps, useDensity } from \"../../composables/density.js\";\nimport { makeDimensionProps, useDimension } from \"../../composables/dimensions.js\";\nimport { IconValue } from \"../../composables/icons.js\";\nimport { useRtl } from \"../../composables/locale.js\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.js\";\nimport { makeValidationProps, useValidation } from \"../../composables/validation.js\"; // Utilities\n\nimport { computed, useId } from 'vue';\nimport { EventProp, genericComponent, pick, propsFactory, useRender } from \"../../util/index.js\"; // Types\n\nexport var makeVInputProps = propsFactory(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({\n  id: String,\n  appendIcon: IconValue,\n  baseColor: String,\n  centerAffix: {\n    type: Boolean,\n    default: true\n  },\n  color: String,\n  glow: Boolean,\n  iconColor: [Boolean, String],\n  prependIcon: IconValue,\n  hideDetails: [Boolean, String],\n  hideSpinButtons: Boolean,\n  hint: String,\n  persistentHint: Boolean,\n  messages: {\n    type: [Array, String],\n    default: function _default() {\n      return [];\n    }\n  },\n  direction: {\n    type: String,\n    default: 'horizontal',\n    validator: function validator(v) {\n      return ['horizontal', 'vertical'].includes(v);\n    }\n  },\n  'onClick:prepend': EventProp(),\n  'onClick:append': EventProp()\n}, makeComponentProps()), makeDensityProps()), pick(makeDimensionProps(), ['maxWidth', 'minWidth', 'width'])), makeThemeProps()), makeValidationProps()), 'VInput');\nexport var VInput = genericComponent()({\n  name: 'VInput',\n  props: _objectSpread({}, makeVInputProps()),\n  emits: {\n    'update:modelValue': function updateModelValue(value) {\n      return true;\n    }\n  },\n  setup: function setup(props, _ref) {\n    var attrs = _ref.attrs,\n        slots = _ref.slots,\n        emit = _ref.emit;\n\n    var _useDensity = useDensity(props),\n        densityClasses = _useDensity.densityClasses;\n\n    var _useDimension = useDimension(props),\n        dimensionStyles = _useDimension.dimensionStyles;\n\n    var _provideTheme = provideTheme(props),\n        themeClasses = _provideTheme.themeClasses;\n\n    var _useRtl = useRtl(),\n        rtlClasses = _useRtl.rtlClasses;\n\n    var _useInputIcon = useInputIcon(props),\n        InputIcon = _useInputIcon.InputIcon;\n\n    var uid = useId();\n    var id = computed(function () {\n      return props.id || \"input-\".concat(uid);\n    });\n    var messagesId = computed(function () {\n      return \"\".concat(id.value, \"-messages\");\n    });\n\n    var _useValidation = useValidation(props, 'v-input', id),\n        errorMessages = _useValidation.errorMessages,\n        isDirty = _useValidation.isDirty,\n        isDisabled = _useValidation.isDisabled,\n        isReadonly = _useValidation.isReadonly,\n        isPristine = _useValidation.isPristine,\n        isValid = _useValidation.isValid,\n        isValidating = _useValidation.isValidating,\n        reset = _useValidation.reset,\n        resetValidation = _useValidation.resetValidation,\n        validate = _useValidation.validate,\n        validationClasses = _useValidation.validationClasses;\n\n    var slotProps = computed(function () {\n      return {\n        id: id,\n        messagesId: messagesId,\n        isDirty: isDirty,\n        isDisabled: isDisabled,\n        isReadonly: isReadonly,\n        isPristine: isPristine,\n        isValid: isValid,\n        isValidating: isValidating,\n        reset: reset,\n        resetValidation: resetValidation,\n        validate: validate\n      };\n    });\n    var color = computed(function () {\n      return props.error || props.disabled ? undefined : props.focused ? props.color : props.baseColor;\n    });\n    var iconColor = computed(function () {\n      if (!props.iconColor) return undefined;\n      return props.iconColor === true ? color.value : props.iconColor;\n    });\n    var messages = computed(function () {\n      var _props$errorMessages;\n\n      if ((_props$errorMessages = props.errorMessages) !== null && _props$errorMessages !== void 0 && _props$errorMessages.length || !isPristine.value && errorMessages.value.length) {\n        return errorMessages.value;\n      } else if (props.hint && (props.persistentHint || props.focused)) {\n        return props.hint;\n      } else {\n        return props.messages;\n      }\n    });\n    useRender(function () {\n      var _slots$prepend, _slots$default, _slots$append, _slots$details;\n\n      var hasPrepend = !!(slots.prepend || props.prependIcon);\n      var hasAppend = !!(slots.append || props.appendIcon);\n      var hasMessages = messages.value.length > 0;\n      var hasDetails = !props.hideDetails || props.hideDetails === 'auto' && (hasMessages || !!slots.details);\n      return _createVNode(\"div\", {\n        \"class\": ['v-input', \"v-input--\".concat(props.direction), {\n          'v-input--center-affix': props.centerAffix,\n          'v-input--focused': props.focused,\n          'v-input--glow': props.glow,\n          'v-input--hide-spin-buttons': props.hideSpinButtons\n        }, densityClasses.value, themeClasses.value, rtlClasses.value, validationClasses.value, props.class],\n        \"style\": [dimensionStyles.value, props.style]\n      }, [hasPrepend && _createVNode(\"div\", {\n        \"key\": \"prepend\",\n        \"class\": \"v-input__prepend\"\n      }, [(_slots$prepend = slots.prepend) === null || _slots$prepend === void 0 ? void 0 : _slots$prepend.call(slots, slotProps.value), props.prependIcon && _createVNode(InputIcon, {\n        \"key\": \"prepend-icon\",\n        \"name\": \"prepend\",\n        \"color\": iconColor.value\n      }, null)]), slots.default && _createVNode(\"div\", {\n        \"class\": \"v-input__control\"\n      }, [(_slots$default = slots.default) === null || _slots$default === void 0 ? void 0 : _slots$default.call(slots, slotProps.value)]), hasAppend && _createVNode(\"div\", {\n        \"key\": \"append\",\n        \"class\": \"v-input__append\"\n      }, [props.appendIcon && _createVNode(InputIcon, {\n        \"key\": \"append-icon\",\n        \"name\": \"append\",\n        \"color\": iconColor.value\n      }, null), (_slots$append = slots.append) === null || _slots$append === void 0 ? void 0 : _slots$append.call(slots, slotProps.value)]), hasDetails && _createVNode(\"div\", {\n        \"id\": messagesId.value,\n        \"class\": \"v-input__details\",\n        \"role\": \"alert\",\n        \"aria-live\": \"polite\"\n      }, [_createVNode(VMessages, {\n        \"active\": hasMessages,\n        \"messages\": messages.value\n      }, {\n        message: slots.message\n      }), (_slots$details = slots.details) === null || _slots$details === void 0 ? void 0 : _slots$details.call(slots, slotProps.value)])]);\n    });\n    return {\n      reset: reset,\n      resetValidation: resetValidation,\n      validate: validate,\n      isValid: isValid,\n      errorMessages: errorMessages\n    };\n  }\n});","map":{"version":3,"mappings":"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","names":["useInputIcon","VMessages","makeComponentProps","makeDensityProps","useDensity","makeDimensionProps","useDimension","IconValue","useRtl","makeThemeProps","provideTheme","makeValidationProps","useValidation","computed","useId","EventProp","genericComponent","pick","propsFactory","useRender","makeVInputProps","id","String","appendIcon","baseColor","centerAffix","type","Boolean","default","color","glow","iconColor","prependIcon","hideDetails","hideSpinButtons","hint","persistentHint","messages","Array","direction","validator","v","includes","VInput","name","props","emits","value","setup","_ref","attrs","slots","emit","densityClasses","dimensionStyles","themeClasses","rtlClasses","InputIcon","uid","messagesId","errorMessages","isDirty","isDisabled","isReadonly","isPristine","isValid","isValidating","reset","resetValidation","validate","validationClasses","slotProps","error","disabled","undefined","focused","length","hasPrepend","prepend","hasAppend","append","hasMessages","hasDetails","details","class","style","_createVNode","message"],"sources":["../../../src/components/VInput/VInput.tsx"],"sourcesContent":["// Styles\nimport './VInput.sass'\n\n// Components\nimport { useInputIcon } from '@/components/VInput/InputIcon'\nimport { VMessages } from '@/components/VMessages/VMessages'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { IconValue } from '@/composables/icons'\nimport { useRtl } from '@/composables/locale'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { makeValidationProps, useValidation } from '@/composables/validation'\n\n// Utilities\nimport { computed, useId } from 'vue'\nimport { EventProp, genericComponent, pick, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { ComputedRef, PropType, Ref } from 'vue'\nimport type { VMessageSlot } from '@/components/VMessages/VMessages'\nimport type { GenericProps } from '@/util'\n\nexport interface VInputSlot {\n  id: ComputedRef<string>\n  messagesId: ComputedRef<string>\n  isDirty: ComputedRef<boolean>\n  isDisabled: ComputedRef<boolean>\n  isReadonly: ComputedRef<boolean>\n  isPristine: Ref<boolean>\n  isValid: ComputedRef<boolean | null>\n  isValidating: Ref<boolean>\n  reset: () => void\n  resetValidation: () => void\n  validate: () => void\n}\n\nexport const makeVInputProps = propsFactory({\n  id: String,\n  appendIcon: IconValue,\n  baseColor: String,\n  centerAffix: {\n    type: Boolean,\n    default: true,\n  },\n  color: String,\n  glow: Boolean,\n  iconColor: [Boolean, String],\n  prependIcon: IconValue,\n  hideDetails: [Boolean, String] as PropType<boolean | 'auto'>,\n  hideSpinButtons: Boolean,\n  hint: String,\n  persistentHint: Boolean,\n  messages: {\n    type: [Array, String] as PropType<string | readonly string[]>,\n    default: () => ([]),\n  },\n  direction: {\n    type: String as PropType<'horizontal' | 'vertical'>,\n    default: 'horizontal',\n    validator: (v: any) => ['horizontal', 'vertical'].includes(v),\n  },\n\n  'onClick:prepend': EventProp<[MouseEvent]>(),\n  'onClick:append': EventProp<[MouseEvent]>(),\n\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n  ...pick(makeDimensionProps(), [\n    'maxWidth',\n    'minWidth',\n    'width',\n  ]),\n  ...makeThemeProps(),\n  ...makeValidationProps(),\n}, 'VInput')\n\nexport type VInputSlots = {\n  default: VInputSlot\n  prepend: VInputSlot\n  append: VInputSlot\n  details: VInputSlot\n  message: VMessageSlot\n}\n\nexport const VInput = genericComponent<new <T>(\n  props: {\n    modelValue?: T | null\n    'onUpdate:modelValue'?: (value: T | null) => void\n  },\n  slots: VInputSlots,\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VInput',\n\n  props: {\n    ...makeVInputProps(),\n  },\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { attrs, slots, emit }) {\n    const { densityClasses } = useDensity(props)\n    const { dimensionStyles } = useDimension(props)\n    const { themeClasses } = provideTheme(props)\n    const { rtlClasses } = useRtl()\n    const { InputIcon } = useInputIcon(props)\n\n    const uid = useId()\n    const id = computed(() => props.id || `input-${uid}`)\n    const messagesId = computed(() => `${id.value}-messages`)\n\n    const {\n      errorMessages,\n      isDirty,\n      isDisabled,\n      isReadonly,\n      isPristine,\n      isValid,\n      isValidating,\n      reset,\n      resetValidation,\n      validate,\n      validationClasses,\n    } = useValidation(props, 'v-input', id)\n\n    const slotProps = computed<VInputSlot>(() => ({\n      id,\n      messagesId,\n      isDirty,\n      isDisabled,\n      isReadonly,\n      isPristine,\n      isValid,\n      isValidating,\n      reset,\n      resetValidation,\n      validate,\n    }))\n\n    const color = computed(() => {\n      return props.error || props.disabled ? undefined\n        : props.focused ? props.color\n        : props.baseColor\n    })\n\n    const iconColor = computed(() => {\n      if (!props.iconColor) return undefined\n\n      return props.iconColor === true ? color.value : props.iconColor\n    })\n\n    const messages = computed(() => {\n      if (props.errorMessages?.length || (!isPristine.value && errorMessages.value.length)) {\n        return errorMessages.value\n      } else if (props.hint && (props.persistentHint || props.focused)) {\n        return props.hint\n      } else {\n        return props.messages\n      }\n    })\n\n    useRender(() => {\n      const hasPrepend = !!(slots.prepend || props.prependIcon)\n      const hasAppend = !!(slots.append || props.appendIcon)\n      const hasMessages = messages.value.length > 0\n      const hasDetails = !props.hideDetails || (\n        props.hideDetails === 'auto' &&\n        (hasMessages || !!slots.details)\n      )\n\n      return (\n        <div\n          class={[\n            'v-input',\n            `v-input--${props.direction}`,\n            {\n              'v-input--center-affix': props.centerAffix,\n              'v-input--focused': props.focused,\n              'v-input--glow': props.glow,\n              'v-input--hide-spin-buttons': props.hideSpinButtons,\n            },\n            densityClasses.value,\n            themeClasses.value,\n            rtlClasses.value,\n            validationClasses.value,\n            props.class,\n          ]}\n          style={[\n            dimensionStyles.value,\n            props.style,\n          ]}\n        >\n          { hasPrepend && (\n            <div key=\"prepend\" class=\"v-input__prepend\">\n              { slots.prepend?.(slotProps.value) }\n\n              { props.prependIcon && (\n                <InputIcon\n                  key=\"prepend-icon\"\n                  name=\"prepend\"\n                  color={ iconColor.value }\n                />\n              )}\n            </div>\n          )}\n\n          { slots.default && (\n            <div class=\"v-input__control\">\n              { slots.default?.(slotProps.value) }\n            </div>\n          )}\n\n          { hasAppend && (\n            <div key=\"append\" class=\"v-input__append\">\n              { props.appendIcon && (\n                <InputIcon\n                  key=\"append-icon\"\n                  name=\"append\"\n                  color={ iconColor.value }\n                />\n              )}\n\n              { slots.append?.(slotProps.value) }\n            </div>\n          )}\n\n          { hasDetails && (\n            <div\n              id={ messagesId.value }\n              class=\"v-input__details\"\n              role=\"alert\"\n              aria-live=\"polite\"\n            >\n              <VMessages\n                active={ hasMessages }\n                messages={ messages.value }\n                v-slots={{ message: slots.message }}\n              />\n\n              { slots.details?.(slotProps.value) }\n            </div>\n          )}\n        </div>\n      )\n    })\n\n    return {\n      reset,\n      resetValidation,\n      validate,\n      isValid,\n      errorMessages,\n    }\n  },\n})\n\nexport type VInput = InstanceType<typeof VInput>\n"]},"metadata":{},"sourceType":"module"}
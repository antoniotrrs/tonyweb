{"ast":null,"code":"import _defineProperty from \"/Users/antoniotorres/Documents/tony/tonyweb/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/Users/antoniotorres/Documents/tony/tonyweb/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\n// Styles\nimport \"./VGrid.css\"; // Composables\n\nimport { makeComponentProps } from \"../../composables/component.js\";\nimport { breakpoints } from \"../../composables/display.js\";\nimport { makeTagProps } from \"../../composables/tag.js\"; // Utilities\n\nimport { capitalize, computed, h } from 'vue';\nimport { genericComponent, propsFactory } from \"../../util/index.js\"; // Types\n\nvar breakpointProps = function () {\n  return breakpoints.reduce(function (props, val) {\n    props[val] = {\n      type: [Boolean, String, Number],\n      default: false\n    };\n    return props;\n  }, {});\n}();\n\nvar offsetProps = function () {\n  return breakpoints.reduce(function (props, val) {\n    var offsetKey = 'offset' + capitalize(val);\n    props[offsetKey] = {\n      type: [String, Number],\n      default: null\n    };\n    return props;\n  }, {});\n}();\n\nvar orderProps = function () {\n  return breakpoints.reduce(function (props, val) {\n    var orderKey = 'order' + capitalize(val);\n    props[orderKey] = {\n      type: [String, Number],\n      default: null\n    };\n    return props;\n  }, {});\n}();\n\nvar propMap = {\n  col: Object.keys(breakpointProps),\n  offset: Object.keys(offsetProps),\n  order: Object.keys(orderProps)\n};\n\nfunction breakpointClass(type, prop, val) {\n  var className = type;\n\n  if (val == null || val === false) {\n    return undefined;\n  }\n\n  if (prop) {\n    var breakpoint = prop.replace(type, '');\n    className += \"-\".concat(breakpoint);\n  }\n\n  if (type === 'col') {\n    className = 'v-' + className;\n  } // Handling the boolean style prop when accepting [Boolean, String, Number]\n  // means Vue will not convert <v-col sm></v-col> to sm: true for us.\n  // Since the default is false, an empty string indicates the prop's presence.\n\n\n  if (type === 'col' && (val === '' || val === true)) {\n    // .v-col-md\n    return className.toLowerCase();\n  } // .order-md-6\n\n\n  className += \"-\".concat(val);\n  return className.toLowerCase();\n}\n\nvar ALIGN_SELF_VALUES = ['auto', 'start', 'end', 'center', 'baseline', 'stretch'];\nexport var makeVColProps = propsFactory(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({\n  cols: {\n    type: [Boolean, String, Number],\n    default: false\n  }\n}, breakpointProps), {}, {\n  offset: {\n    type: [String, Number],\n    default: null\n  }\n}, offsetProps), {}, {\n  order: {\n    type: [String, Number],\n    default: null\n  }\n}, orderProps), {}, {\n  alignSelf: {\n    type: String,\n    default: null,\n    validator: function validator(str) {\n      return ALIGN_SELF_VALUES.includes(str);\n    }\n  }\n}, makeComponentProps()), makeTagProps()), 'VCol');\nexport var VCol = genericComponent()({\n  name: 'VCol',\n  props: makeVColProps(),\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n    var classes = computed(function () {\n      var _classList$push;\n\n      var classList = []; // Loop through `col`, `offset`, `order` breakpoint props\n\n      var type;\n\n      for (type in propMap) {\n        propMap[type].forEach(function (prop) {\n          var value = props[prop];\n          var className = breakpointClass(type, prop, value);\n          if (className) classList.push(className);\n        });\n      }\n\n      var hasColClasses = classList.some(function (className) {\n        return className.startsWith('v-col-');\n      });\n      classList.push((_classList$push = {\n        // Default to .v-col if no other col-{bp}-* classes generated nor `cols` specified.\n        'v-col': !hasColClasses || !props.cols\n      }, _defineProperty(_classList$push, \"v-col-\".concat(props.cols), props.cols), _defineProperty(_classList$push, \"offset-\".concat(props.offset), props.offset), _defineProperty(_classList$push, \"order-\".concat(props.order), props.order), _defineProperty(_classList$push, \"align-self-\".concat(props.alignSelf), props.alignSelf), _classList$push));\n      return classList;\n    });\n    return function () {\n      var _slots$default;\n\n      return h(props.tag, {\n        class: [classes.value, props.class],\n        style: props.style\n      }, (_slots$default = slots.default) === null || _slots$default === void 0 ? void 0 : _slots$default.call(slots));\n    };\n  }\n});","map":{"version":3,"mappings":"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","names":["makeComponentProps","breakpoints","makeTagProps","capitalize","computed","h","genericComponent","propsFactory","breakpointProps","reduce","props","val","type","Boolean","String","Number","default","offsetProps","offsetKey","orderProps","orderKey","propMap","col","Object","keys","offset","order","breakpointClass","prop","className","undefined","breakpoint","replace","toLowerCase","ALIGN_SELF_VALUES","makeVColProps","cols","alignSelf","validator","str","includes","VCol","name","setup","_ref","slots","classes","classList","forEach","value","push","hasColClasses","some","startsWith","tag","class","style"],"sources":["../../../src/components/VGrid/VCol.ts"],"sourcesContent":["// Styles\nimport './VGrid.sass'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { breakpoints } from '@/composables/display'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { capitalize, computed, h } from 'vue'\nimport { genericComponent, propsFactory } from '@/util'\n\n// Types\nimport type { Prop, PropType } from 'vue'\nimport type { Breakpoint } from '@/composables/display'\n\ntype BreakpointOffset = `offset${Capitalize<Breakpoint>}`\ntype BreakpointOrder = `order${Capitalize<Breakpoint>}`\n\nconst breakpointProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props[val] = {\n      type: [Boolean, String, Number],\n      default: false,\n    }\n    return props\n  }, {} as Record<Breakpoint, Prop<boolean | string | number, false>>)\n})()\n\nconst offsetProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    const offsetKey = ('offset' + capitalize(val)) as BreakpointOffset\n    props[offsetKey] = {\n      type: [String, Number],\n      default: null,\n    }\n    return props\n  }, {} as Record<BreakpointOffset, Prop<string | number, null>>)\n})()\n\nconst orderProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    const orderKey = ('order' + capitalize(val)) as BreakpointOrder\n    props[orderKey] = {\n      type: [String, Number],\n      default: null,\n    }\n    return props\n  }, {} as Record<BreakpointOrder, Prop<string | number, null>>)\n})()\n\nconst propMap = {\n  col: Object.keys(breakpointProps),\n  offset: Object.keys(offsetProps),\n  order: Object.keys(orderProps),\n}\n\nfunction breakpointClass (type: keyof typeof propMap, prop: string, val: boolean | string | number) {\n  let className: string = type\n  if (val == null || val === false) {\n    return undefined\n  }\n  if (prop) {\n    const breakpoint = prop.replace(type, '')\n    className += `-${breakpoint}`\n  }\n  if (type === 'col') {\n    className = 'v-' + className\n  }\n  // Handling the boolean style prop when accepting [Boolean, String, Number]\n  // means Vue will not convert <v-col sm></v-col> to sm: true for us.\n  // Since the default is false, an empty string indicates the prop's presence.\n  if (type === 'col' && (val === '' || val === true)) {\n    // .v-col-md\n    return className.toLowerCase()\n  }\n  // .order-md-6\n  className += `-${val}`\n  return className.toLowerCase()\n}\n\nconst ALIGN_SELF_VALUES = ['auto', 'start', 'end', 'center', 'baseline', 'stretch'] as const\n\nexport const makeVColProps = propsFactory({\n  cols: {\n    type: [Boolean, String, Number],\n    default: false,\n  },\n  ...breakpointProps,\n  offset: {\n    type: [String, Number],\n    default: null,\n  },\n  ...offsetProps,\n  order: {\n    type: [String, Number],\n    default: null,\n  },\n  ...orderProps,\n  alignSelf: {\n    type: String as PropType<typeof ALIGN_SELF_VALUES[number]>,\n    default: null,\n    validator: (str: any) => ALIGN_SELF_VALUES.includes(str),\n  },\n\n  ...makeComponentProps(),\n  ...makeTagProps(),\n}, 'VCol')\n\nexport const VCol = genericComponent()({\n  name: 'VCol',\n\n  props: makeVColProps(),\n\n  setup (props, { slots }) {\n    const classes = computed(() => {\n      const classList: any[] = []\n\n      // Loop through `col`, `offset`, `order` breakpoint props\n      let type: keyof typeof propMap\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value: string | number | boolean = (props as any)[prop]\n          const className = breakpointClass(type, prop, value)\n          if (className) classList!.push(className)\n        })\n      }\n\n      const hasColClasses = classList.some(className => className.startsWith('v-col-'))\n\n      classList.push({\n        // Default to .v-col if no other col-{bp}-* classes generated nor `cols` specified.\n        'v-col': !hasColClasses || !props.cols,\n        [`v-col-${props.cols}`]: props.cols,\n        [`offset-${props.offset}`]: props.offset,\n        [`order-${props.order}`]: props.order,\n        [`align-self-${props.alignSelf}`]: props.alignSelf,\n      })\n\n      return classList\n    })\n\n    return () => h(props.tag, {\n      class: [\n        classes.value,\n        props.class,\n      ],\n      style: props.style,\n    }, slots.default?.())\n  },\n})\n\nexport type VCol = InstanceType<typeof VCol>\n"]},"metadata":{},"sourceType":"module"}
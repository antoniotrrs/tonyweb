{"ast":null,"code":"// Utilities\nimport { shallowRef, watch } from 'vue'; // Types\n\nexport function useScrolling(listRef, textFieldRef) {\n  const isScrolling = shallowRef(false);\n  let scrollTimeout;\n\n  function onListScroll(e) {\n    cancelAnimationFrame(scrollTimeout);\n    isScrolling.value = true;\n    scrollTimeout = requestAnimationFrame(() => {\n      scrollTimeout = requestAnimationFrame(() => {\n        isScrolling.value = false;\n      });\n    });\n  }\n\n  async function finishScrolling() {\n    await new Promise(resolve => requestAnimationFrame(resolve));\n    await new Promise(resolve => requestAnimationFrame(resolve));\n    await new Promise(resolve => requestAnimationFrame(resolve));\n    await new Promise(resolve => {\n      if (isScrolling.value) {\n        const stop = watch(isScrolling, () => {\n          stop();\n          resolve();\n        });\n      } else resolve();\n    });\n  }\n\n  async function onListKeydown(e) {\n    if (e.key === 'Tab') {\n      textFieldRef.value?.focus();\n    }\n\n    if (!['PageDown', 'PageUp', 'Home', 'End'].includes(e.key)) return;\n    const el = listRef.value?.$el;\n    if (!el) return;\n\n    if (e.key === 'Home' || e.key === 'End') {\n      el.scrollTo({\n        top: e.key === 'Home' ? 0 : el.scrollHeight,\n        behavior: 'smooth'\n      });\n    }\n\n    await finishScrolling();\n    const children = el.querySelectorAll(':scope > :not(.v-virtual-scroll__spacer)');\n\n    if (e.key === 'PageDown' || e.key === 'Home') {\n      const top = el.getBoundingClientRect().top;\n\n      for (const child of children) {\n        if (child.getBoundingClientRect().top >= top) {\n          child.focus();\n          break;\n        }\n      }\n    } else {\n      const bottom = el.getBoundingClientRect().bottom;\n\n      for (const child of [...children].reverse()) {\n        if (child.getBoundingClientRect().bottom <= bottom) {\n          child.focus();\n          break;\n        }\n      }\n    }\n  }\n\n  return {\n    onScrollPassive: onListScroll,\n    onKeydown: onListKeydown\n  }; // typescript doesn't know about vue's event merging\n}","map":{"version":3,"mappings":"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","names":["shallowRef","watch","useScrolling","listRef","textFieldRef","isScrolling","scrollTimeout","onListScroll","e","cancelAnimationFrame","value","requestAnimationFrame","finishScrolling","Promise","resolve","stop","onListKeydown","key","focus","includes","el","$el","scrollTo","top","scrollHeight","behavior","children","querySelectorAll","getBoundingClientRect","child","bottom","reverse","onScrollPassive","onKeydown"],"sources":["../../../src/components/VSelect/useScrolling.ts"],"sourcesContent":["// Utilities\nimport { shallowRef, watch } from 'vue'\n\n// Types\nimport type { Ref } from 'vue'\nimport type { VList } from '@/components/VList'\nimport type { VTextField } from '@/components/VTextField'\n\nexport function useScrolling (listRef: Ref<VList | undefined>, textFieldRef: Ref<VTextField | undefined>) {\n  const isScrolling = shallowRef(false)\n  let scrollTimeout: number\n  function onListScroll (e: Event) {\n    cancelAnimationFrame(scrollTimeout)\n    isScrolling.value = true\n    scrollTimeout = requestAnimationFrame(() => {\n      scrollTimeout = requestAnimationFrame(() => {\n        isScrolling.value = false\n      })\n    })\n  }\n  async function finishScrolling () {\n    await new Promise(resolve => requestAnimationFrame(resolve))\n    await new Promise(resolve => requestAnimationFrame(resolve))\n    await new Promise(resolve => requestAnimationFrame(resolve))\n    await new Promise<void>(resolve => {\n      if (isScrolling.value) {\n        const stop = watch(isScrolling, () => {\n          stop()\n          resolve()\n        })\n      } else resolve()\n    })\n  }\n  async function onListKeydown (e: KeyboardEvent) {\n    if (e.key === 'Tab') {\n      textFieldRef.value?.focus()\n    }\n\n    if (!['PageDown', 'PageUp', 'Home', 'End'].includes(e.key)) return\n    const el: HTMLElement = listRef.value?.$el\n    if (!el) return\n\n    if (e.key === 'Home' || e.key === 'End') {\n      el.scrollTo({\n        top: e.key === 'Home' ? 0 : el.scrollHeight,\n        behavior: 'smooth',\n      })\n    }\n\n    await finishScrolling()\n\n    const children = el.querySelectorAll(':scope > :not(.v-virtual-scroll__spacer)')\n\n    if (e.key === 'PageDown' || e.key === 'Home') {\n      const top = el.getBoundingClientRect().top\n      for (const child of children) {\n        if (child.getBoundingClientRect().top >= top) {\n          (child as HTMLElement).focus()\n          break\n        }\n      }\n    } else {\n      const bottom = el.getBoundingClientRect().bottom\n      for (const child of [...children].reverse()) {\n        if (child.getBoundingClientRect().bottom <= bottom) {\n          (child as HTMLElement).focus()\n          break\n        }\n      }\n    }\n  }\n\n  return {\n    onScrollPassive: onListScroll,\n    onKeydown: onListKeydown,\n  } as Record<string, Function> // typescript doesn't know about vue's event merging\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"// Utilities\nimport { computed, onBeforeUnmount, onMounted, shallowRef, watch } from 'vue';\nimport { convertToUnit } from \"../../util/index.js\"; // Types\n\nexport function useSticky(_ref) {\n  let {\n    rootEl,\n    isSticky,\n    layoutItemStyles\n  } = _ref;\n  const isStuck = shallowRef(false);\n  const stuckPosition = shallowRef(0);\n  const stickyStyles = computed(() => {\n    const side = typeof isStuck.value === 'boolean' ? 'top' : isStuck.value;\n    return [isSticky.value ? {\n      top: 'auto',\n      bottom: 'auto',\n      height: undefined\n    } : undefined, isStuck.value ? {\n      [side]: convertToUnit(stuckPosition.value)\n    } : {\n      top: layoutItemStyles.value.top\n    }];\n  });\n  onMounted(() => {\n    watch(isSticky, val => {\n      if (val) {\n        window.addEventListener('scroll', onScroll, {\n          passive: true\n        });\n      } else {\n        window.removeEventListener('scroll', onScroll);\n      }\n    }, {\n      immediate: true\n    });\n  });\n  onBeforeUnmount(() => {\n    window.removeEventListener('scroll', onScroll);\n  });\n  let lastScrollTop = 0;\n\n  function onScroll() {\n    const direction = lastScrollTop > window.scrollY ? 'up' : 'down';\n    const rect = rootEl.value.getBoundingClientRect();\n    const layoutTop = parseFloat(layoutItemStyles.value.top ?? 0);\n    const top = window.scrollY - Math.max(0, stuckPosition.value - layoutTop);\n    const bottom = rect.height + Math.max(stuckPosition.value, layoutTop) - window.scrollY - window.innerHeight;\n    const bodyScroll = parseFloat(getComputedStyle(rootEl.value).getPropertyValue('--v-body-scroll-y')) || 0;\n\n    if (rect.height < window.innerHeight - layoutTop) {\n      isStuck.value = 'top';\n      stuckPosition.value = layoutTop;\n    } else if (direction === 'up' && isStuck.value === 'bottom' || direction === 'down' && isStuck.value === 'top') {\n      stuckPosition.value = window.scrollY + rect.top - bodyScroll;\n      isStuck.value = true;\n    } else if (direction === 'down' && bottom <= 0) {\n      stuckPosition.value = 0;\n      isStuck.value = 'bottom';\n    } else if (direction === 'up' && top <= 0) {\n      if (!bodyScroll) {\n        stuckPosition.value = rect.top + top;\n        isStuck.value = 'top';\n      } else if (isStuck.value !== 'top') {\n        stuckPosition.value = -top + bodyScroll + layoutTop;\n        isStuck.value = 'top';\n      }\n    }\n\n    lastScrollTop = window.scrollY;\n  }\n\n  return {\n    isStuck,\n    stickyStyles\n  };\n}","map":{"version":3,"mappings":"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","names":["computed","onBeforeUnmount","onMounted","shallowRef","watch","convertToUnit","useSticky","_ref","rootEl","isSticky","layoutItemStyles","isStuck","stuckPosition","stickyStyles","side","value","top","bottom","height","undefined","val","window","addEventListener","onScroll","passive","removeEventListener","immediate","lastScrollTop","direction","scrollY","rect","getBoundingClientRect","layoutTop","parseFloat","Math","max","innerHeight","bodyScroll","getComputedStyle","getPropertyValue"],"sources":["../../../src/components/VNavigationDrawer/sticky.ts"],"sourcesContent":["// Utilities\nimport { computed, onBeforeUnmount, onMounted, shallowRef, watch } from 'vue'\nimport { convertToUnit } from '@/util'\n\n// Types\nimport type { CSSProperties, Ref, StyleValue } from 'vue'\n\ninterface StickyProps {\n  rootEl: Ref<HTMLElement | undefined>\n  isSticky: Ref<boolean>\n  layoutItemStyles: Ref<CSSProperties>\n}\n\nexport function useSticky ({ rootEl, isSticky, layoutItemStyles }: StickyProps) {\n  const isStuck = shallowRef<boolean | 'top' | 'bottom'>(false)\n  const stuckPosition = shallowRef(0)\n\n  const stickyStyles = computed<StyleValue>(() => {\n    const side = typeof isStuck.value === 'boolean' ? 'top' : isStuck.value\n    return [\n      isSticky.value ? { top: 'auto', bottom: 'auto', height: undefined } : undefined,\n      isStuck.value\n        ? { [side]: convertToUnit(stuckPosition.value) }\n        : { top: layoutItemStyles.value.top },\n    ]\n  })\n\n  onMounted(() => {\n    watch(isSticky, val => {\n      if (val) {\n        window.addEventListener('scroll', onScroll, { passive: true })\n      } else {\n        window.removeEventListener('scroll', onScroll)\n      }\n    }, { immediate: true })\n  })\n\n  onBeforeUnmount(() => {\n    window.removeEventListener('scroll', onScroll)\n  })\n\n  let lastScrollTop = 0\n  function onScroll () {\n    const direction = lastScrollTop > window.scrollY ? 'up' : 'down'\n    const rect = rootEl.value!.getBoundingClientRect()\n    const layoutTop = parseFloat(layoutItemStyles.value.top ?? 0)\n    const top = window.scrollY - Math.max(0, stuckPosition.value - layoutTop)\n    const bottom =\n      rect.height +\n      Math.max(stuckPosition.value, layoutTop) -\n      window.scrollY -\n      window.innerHeight\n    const bodyScroll = parseFloat(getComputedStyle(rootEl.value!).getPropertyValue('--v-body-scroll-y')) || 0\n\n    if (rect.height < window.innerHeight - layoutTop) {\n      isStuck.value = 'top'\n      stuckPosition.value = layoutTop\n    } else if (\n      (direction === 'up' && isStuck.value === 'bottom') ||\n      (direction === 'down' && isStuck.value === 'top')\n    ) {\n      stuckPosition.value = window.scrollY + rect.top - bodyScroll\n      isStuck.value = true\n    } else if (direction === 'down' && bottom <= 0) {\n      stuckPosition.value = 0\n      isStuck.value = 'bottom'\n    } else if (direction === 'up' && top <= 0) {\n      if (!bodyScroll) {\n        stuckPosition.value = rect.top + top\n        isStuck.value = 'top'\n      } else if (isStuck.value !== 'top') {\n        stuckPosition.value = -top + bodyScroll + layoutTop\n        isStuck.value = 'top'\n      }\n    }\n\n    lastScrollTop = window.scrollY\n  }\n\n  return { isStuck, stickyStyles }\n}\n"]},"metadata":{},"sourceType":"module"}
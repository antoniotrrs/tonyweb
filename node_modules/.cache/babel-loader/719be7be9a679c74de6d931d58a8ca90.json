{"ast":null,"code":"// Composables\nimport { makeValidationProps, useValidation } from \"../../composables/validation.js\"; // Utilities\n\nimport { genericComponent } from \"../../util/index.js\"; // Types\n\nexport var VValidation = genericComponent()({\n  name: 'VValidation',\n  props: makeValidationProps(),\n  emits: {\n    'update:modelValue': function updateModelValue(value) {\n      return true;\n    }\n  },\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n    var validation = useValidation(props, 'validation');\n    return function () {\n      var _slots$default;\n\n      return (_slots$default = slots.default) === null || _slots$default === void 0 ? void 0 : _slots$default.call(slots, validation);\n    };\n  }\n});","map":{"version":3,"mappings":"AAAA;AAAA,SACSA,mBADT,EAC8BC,aAD9B,QAC2C,iCAD3C,C,CAGA;;AAAA,SACSC,gBADT,QACyB,qBADzB,C,CAGA;;AAOA,OAAO,IAAMC,WAAW,GAAGD,gBAAgB,GAMM;AAC/CE,MAAI,EAAE,aADyC;AAG/CC,OAAK,EAAEL,mBAAmB,EAHqB;AAK/CM,OAAK,EAAE;AACL,yBAAsBC,+BAAU;AAAA,aAAK,IAAL;AAAA;AAD3B,GALwC;AAS/CC,OAT+C,iBASxCH,KATwC,EASnCI,IATmC,EAStB;AAAA,QAATC,KAAS,GAAFD,IAAE,CAATC,KAAS;AACvB,QAAMC,UAAU,GAAGV,aAAa,CAACI,KAAD,EAAQ,YAAR,CAAhC;AAEA,WAAO;AAAA;;AAAA,+BAAMK,KAAK,CAACE,OAAZ,mDAAMF,yBAAK,EAAWC,UAAX,CAAX;AAAA,KAAP;AACF;AAb+C,CANN,CAApC","names":["makeValidationProps","useValidation","genericComponent","VValidation","name","props","emits","value","setup","_ref","slots","validation","default"],"sources":["../../../src/components/VValidation/VValidation.tsx"],"sourcesContent":["// Composables\nimport { makeValidationProps, useValidation } from '@/composables/validation'\n\n// Utilities\nimport { genericComponent } from '@/util'\n\n// Types\nimport type { GenericProps } from '@/util'\n\nexport type VValidationSlots = {\n  default: ReturnType<typeof useValidation>\n}\n\nexport const VValidation = genericComponent<new <T>(\n  props: {\n    modelValue?: T | null\n    'onUpdate:modelValue'?: (value: T | null) => void\n  },\n  slots: VValidationSlots,\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VValidation',\n\n  props: makeValidationProps(),\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const validation = useValidation(props, 'validation')\n\n    return () => slots.default?.(validation)\n  },\n})\n\nexport type VValidation = InstanceType<typeof VValidation>\n"]},"metadata":{},"sourceType":"module"}
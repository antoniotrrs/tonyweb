{"ast":null,"code":"import _objectSpread from \"/Users/antoniotorres/Documents/tony/tonyweb/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.math.sign.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.fill.js\";\nimport \"core-js/modules/es.string.fixed.js\";\nimport { Fragment as _Fragment, createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\"; // Styles\n\nimport \"./VTab.css\"; // Components\n\nimport { makeVBtnProps, VBtn } from \"../VBtn/VBtn.js\"; // Composables\n\nimport { useTextColor } from \"../../composables/color.js\";\nimport { forwardRefs } from \"../../composables/forwardRefs.js\"; // Utilities\n\nimport { computed, ref } from 'vue';\nimport { VTabsSymbol } from \"./shared.js\";\nimport { animate, genericComponent, omit, propsFactory, standardEasing, useRender } from \"../../util/index.js\"; // Types\n\nexport var makeVTabProps = propsFactory(_objectSpread({\n  fixed: Boolean,\n  sliderColor: String,\n  hideSlider: Boolean,\n  direction: {\n    type: String,\n    default: 'horizontal'\n  }\n}, omit(makeVBtnProps({\n  selectedClass: 'v-tab--selected',\n  variant: 'text'\n}), ['active', 'block', 'flat', 'location', 'position', 'symbol'])), 'VTab');\nexport var VTab = genericComponent()({\n  name: 'VTab',\n  props: makeVTabProps(),\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots,\n        attrs = _ref.attrs;\n\n    var _useTextColor = useTextColor(props, 'sliderColor'),\n        sliderColorClasses = _useTextColor.textColorClasses,\n        sliderColorStyles = _useTextColor.textColorStyles;\n\n    var rootEl = ref();\n    var sliderEl = ref();\n    var isHorizontal = computed(function () {\n      return props.direction === 'horizontal';\n    });\n    var isSelected = computed(function () {\n      var _rootEl$value$group$i, _rootEl$value, _rootEl$value$group;\n\n      return (_rootEl$value$group$i = (_rootEl$value = rootEl.value) === null || _rootEl$value === void 0 ? void 0 : (_rootEl$value$group = _rootEl$value.group) === null || _rootEl$value$group === void 0 ? void 0 : _rootEl$value$group.isSelected.value) !== null && _rootEl$value$group$i !== void 0 ? _rootEl$value$group$i : false;\n    });\n\n    function updateSlider(_ref2) {\n      var value = _ref2.value;\n\n      if (value) {\n        var _rootEl$value2, _rootEl$value2$$el$pa;\n\n        var prevEl = (_rootEl$value2 = rootEl.value) === null || _rootEl$value2 === void 0 ? void 0 : (_rootEl$value2$$el$pa = _rootEl$value2.$el.parentElement) === null || _rootEl$value2$$el$pa === void 0 ? void 0 : _rootEl$value2$$el$pa.querySelector('.v-tab--selected .v-tab__slider');\n        var nextEl = sliderEl.value;\n        if (!prevEl || !nextEl) return;\n        var color = getComputedStyle(prevEl).color;\n        var prevBox = prevEl.getBoundingClientRect();\n        var nextBox = nextEl.getBoundingClientRect();\n        var xy = isHorizontal.value ? 'x' : 'y';\n        var XY = isHorizontal.value ? 'X' : 'Y';\n        var rightBottom = isHorizontal.value ? 'right' : 'bottom';\n        var widthHeight = isHorizontal.value ? 'width' : 'height';\n        var prevPos = prevBox[xy];\n        var nextPos = nextBox[xy];\n        var delta = prevPos > nextPos ? prevBox[rightBottom] - nextBox[rightBottom] : prevBox[xy] - nextBox[xy];\n        var origin = Math.sign(delta) > 0 ? isHorizontal.value ? 'right' : 'bottom' : Math.sign(delta) < 0 ? isHorizontal.value ? 'left' : 'top' : 'center';\n        var size = Math.abs(delta) + (Math.sign(delta) < 0 ? prevBox[widthHeight] : nextBox[widthHeight]);\n        var scale = size / Math.max(prevBox[widthHeight], nextBox[widthHeight]) || 0;\n        var initialScale = prevBox[widthHeight] / nextBox[widthHeight] || 0;\n        var sigma = 1.5;\n        animate(nextEl, {\n          backgroundColor: [color, 'currentcolor'],\n          transform: [\"translate\".concat(XY, \"(\").concat(delta, \"px) scale\").concat(XY, \"(\").concat(initialScale, \")\"), \"translate\".concat(XY, \"(\").concat(delta / sigma, \"px) scale\").concat(XY, \"(\").concat((scale - 1) / sigma + 1, \")\"), 'none'],\n          transformOrigin: Array(3).fill(origin)\n        }, {\n          duration: 225,\n          easing: standardEasing\n        });\n      }\n    }\n\n    useRender(function () {\n      var btnProps = VBtn.filterProps(props);\n      return _createVNode(VBtn, _mergeProps({\n        \"symbol\": VTabsSymbol,\n        \"ref\": rootEl,\n        \"class\": ['v-tab', props.class],\n        \"style\": props.style,\n        \"tabindex\": isSelected.value ? 0 : -1,\n        \"role\": \"tab\",\n        \"aria-selected\": String(isSelected.value),\n        \"active\": false\n      }, btnProps, attrs, {\n        \"block\": props.fixed,\n        \"maxWidth\": props.fixed ? 300 : undefined,\n        \"onGroup:selected\": updateSlider\n      }), _objectSpread(_objectSpread({}, slots), {}, {\n        default: function _default() {\n          var _slots$default, _slots$default2;\n\n          return _createVNode(_Fragment, null, [(_slots$default = (_slots$default2 = slots.default) === null || _slots$default2 === void 0 ? void 0 : _slots$default2.call(slots)) !== null && _slots$default !== void 0 ? _slots$default : props.text, !props.hideSlider && _createVNode(\"div\", {\n            \"ref\": sliderEl,\n            \"class\": ['v-tab__slider', sliderColorClasses.value],\n            \"style\": sliderColorStyles.value\n          }, null)]);\n        }\n      }));\n    });\n    return forwardRefs({}, rootEl);\n  }\n});","map":{"version":3,"mappings":"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","names":["makeVBtnProps","VBtn","useTextColor","forwardRefs","computed","ref","VTabsSymbol","animate","genericComponent","omit","propsFactory","standardEasing","useRender","makeVTabProps","fixed","Boolean","sliderColor","String","hideSlider","direction","type","default","selectedClass","variant","VTab","name","props","setup","_ref","slots","attrs","sliderColorClasses","textColorClasses","sliderColorStyles","textColorStyles","rootEl","sliderEl","isHorizontal","isSelected","value","group","updateSlider","_ref2","prevEl","$el","parentElement","querySelector","nextEl","color","getComputedStyle","prevBox","getBoundingClientRect","nextBox","xy","XY","rightBottom","widthHeight","prevPos","nextPos","delta","origin","Math","sign","size","abs","scale","max","initialScale","sigma","backgroundColor","transform","transformOrigin","Array","fill","duration","easing","btnProps","filterProps","class","style","undefined","text","_createVNode"],"sources":["../../../src/components/VTabs/VTab.tsx"],"sourcesContent":["// Styles\nimport './VTab.sass'\n\n// Components\nimport { makeVBtnProps, VBtn } from '@/components/VBtn/VBtn'\n\n// Composables\nimport { useTextColor } from '@/composables/color'\nimport { forwardRefs } from '@/composables/forwardRefs'\n\n// Utilities\nimport { computed, ref } from 'vue'\nimport { VTabsSymbol } from './shared'\nimport { animate, genericComponent, omit, propsFactory, standardEasing, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { VBtnSlots } from '@/components/VBtn/VBtn'\n\nexport const makeVTabProps = propsFactory({\n  fixed: Boolean,\n\n  sliderColor: String,\n  hideSlider: Boolean,\n\n  direction: {\n    type: String as PropType<'horizontal' | 'vertical'>,\n    default: 'horizontal',\n  },\n\n  ...omit(makeVBtnProps({\n    selectedClass: 'v-tab--selected',\n    variant: 'text' as const,\n  }), [\n    'active',\n    'block',\n    'flat',\n    'location',\n    'position',\n    'symbol',\n  ]),\n}, 'VTab')\n\nexport const VTab = genericComponent<VBtnSlots>()({\n  name: 'VTab',\n\n  props: makeVTabProps(),\n\n  setup (props, { slots, attrs }) {\n    const { textColorClasses: sliderColorClasses, textColorStyles: sliderColorStyles } = useTextColor(props, 'sliderColor')\n\n    const rootEl = ref<VBtn>()\n    const sliderEl = ref<HTMLElement>()\n\n    const isHorizontal = computed(() => props.direction === 'horizontal')\n    const isSelected = computed(() => rootEl.value?.group?.isSelected.value ?? false)\n\n    function updateSlider ({ value }: { value: boolean }) {\n      if (value) {\n        const prevEl: HTMLElement | undefined = rootEl.value?.$el.parentElement?.querySelector('.v-tab--selected .v-tab__slider')\n        const nextEl = sliderEl.value\n\n        if (!prevEl || !nextEl) return\n\n        const color = getComputedStyle(prevEl).color\n\n        const prevBox = prevEl.getBoundingClientRect()\n        const nextBox = nextEl.getBoundingClientRect()\n\n        const xy = isHorizontal.value ? 'x' : 'y'\n        const XY = isHorizontal.value ? 'X' : 'Y'\n        const rightBottom = isHorizontal.value ? 'right' : 'bottom'\n        const widthHeight = isHorizontal.value ? 'width' : 'height'\n\n        const prevPos = prevBox[xy]\n        const nextPos = nextBox[xy]\n        const delta = prevPos > nextPos\n          ? prevBox[rightBottom] - nextBox[rightBottom]\n          : prevBox[xy] - nextBox[xy]\n        const origin =\n          Math.sign(delta) > 0 ? (isHorizontal.value ? 'right' : 'bottom')\n          : Math.sign(delta) < 0 ? (isHorizontal.value ? 'left' : 'top')\n          : 'center'\n        const size = Math.abs(delta) + (Math.sign(delta) < 0 ? prevBox[widthHeight] : nextBox[widthHeight])\n        const scale = size / Math.max(prevBox[widthHeight], nextBox[widthHeight]) || 0\n        const initialScale = prevBox[widthHeight] / nextBox[widthHeight] || 0\n\n        const sigma = 1.5\n        animate(nextEl, {\n          backgroundColor: [color, 'currentcolor'],\n          transform: [\n            `translate${XY}(${delta}px) scale${XY}(${initialScale})`,\n            `translate${XY}(${delta / sigma}px) scale${XY}(${(scale - 1) / sigma + 1})`,\n            'none',\n          ],\n          transformOrigin: Array(3).fill(origin),\n        }, {\n          duration: 225,\n          easing: standardEasing,\n        })\n      }\n    }\n\n    useRender(() => {\n      const btnProps = VBtn.filterProps(props)\n\n      return (\n        <VBtn\n          symbol={ VTabsSymbol }\n          ref={ rootEl }\n          class={[\n            'v-tab',\n            props.class,\n          ]}\n          style={ props.style }\n          tabindex={ isSelected.value ? 0 : -1 }\n          role=\"tab\"\n          aria-selected={ String(isSelected.value) }\n          active={ false }\n          { ...btnProps }\n          { ...attrs }\n          block={ props.fixed }\n          maxWidth={ props.fixed ? 300 : undefined }\n          onGroup:selected={ updateSlider }\n        >\n          {{\n            ...slots,\n            default: () => (\n              <>\n                { slots.default?.() ?? props.text }\n\n                { !props.hideSlider && (\n                  <div\n                    ref={ sliderEl }\n                    class={[\n                      'v-tab__slider',\n                      sliderColorClasses.value,\n                    ]}\n                    style={ sliderColorStyles.value }\n                  />\n                )}\n              </>\n            ),\n          }}\n        </VBtn>\n      )\n    })\n\n    return forwardRefs({}, rootEl)\n  },\n})\n\nexport type VTab = InstanceType<typeof VTab>\n"]},"metadata":{},"sourceType":"module"}
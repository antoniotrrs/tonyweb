{"ast":null,"code":"import { mergeProps as _mergeProps, createVNode as _createVNode } from \"vue\"; // Styles\n\nimport \"./VCheckbox.css\"; // Components\n\nimport { makeVCheckboxBtnProps, VCheckboxBtn } from \"./VCheckboxBtn.js\";\nimport { makeVInputProps, VInput } from \"../VInput/VInput.js\"; // Composables\n\nimport { useFocus } from \"../../composables/focus.js\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.js\"; // Utilities\n\nimport { computed, useId } from 'vue';\nimport { filterInputAttrs, genericComponent, omit, propsFactory, useRender } from \"../../util/index.js\"; // Types\n\nexport const makeVCheckboxProps = propsFactory({ ...makeVInputProps(),\n  ...omit(makeVCheckboxBtnProps(), ['inline'])\n}, 'VCheckbox');\nexport const VCheckbox = genericComponent()({\n  name: 'VCheckbox',\n  inheritAttrs: false,\n  props: makeVCheckboxProps(),\n  emits: {\n    'update:modelValue': value => true,\n    'update:focused': focused => true\n  },\n\n  setup(props, _ref) {\n    let {\n      attrs,\n      slots\n    } = _ref;\n    const model = useProxiedModel(props, 'modelValue');\n    const {\n      isFocused,\n      focus,\n      blur\n    } = useFocus(props);\n    const uid = useId();\n    const id = computed(() => props.id || `checkbox-${uid}`);\n    useRender(() => {\n      const [rootAttrs, controlAttrs] = filterInputAttrs(attrs);\n      const inputProps = VInput.filterProps(props);\n      const checkboxProps = VCheckboxBtn.filterProps(props);\n      return _createVNode(VInput, _mergeProps({\n        \"class\": ['v-checkbox', props.class]\n      }, rootAttrs, inputProps, {\n        \"modelValue\": model.value,\n        \"onUpdate:modelValue\": $event => model.value = $event,\n        \"id\": id.value,\n        \"focused\": isFocused.value,\n        \"style\": props.style\n      }), { ...slots,\n        default: _ref2 => {\n          let {\n            id,\n            messagesId,\n            isDisabled,\n            isReadonly,\n            isValid\n          } = _ref2;\n          return _createVNode(VCheckboxBtn, _mergeProps(checkboxProps, {\n            \"id\": id.value,\n            \"aria-describedby\": messagesId.value,\n            \"disabled\": isDisabled.value,\n            \"readonly\": isReadonly.value\n          }, controlAttrs, {\n            \"error\": isValid.value === false,\n            \"modelValue\": model.value,\n            \"onUpdate:modelValue\": $event => model.value = $event,\n            \"onFocus\": focus,\n            \"onBlur\": blur\n          }), slots);\n        }\n      });\n    });\n    return {};\n  }\n\n});","map":{"version":3,"mappings":"8EAAA;;AACA,yB,CAEA;;AAAA,SACSA,qBADT,EACgCC,YADhC,QAC4C,mBAD5C;AAC4C,SACnCC,eADmC,EAClBC,MADkB,QACZ,qBADY,C,CAG5C;;AAAA,SACSC,QADT,QACiB,4BADjB;AACiB,SACRC,eADQ,QACO,mCADP,C,CAGjB;;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,KAAhC;AAAqC,SAC5BC,gBAD4B,EACVC,gBADU,EACQC,IADR,EACcC,YADd,EAC4BC,SAD5B,QACqC,qBADrC,C,CAGrC;;AAOA,OAAO,MAAMC,kBAAkB,GAAGF,YAAY,CAAC,EAC7C,GAAGT,eAAe,EAD2B;AAE7C,KAAGQ,IAAI,CAACV,qBAAqB,EAAtB,EAA0B,CAAC,QAAD,CAA1B;AAFsC,CAAD,EAG3C,WAH2C,CAAvC;AAKP,OAAO,MAAMc,SAAS,GAAGL,gBAAgB,GAMQ;AAC/CM,MAAI,EAAE,WADyC;AAG/CC,cAAY,EAAE,KAHiC;AAK/CC,OAAK,EAAEJ,kBAAkB,EALsB;AAO/CK,OAAK,EAAE;AACL,yBAAsBC,KAAU,IAAK,IADhC;AAEL,sBAAmBC,OAAgB,IAAK;AAFnC,GAPwC;;AAY/CC,OAAKA,CAAEJ,KAAFI,EAAOC,IAAPD,EAA2B;AAAA,QAAlB;AAAEE,WAAF;AAASC;AAAT,QAAgBF,IAAE;AAC9B,UAAMG,KAAK,GAAGpB,eAAe,CAACY,KAAD,EAAQ,YAAR,CAA7B;AACA,UAAM;AAAES,eAAF;AAAaC,WAAb;AAAoBC;AAApB,QAA6BxB,QAAQ,CAACa,KAAD,CAA3C;AAEA,UAAMY,GAAG,GAAGtB,KAAK,EAAjB;AACA,UAAMuB,EAAE,GAAGxB,QAAQ,CAAC,MAAMW,KAAK,CAACa,EAANb,IAAY,YAAYY,GAAG,EAAlC,CAAnB;AAEAjB,aAAS,CAAC,MAAM;AACd,YAAM,CAACmB,SAAD,EAAYC,YAAZ,IAA4BxB,gBAAgB,CAACe,KAAD,CAAlD;AACA,YAAMU,UAAU,GAAG9B,MAAM,CAAC+B,WAAP/B,CAAmBc,KAAnBd,CAAnB;AACA,YAAMgC,aAAa,GAAGlC,YAAY,CAACiC,WAAbjC,CAAyBgB,KAAzBhB,CAAtB;AAEA;AAAA,iBAEW,CACL,YADK,EAELgB,KAAK,CAACmB,KAFD;AAFX,SAMSL,SANT,EAOSE,UAPT,EAOmB;AAAA,sBACLR,KAAK,CAACN,KADD;AACM,yCAAXM,KAAK,CAACN,KAANM,GAAWY,MADN;AACM,cAChBP,EAAE,CAACX,KAFO;AAEF,mBACHO,SAAS,CAACP,KAHL;AAGU,iBACjBF,KAAK,CAACqB;AAJC,OAPnB,GAWuB,EAGjB,GAAGd,KAHc;AAIjBe,eAAO,EAAEC;AAAA,cAAC;AACRV,cADQ;AAERW,sBAFQ;AAGRC,sBAHQ;AAIRC,sBAJQ;AAKRC;AALQ,cAMTJ,KANQ;AAMR,wDAEQL,aAFR,EAEqB;AAAA,kBACbL,EAAE,CAACX,KADU;AACL,gCACMsB,UAAU,CAACtB,KAFZ;AAEiB,wBACxBuB,UAAU,CAACvB,KAHJ;AAGS,wBAChBwB,UAAU,CAACxB;AAJJ,WAFrB,EAOQa,YAPR,EAOoB;AAAA,qBACTY,OAAO,CAACzB,KAARyB,KAAkB,KADT;AACc,0BACrBnB,KAAK,CAACN,KAFC;AAEI,6CAAXM,KAAK,CAACN,KAANM,GAAWY,MAFJ;AAEI,uBACXV,KAHO;AAGF,sBACNC;AAJQ,WAPpB,GAYaJ,KAZb;AAYkB;AAtBF,OAXvB;AAuCD,KA5CQ,CAATZ;AA8CA,WAAO,EAAP;AACF;;AAlE+C,CANR,CAAlC","names":["makeVCheckboxBtnProps","VCheckboxBtn","makeVInputProps","VInput","useFocus","useProxiedModel","computed","useId","filterInputAttrs","genericComponent","omit","propsFactory","useRender","makeVCheckboxProps","VCheckbox","name","inheritAttrs","props","emits","value","focused","setup","_ref","attrs","slots","model","isFocused","focus","blur","uid","id","rootAttrs","controlAttrs","inputProps","filterProps","checkboxProps","class","$event","style","default","_ref2","messagesId","isDisabled","isReadonly","isValid"],"sources":["../../../src/components/VCheckbox/VCheckbox.tsx"],"sourcesContent":["// Styles\nimport './VCheckbox.sass'\n\n// Components\nimport { makeVCheckboxBtnProps, VCheckboxBtn } from './VCheckboxBtn'\nimport { makeVInputProps, VInput } from '@/components/VInput/VInput'\n\n// Composables\nimport { useFocus } from '@/composables/focus'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed, useId } from 'vue'\nimport { filterInputAttrs, genericComponent, omit, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { VSelectionControlSlots } from '../VSelectionControl/VSelectionControl'\nimport type { VInputSlots } from '@/components/VInput/VInput'\nimport type { GenericProps } from '@/util'\n\nexport type VCheckboxSlots = Omit<VInputSlots, 'default'> & VSelectionControlSlots\n\nexport const makeVCheckboxProps = propsFactory({\n  ...makeVInputProps(),\n  ...omit(makeVCheckboxBtnProps(), ['inline']),\n}, 'VCheckbox')\n\nexport const VCheckbox = genericComponent<new <T>(\n  props: {\n    modelValue?: T | null\n    'onUpdate:modelValue'?: (value: T | null) => void\n  },\n  slots: VCheckboxSlots,\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VCheckbox',\n\n  inheritAttrs: false,\n\n  props: makeVCheckboxProps(),\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n    'update:focused': (focused: boolean) => true,\n  },\n\n  setup (props, { attrs, slots }) {\n    const model = useProxiedModel(props, 'modelValue')\n    const { isFocused, focus, blur } = useFocus(props)\n\n    const uid = useId()\n    const id = computed(() => props.id || `checkbox-${uid}`)\n\n    useRender(() => {\n      const [rootAttrs, controlAttrs] = filterInputAttrs(attrs)\n      const inputProps = VInput.filterProps(props)\n      const checkboxProps = VCheckboxBtn.filterProps(props)\n\n      return (\n        <VInput\n          class={[\n            'v-checkbox',\n            props.class,\n          ]}\n          { ...rootAttrs }\n          { ...inputProps }\n          v-model={ model.value }\n          id={ id.value }\n          focused={ isFocused.value }\n          style={ props.style }\n        >\n          {{\n            ...slots,\n            default: ({\n              id,\n              messagesId,\n              isDisabled,\n              isReadonly,\n              isValid,\n            }) => (\n              <VCheckboxBtn\n                { ...checkboxProps }\n                id={ id.value }\n                aria-describedby={ messagesId.value }\n                disabled={ isDisabled.value }\n                readonly={ isReadonly.value }\n                { ...controlAttrs }\n                error={ isValid.value === false }\n                v-model={ model.value }\n                onFocus={ focus }\n                onBlur={ blur }\n                v-slots={ slots }\n              />\n            ),\n          }}\n        </VInput>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VCheckbox = InstanceType<typeof VCheckbox>\n"]},"metadata":{},"sourceType":"module"}
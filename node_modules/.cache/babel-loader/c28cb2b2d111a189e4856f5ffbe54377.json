{"ast":null,"code":"// Utilities\nimport { computed } from 'vue';\nimport { getPropertyFromItem, propsFactory } from \"../../../util/index.js\"; // Types\n// Composables\n\nexport const makeDataIteratorItemsProps = propsFactory({\n  items: {\n    type: Array,\n    default: () => []\n  },\n  itemValue: {\n    type: [String, Array, Function],\n    default: 'id'\n  },\n  itemSelectable: {\n    type: [String, Array, Function],\n    default: null\n  },\n  returnObject: Boolean\n}, 'DataIterator-items');\nexport function transformItem(props, item) {\n  const value = props.returnObject ? item : getPropertyFromItem(item, props.itemValue);\n  const selectable = getPropertyFromItem(item, props.itemSelectable, true);\n  return {\n    type: 'item',\n    value,\n    selectable,\n    raw: item\n  };\n}\nexport function transformItems(props, items) {\n  const array = [];\n\n  for (const item of items) {\n    array.push(transformItem(props, item));\n  }\n\n  return array;\n}\nexport function useDataIteratorItems(props) {\n  const items = computed(() => transformItems(props, props.items));\n  return {\n    items\n  };\n}","map":{"version":3,"mappings":"AAAA;AACA,SAASA,QAAT,QAAyB,KAAzB;AAA8B,SACrBC,mBADqB,EACAC,YADA,QACY,wBADZ,C,CAG9B;AAiBA;;AACA,OAAO,MAAMC,0BAA0B,GAAGD,YAAY,CAAC;AACrDE,OAAK,EAAE;AACLC,QAAI,EAAEC,KADD;AAELC,WAAO,EAAEA,MAAO;AAFX,GAD8C;AAKrDC,WAAS,EAAE;AACTH,QAAI,EAAE,CAACI,MAAD,EAASH,KAAT,EAAgBI,QAAhB,CADG;AAETH,WAAO,EAAE;AAFA,GAL0C;AASrDI,gBAAc,EAAE;AACdN,QAAI,EAAE,CAACI,MAAD,EAASH,KAAT,EAAgBI,QAAhB,CADQ;AAEdH,WAAO,EAAE;AAFK,GATqC;AAarDK,cAAY,EAAEC;AAbuC,CAAD,EAcnD,oBAdmD,CAA/C;AAgBP,OAAO,SAASC,aAAT,CACLC,KADK,EAELC,IAFK,EAGa;AAClB,QAAMC,KAAK,GAAGF,KAAK,CAACH,YAANG,GAAqBC,IAArBD,GAA4Bd,mBAAmB,CAACe,IAAD,EAAOD,KAAK,CAACP,SAAb,CAA7D;AACA,QAAMU,UAAU,GAAGjB,mBAAmB,CAACe,IAAD,EAAOD,KAAK,CAACJ,cAAb,EAA6B,IAA7B,CAAtC;AAEA,SAAO;AACLN,QAAI,EAAE,MADD;AAELY,SAFK;AAGLC,cAHK;AAILC,OAAG,EAAEH;AAJA,GAAP;AAMF;AAEA,OAAO,SAASI,cAAT,CACLL,KADK,EAELX,KAFK,EAGL;AACA,QAAMiB,KAAyB,GAAG,EAAlC;;AAEA,OAAK,MAAML,IAAX,IAAmBZ,KAAnB,EAA0B;AACxBiB,SAAK,CAACC,IAAND,CAAWP,aAAa,CAACC,KAAD,EAAQC,IAAR,CAAxBK;AACF;;AAEA,SAAOA,KAAP;AACF;AAEA,OAAO,SAASE,oBAAT,CAA+BR,KAA/B,EAA6D;AAClE,QAAMX,KAAK,GAAGJ,QAAQ,CAAC,MAAMoB,cAAc,CAACL,KAAD,EAAQA,KAAK,CAACX,KAAd,CAArB,CAAtB;AAEA,SAAO;AAAEA;AAAF,GAAP;AACF","names":["computed","getPropertyFromItem","propsFactory","makeDataIteratorItemsProps","items","type","Array","default","itemValue","String","Function","itemSelectable","returnObject","Boolean","transformItem","props","item","value","selectable","raw","transformItems","array","push","useDataIteratorItems"],"sources":["../../../../src/components/VDataIterator/composables/items.ts"],"sourcesContent":["// Utilities\nimport { computed } from 'vue'\nimport { getPropertyFromItem, propsFactory } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { GroupableItem } from '@/components/VDataTable/composables/group'\nimport type { SelectableItem } from '@/components/VDataTable/composables/select'\nimport type { SelectItemKey } from '@/util'\n\nexport interface DataIteratorItemProps {\n  items: any[]\n  itemValue: SelectItemKey\n  itemSelectable: SelectItemKey\n  returnObject: boolean\n}\n\nexport interface DataIteratorItem<T = any> extends GroupableItem<T>, SelectableItem {\n  value: unknown\n}\n\n// Composables\nexport const makeDataIteratorItemsProps = propsFactory({\n  items: {\n    type: Array as PropType<DataIteratorItemProps['items']>,\n    default: () => ([]),\n  },\n  itemValue: {\n    type: [String, Array, Function] as PropType<SelectItemKey>,\n    default: 'id',\n  },\n  itemSelectable: {\n    type: [String, Array, Function] as PropType<SelectItemKey>,\n    default: null,\n  },\n  returnObject: Boolean,\n}, 'DataIterator-items')\n\nexport function transformItem (\n  props: Omit<DataIteratorItemProps, 'items'>,\n  item: any\n): DataIteratorItem {\n  const value = props.returnObject ? item : getPropertyFromItem(item, props.itemValue)\n  const selectable = getPropertyFromItem(item, props.itemSelectable, true)\n\n  return {\n    type: 'item',\n    value,\n    selectable,\n    raw: item,\n  }\n}\n\nexport function transformItems (\n  props: Omit<DataIteratorItemProps, 'items'>,\n  items: DataIteratorItemProps['items']\n) {\n  const array: DataIteratorItem[] = []\n\n  for (const item of items) {\n    array.push(transformItem(props, item))\n  }\n\n  return array\n}\n\nexport function useDataIteratorItems (props: DataIteratorItemProps) {\n  const items = computed(() => transformItems(props, props.items))\n\n  return { items }\n}\n"]},"metadata":{},"sourceType":"module"}
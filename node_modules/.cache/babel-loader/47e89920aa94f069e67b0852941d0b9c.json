{"ast":null,"code":"import { mergeProps as _mergeProps, createVNode as _createVNode, Fragment as _Fragment, vShow as _vShow, resolveDirective as _resolveDirective, withDirectives as _withDirectives } from \"vue\"; // Styles\n\nimport \"./VOverlay.css\"; // Composables\n\nimport { makeLocationStrategyProps, useLocationStrategies } from \"./locationStrategies.js\";\nimport { makeScrollStrategyProps, useScrollStrategies } from \"./scrollStrategies.js\";\nimport { makeActivatorProps, useActivator } from \"./useActivator.js\";\nimport { useBackgroundColor } from \"../../composables/color.js\";\nimport { makeComponentProps } from \"../../composables/component.js\";\nimport { makeDimensionProps, useDimension } from \"../../composables/dimensions.js\";\nimport { useHydration } from \"../../composables/hydration.js\";\nimport { makeLazyProps, useLazy } from \"../../composables/lazy.js\";\nimport { useRtl } from \"../../composables/locale.js\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.js\";\nimport { useBackButton, useRouter } from \"../../composables/router.js\";\nimport { useScopeId } from \"../../composables/scopeId.js\";\nimport { useStack } from \"../../composables/stack.js\";\nimport { useTeleport } from \"../../composables/teleport.js\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.js\";\nimport { useToggleScope } from \"../../composables/toggleScope.js\";\nimport { makeTransitionProps, MaybeTransition } from \"../../composables/transition.js\"; // Directives\n\nimport { ClickOutside } from \"../../directives/click-outside/index.js\"; // Utilities\n\nimport { computed, mergeProps, onBeforeUnmount, ref, Teleport, toRef, Transition, watch } from 'vue';\nimport { animate, convertToUnit, genericComponent, getCurrentInstance, getScrollParent, IN_BROWSER, propsFactory, standardEasing, useRender } from \"../../util/index.js\"; // Types\n\nfunction Scrim(props) {\n  const {\n    modelValue,\n    color,\n    ...rest\n  } = props;\n  return _createVNode(Transition, {\n    \"name\": \"fade-transition\",\n    \"appear\": true\n  }, {\n    default: () => [props.modelValue && _createVNode(\"div\", _mergeProps({\n      \"class\": ['v-overlay__scrim', props.color.backgroundColorClasses.value],\n      \"style\": props.color.backgroundColorStyles.value\n    }, rest), null)]\n  });\n}\n\nexport const makeVOverlayProps = propsFactory({\n  absolute: Boolean,\n  attach: [Boolean, String, Object],\n  closeOnBack: {\n    type: Boolean,\n    default: true\n  },\n  contained: Boolean,\n  contentClass: null,\n  contentProps: null,\n  disabled: Boolean,\n  opacity: [Number, String],\n  noClickAnimation: Boolean,\n  modelValue: Boolean,\n  persistent: Boolean,\n  scrim: {\n    type: [Boolean, String],\n    default: true\n  },\n  zIndex: {\n    type: [Number, String],\n    default: 2000\n  },\n  ...makeActivatorProps(),\n  ...makeComponentProps(),\n  ...makeDimensionProps(),\n  ...makeLazyProps(),\n  ...makeLocationStrategyProps(),\n  ...makeScrollStrategyProps(),\n  ...makeThemeProps(),\n  ...makeTransitionProps()\n}, 'VOverlay');\nexport const VOverlay = genericComponent()({\n  name: 'VOverlay',\n  directives: {\n    ClickOutside\n  },\n  inheritAttrs: false,\n  props: {\n    _disableGlobalStack: Boolean,\n    ...makeVOverlayProps()\n  },\n  emits: {\n    'click:outside': e => true,\n    'update:modelValue': value => true,\n    keydown: e => true,\n    afterEnter: () => true,\n    afterLeave: () => true\n  },\n\n  setup(props, _ref) {\n    let {\n      slots,\n      attrs,\n      emit\n    } = _ref;\n    const vm = getCurrentInstance('VOverlay');\n    const root = ref();\n    const scrimEl = ref();\n    const contentEl = ref();\n    const model = useProxiedModel(props, 'modelValue');\n    const isActive = computed({\n      get: () => model.value,\n      set: v => {\n        if (!(v && props.disabled)) model.value = v;\n      }\n    });\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      rtlClasses,\n      isRtl\n    } = useRtl();\n    const {\n      hasContent,\n      onAfterLeave: _onAfterLeave\n    } = useLazy(props, isActive);\n    const scrimColor = useBackgroundColor(computed(() => {\n      return typeof props.scrim === 'string' ? props.scrim : null;\n    }));\n    const {\n      globalTop,\n      localTop,\n      stackStyles\n    } = useStack(isActive, toRef(props, 'zIndex'), props._disableGlobalStack);\n    const {\n      activatorEl,\n      activatorRef,\n      target,\n      targetEl,\n      targetRef,\n      activatorEvents,\n      contentEvents,\n      scrimEvents\n    } = useActivator(props, {\n      isActive,\n      isTop: localTop,\n      contentEl\n    });\n    const {\n      teleportTarget\n    } = useTeleport(() => {\n      const target = props.attach || props.contained;\n      if (target) return target;\n      const rootNode = activatorEl?.value?.getRootNode() || vm.proxy?.$el?.getRootNode();\n      if (rootNode instanceof ShadowRoot) return rootNode;\n      return false;\n    });\n    const {\n      dimensionStyles\n    } = useDimension(props);\n    const isMounted = useHydration();\n    const {\n      scopeId\n    } = useScopeId();\n    watch(() => props.disabled, v => {\n      if (v) isActive.value = false;\n    });\n    const {\n      contentStyles,\n      updateLocation\n    } = useLocationStrategies(props, {\n      isRtl,\n      contentEl,\n      target,\n      isActive\n    });\n    useScrollStrategies(props, {\n      root,\n      contentEl,\n      targetEl,\n      isActive,\n      updateLocation\n    });\n\n    function onClickOutside(e) {\n      emit('click:outside', e);\n      if (!props.persistent) isActive.value = false;else animateClick();\n    }\n\n    function closeConditional(e) {\n      return isActive.value && globalTop.value && ( // If using scrim, only close if clicking on it rather than anything opened on top\n      !props.scrim || e.target === scrimEl.value || e instanceof MouseEvent && e.shadowTarget === scrimEl.value);\n    }\n\n    IN_BROWSER && watch(isActive, val => {\n      if (val) {\n        window.addEventListener('keydown', onKeydown);\n      } else {\n        window.removeEventListener('keydown', onKeydown);\n      }\n    }, {\n      immediate: true\n    });\n    onBeforeUnmount(() => {\n      if (!IN_BROWSER) return;\n      window.removeEventListener('keydown', onKeydown);\n    });\n\n    function onKeydown(e) {\n      if (e.key === 'Escape' && globalTop.value) {\n        if (!contentEl.value?.contains(document.activeElement)) {\n          emit('keydown', e);\n        }\n\n        if (!props.persistent) {\n          isActive.value = false;\n\n          if (contentEl.value?.contains(document.activeElement)) {\n            activatorEl.value?.focus();\n          }\n        } else animateClick();\n      }\n    }\n\n    function onKeydownSelf(e) {\n      if (e.key === 'Escape' && !globalTop.value) return;\n      emit('keydown', e);\n    }\n\n    const router = useRouter();\n    useToggleScope(() => props.closeOnBack, () => {\n      useBackButton(router, next => {\n        if (globalTop.value && isActive.value) {\n          next(false);\n          if (!props.persistent) isActive.value = false;else animateClick();\n        } else {\n          next();\n        }\n      });\n    });\n    const top = ref();\n    watch(() => isActive.value && (props.absolute || props.contained) && teleportTarget.value == null, val => {\n      if (val) {\n        const scrollParent = getScrollParent(root.value);\n\n        if (scrollParent && scrollParent !== document.scrollingElement) {\n          top.value = scrollParent.scrollTop;\n        }\n      }\n    }); // Add a quick \"bounce\" animation to the content\n\n    function animateClick() {\n      if (props.noClickAnimation) return;\n      contentEl.value && animate(contentEl.value, [{\n        transformOrigin: 'center'\n      }, {\n        transform: 'scale(1.03)'\n      }, {\n        transformOrigin: 'center'\n      }], {\n        duration: 150,\n        easing: standardEasing\n      });\n    }\n\n    function onAfterEnter() {\n      emit('afterEnter');\n    }\n\n    function onAfterLeave() {\n      _onAfterLeave();\n\n      emit('afterLeave');\n    }\n\n    useRender(() => _createVNode(_Fragment, null, [slots.activator?.({\n      isActive: isActive.value,\n      targetRef,\n      props: mergeProps({\n        ref: activatorRef\n      }, activatorEvents.value, props.activatorProps)\n    }), isMounted.value && hasContent.value && _createVNode(Teleport, {\n      \"disabled\": !teleportTarget.value,\n      \"to\": teleportTarget.value\n    }, {\n      default: () => [_createVNode(\"div\", _mergeProps({\n        \"class\": ['v-overlay', {\n          'v-overlay--absolute': props.absolute || props.contained,\n          'v-overlay--active': isActive.value,\n          'v-overlay--contained': props.contained\n        }, themeClasses.value, rtlClasses.value, props.class],\n        \"style\": [stackStyles.value, {\n          '--v-overlay-opacity': props.opacity,\n          top: convertToUnit(top.value)\n        }, props.style],\n        \"ref\": root,\n        \"onKeydown\": onKeydownSelf\n      }, scopeId, attrs), [_createVNode(Scrim, _mergeProps({\n        \"color\": scrimColor,\n        \"modelValue\": isActive.value && !!props.scrim,\n        \"ref\": scrimEl\n      }, scrimEvents.value), null), _createVNode(MaybeTransition, {\n        \"appear\": true,\n        \"persisted\": true,\n        \"transition\": props.transition,\n        \"target\": target.value,\n        \"onAfterEnter\": onAfterEnter,\n        \"onAfterLeave\": onAfterLeave\n      }, {\n        default: () => [_withDirectives(_createVNode(\"div\", _mergeProps({\n          \"ref\": contentEl,\n          \"class\": ['v-overlay__content', props.contentClass],\n          \"style\": [dimensionStyles.value, contentStyles.value]\n        }, contentEvents.value, props.contentProps), [slots.default?.({\n          isActive\n        })]), [[_vShow, isActive.value], [_resolveDirective(\"click-outside\"), {\n          handler: onClickOutside,\n          closeConditional,\n          include: () => [activatorEl.value]\n        }]])]\n      })])]\n    })]));\n    return {\n      activatorEl,\n      scrimEl,\n      target,\n      animateClick,\n      contentEl,\n      globalTop,\n      localTop,\n      updateLocation\n    };\n  }\n\n});","map":{"version":3,"mappings":"gMAAA;;AACA,wB,CAEA;;AAAA,SACSA,yBADT,EACoCC,qBADpC,QACyD,yBADzD;AACyD,SAChDC,uBADgD,EACvBC,mBADuB,QACJ,uBADI;AACJ,SAC5CC,kBAD4C,EACxBC,YADwB,QACZ,mBADY;AACZ,SAChCC,kBADgC,QACd,4BADc;AACd,SAClBC,kBADkB,QACA,gCADA;AACA,SAClBC,kBADkB,EACEC,YADF,QACc,iCADd;AACc,SAChCC,YADgC,QACpB,gCADoB;AACpB,SACZC,aADY,EACGC,OADH,QACU,2BADV;AACU,SACtBC,MADsB,QAChB,6BADgB;AAChB,SACNC,eADM,QACS,mCADT;AACS,SACfC,aADe,EACAC,SADA,QACS,6BADT;AACS,SACxBC,UADwB,QACd,8BADc;AACd,SACVC,QADU,QACF,4BADE;AACF,SACRC,WADQ,QACG,+BADH;AACG,SACXC,cADW,EACKC,YADL,QACiB,4BADjB;AACiB,SAC5BC,cAD4B,QACd,kCADc;AACd,SACdC,mBADc,EACOC,eADP,QACsB,iCADtB,C,CAGvB;;AAAA,SACSC,YADT,QACqB,yCADrB,C,CAGA;;AACA,SACEC,QADF,EAEEC,UAFF,EAGEC,eAHF,EAIEC,GAJF,EAKEC,QALF,EAMEC,KANF,EAOEC,UAPF,EAQEC,KARF,QASO,KATP;AASY,SAEVC,OAFU,EAGVC,aAHU,EAIVC,gBAJU,EAKVC,kBALU,EAMVC,eANU,EAOVC,UAPU,EAQVC,YARU,EASVC,cATU,EAUVC,SAVU,QAUD,qBAVC,C,CAaZ;;AAUA,SAASC,KAAT,CAAgBC,KAAhB,EAAmC;AACjC,QAAM;AAAEC,cAAF;AAAcC,SAAd;AAAqB,OAAGC;AAAxB,MAAiCH,KAAvC;AACA;AAAA;AAAA;AAAA;AAAAI,oBAEMJ,KAAK,CAACC,UAAND,IAAgBK;AAAA,eAEP,CACL,kBADK,EAELL,KAAK,CAACE,KAANF,CAAYM,sBAAZN,CAAmCO,KAF9B,CAFO;AAKb,eACOP,KAAK,CAACE,KAANF,CAAYQ,qBAAZR,CAAkCO;AAN5B,OAOTJ,IAPS,GAOL,IAPK,CAFtB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","names":["makeLocationStrategyProps","useLocationStrategies","makeScrollStrategyProps","useScrollStrategies","makeActivatorProps","useActivator","useBackgroundColor","makeComponentProps","makeDimensionProps","useDimension","useHydration","makeLazyProps","useLazy","useRtl","useProxiedModel","useBackButton","useRouter","useScopeId","useStack","useTeleport","makeThemeProps","provideTheme","useToggleScope","makeTransitionProps","MaybeTransition","ClickOutside","computed","mergeProps","onBeforeUnmount","ref","Teleport","toRef","Transition","watch","animate","convertToUnit","genericComponent","getCurrentInstance","getScrollParent","IN_BROWSER","propsFactory","standardEasing","useRender","Scrim","props","modelValue","color","rest","default","_createVNode","backgroundColorClasses","value","backgroundColorStyles","makeVOverlayProps","absolute","Boolean","attach","String","Object","closeOnBack","type","contained","contentClass","contentProps","disabled","opacity","Number","noClickAnimation","persistent","scrim","zIndex","VOverlay","name","directives","inheritAttrs","_disableGlobalStack","emits","e","keydown","afterEnter","afterLeave","setup","_ref","slots","attrs","emit","vm","root","scrimEl","contentEl","model","isActive","get","set","v","themeClasses","rtlClasses","isRtl","hasContent","onAfterLeave","_onAfterLeave","scrimColor","globalTop","localTop","stackStyles","activatorEl","activatorRef","target","targetEl","targetRef","activatorEvents","contentEvents","scrimEvents","isTop","teleportTarget","rootNode","getRootNode","proxy","$el","ShadowRoot","dimensionStyles","isMounted","scopeId","contentStyles","updateLocation","onClickOutside","animateClick","closeConditional","MouseEvent","shadowTarget","val","window","addEventListener","onKeydown","removeEventListener","immediate","key","contains","document","activeElement","focus","onKeydownSelf","router","next","top","scrollParent","scrollingElement","scrollTop","transformOrigin","transform","duration","easing","onAfterEnter","activator","activatorProps","class","style","transition","handler","include"],"sources":["../../../src/components/VOverlay/VOverlay.tsx"],"sourcesContent":["// Styles\nimport './VOverlay.sass'\n\n// Composables\nimport { makeLocationStrategyProps, useLocationStrategies } from './locationStrategies'\nimport { makeScrollStrategyProps, useScrollStrategies } from './scrollStrategies'\nimport { makeActivatorProps, useActivator } from './useActivator'\nimport { useBackgroundColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { useHydration } from '@/composables/hydration'\nimport { makeLazyProps, useLazy } from '@/composables/lazy'\nimport { useRtl } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useBackButton, useRouter } from '@/composables/router'\nimport { useScopeId } from '@/composables/scopeId'\nimport { useStack } from '@/composables/stack'\nimport { useTeleport } from '@/composables/teleport'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { useToggleScope } from '@/composables/toggleScope'\nimport { makeTransitionProps, MaybeTransition } from '@/composables/transition'\n\n// Directives\nimport { ClickOutside } from '@/directives/click-outside'\n\n// Utilities\nimport {\n  computed,\n  mergeProps,\n  onBeforeUnmount,\n  ref,\n  Teleport,\n  toRef,\n  Transition,\n  watch,\n} from 'vue'\nimport {\n  animate,\n  convertToUnit,\n  genericComponent,\n  getCurrentInstance,\n  getScrollParent,\n  IN_BROWSER,\n  propsFactory,\n  standardEasing,\n  useRender,\n} from '@/util'\n\n// Types\nimport type { PropType, Ref } from 'vue'\nimport type { BackgroundColorData } from '@/composables/color'\nimport type { TemplateRef } from '@/util'\n\ninterface ScrimProps {\n  [key: string]: unknown\n  modelValue: boolean\n  color: BackgroundColorData\n}\nfunction Scrim (props: ScrimProps) {\n  const { modelValue, color, ...rest } = props\n  return (\n    <Transition name=\"fade-transition\" appear>\n      { props.modelValue && (\n        <div\n          class={[\n            'v-overlay__scrim',\n            props.color.backgroundColorClasses.value,\n          ]}\n          style={ props.color.backgroundColorStyles.value }\n          { ...rest }\n        />\n      )}\n    </Transition>\n  )\n}\n\nexport type OverlaySlots = {\n  default: { isActive: Ref<boolean> }\n  activator: { isActive: boolean, props: Record<string, any>, targetRef: TemplateRef }\n}\n\nexport const makeVOverlayProps = propsFactory({\n  absolute: Boolean,\n  attach: [Boolean, String, Object] as PropType<boolean | string | Element>,\n  closeOnBack: {\n    type: Boolean,\n    default: true,\n  },\n  contained: Boolean,\n  contentClass: null,\n  contentProps: null,\n  disabled: Boolean,\n  opacity: [Number, String],\n  noClickAnimation: Boolean,\n  modelValue: Boolean,\n  persistent: Boolean,\n  scrim: {\n    type: [Boolean, String],\n    default: true,\n  },\n  zIndex: {\n    type: [Number, String],\n    default: 2000,\n  },\n\n  ...makeActivatorProps(),\n  ...makeComponentProps(),\n  ...makeDimensionProps(),\n  ...makeLazyProps(),\n  ...makeLocationStrategyProps(),\n  ...makeScrollStrategyProps(),\n  ...makeThemeProps(),\n  ...makeTransitionProps(),\n}, 'VOverlay')\n\nexport const VOverlay = genericComponent<OverlaySlots>()({\n  name: 'VOverlay',\n\n  directives: { ClickOutside },\n\n  inheritAttrs: false,\n\n  props: {\n    _disableGlobalStack: Boolean,\n\n    ...makeVOverlayProps(),\n  },\n\n  emits: {\n    'click:outside': (e: MouseEvent) => true,\n    'update:modelValue': (value: boolean) => true,\n    keydown: (e: KeyboardEvent) => true,\n    afterEnter: () => true,\n    afterLeave: () => true,\n  },\n\n  setup (props, { slots, attrs, emit }) {\n    const vm = getCurrentInstance('VOverlay')\n    const root = ref<HTMLElement>()\n    const scrimEl = ref<HTMLElement>()\n    const contentEl = ref<HTMLElement>()\n    const model = useProxiedModel(props, 'modelValue')\n    const isActive = computed({\n      get: () => model.value,\n      set: v => {\n        if (!(v && props.disabled)) model.value = v\n      },\n    })\n    const { themeClasses } = provideTheme(props)\n    const { rtlClasses, isRtl } = useRtl()\n    const { hasContent, onAfterLeave: _onAfterLeave } = useLazy(props, isActive)\n    const scrimColor = useBackgroundColor(computed(() => {\n      return typeof props.scrim === 'string' ? props.scrim : null\n    }))\n    const { globalTop, localTop, stackStyles } = useStack(isActive, toRef(props, 'zIndex'), props._disableGlobalStack)\n    const {\n      activatorEl, activatorRef,\n      target, targetEl, targetRef,\n      activatorEvents,\n      contentEvents,\n      scrimEvents,\n    } = useActivator(props, { isActive, isTop: localTop, contentEl })\n    const { teleportTarget } = useTeleport(() => {\n      const target = props.attach || props.contained\n      if (target) return target\n      const rootNode = activatorEl?.value?.getRootNode() || vm.proxy?.$el?.getRootNode()\n      if (rootNode instanceof ShadowRoot) return rootNode\n      return false\n    })\n    const { dimensionStyles } = useDimension(props)\n    const isMounted = useHydration()\n    const { scopeId } = useScopeId()\n\n    watch(() => props.disabled, v => {\n      if (v) isActive.value = false\n    })\n\n    const { contentStyles, updateLocation } = useLocationStrategies(props, {\n      isRtl,\n      contentEl,\n      target,\n      isActive,\n    })\n    useScrollStrategies(props, {\n      root,\n      contentEl,\n      targetEl,\n      isActive,\n      updateLocation,\n    })\n\n    function onClickOutside (e: MouseEvent) {\n      emit('click:outside', e)\n\n      if (!props.persistent) isActive.value = false\n      else animateClick()\n    }\n\n    function closeConditional (e: Event) {\n      return isActive.value && globalTop.value && (\n        // If using scrim, only close if clicking on it rather than anything opened on top\n        !props.scrim || e.target === scrimEl.value || (e instanceof MouseEvent && e.shadowTarget === scrimEl.value)\n      )\n    }\n\n    IN_BROWSER && watch(isActive, val => {\n      if (val) {\n        window.addEventListener('keydown', onKeydown)\n      } else {\n        window.removeEventListener('keydown', onKeydown)\n      }\n    }, { immediate: true })\n\n    onBeforeUnmount(() => {\n      if (!IN_BROWSER) return\n\n      window.removeEventListener('keydown', onKeydown)\n    })\n\n    function onKeydown (e: KeyboardEvent) {\n      if (e.key === 'Escape' && globalTop.value) {\n        if (!contentEl.value?.contains(document.activeElement)) {\n          emit('keydown', e)\n        }\n        if (!props.persistent) {\n          isActive.value = false\n          if (contentEl.value?.contains(document.activeElement)) {\n            activatorEl.value?.focus()\n          }\n        } else animateClick()\n      }\n    }\n    function onKeydownSelf (e: KeyboardEvent) {\n      if (e.key === 'Escape' && !globalTop.value) return\n\n      emit('keydown', e)\n    }\n\n    const router = useRouter()\n    useToggleScope(() => props.closeOnBack, () => {\n      useBackButton(router, next => {\n        if (globalTop.value && isActive.value) {\n          next(false)\n          if (!props.persistent) isActive.value = false\n          else animateClick()\n        } else {\n          next()\n        }\n      })\n    })\n\n    const top = ref<number>()\n    watch(() => isActive.value && (props.absolute || props.contained) && teleportTarget.value == null, val => {\n      if (val) {\n        const scrollParent = getScrollParent(root.value)\n        if (scrollParent && scrollParent !== document.scrollingElement) {\n          top.value = scrollParent.scrollTop\n        }\n      }\n    })\n\n    // Add a quick \"bounce\" animation to the content\n    function animateClick () {\n      if (props.noClickAnimation) return\n\n      contentEl.value && animate(contentEl.value, [\n        { transformOrigin: 'center' },\n        { transform: 'scale(1.03)' },\n        { transformOrigin: 'center' },\n      ], {\n        duration: 150,\n        easing: standardEasing,\n      })\n    }\n\n    function onAfterEnter () {\n      emit('afterEnter')\n    }\n\n    function onAfterLeave () {\n      _onAfterLeave()\n      emit('afterLeave')\n    }\n\n    useRender(() => (\n      <>\n        { slots.activator?.({\n          isActive: isActive.value,\n          targetRef,\n          props: mergeProps({\n            ref: activatorRef,\n          }, activatorEvents.value, props.activatorProps),\n        })}\n\n        { isMounted.value && hasContent.value && (\n          <Teleport\n            disabled={ !teleportTarget.value }\n            to={ teleportTarget.value }\n          >\n            <div\n              class={[\n                'v-overlay',\n                {\n                  'v-overlay--absolute': props.absolute || props.contained,\n                  'v-overlay--active': isActive.value,\n                  'v-overlay--contained': props.contained,\n                },\n                themeClasses.value,\n                rtlClasses.value,\n                props.class,\n              ]}\n              style={[\n                stackStyles.value,\n                {\n                  '--v-overlay-opacity': props.opacity,\n                  top: convertToUnit(top.value),\n                },\n                props.style,\n              ]}\n              ref={ root }\n              onKeydown={ onKeydownSelf }\n              { ...scopeId }\n              { ...attrs }\n            >\n              <Scrim\n                color={ scrimColor }\n                modelValue={ isActive.value && !!props.scrim }\n                ref={ scrimEl }\n                { ...scrimEvents.value }\n              />\n              <MaybeTransition\n                appear\n                persisted\n                transition={ props.transition }\n                target={ target.value }\n                onAfterEnter={ onAfterEnter }\n                onAfterLeave={ onAfterLeave }\n              >\n                <div\n                  ref={ contentEl }\n                  v-show={ isActive.value }\n                  v-click-outside={{ handler: onClickOutside, closeConditional, include: () => [activatorEl.value] }}\n                  class={[\n                    'v-overlay__content',\n                    props.contentClass,\n                  ]}\n                  style={[\n                    dimensionStyles.value,\n                    contentStyles.value,\n                  ]}\n                  { ...contentEvents.value }\n                  { ...props.contentProps }\n                >\n                  { slots.default?.({ isActive }) }\n                </div>\n              </MaybeTransition>\n            </div>\n          </Teleport>\n        )}\n      </>\n    ))\n\n    return {\n      activatorEl,\n      scrimEl,\n      target,\n      animateClick,\n      contentEl,\n      globalTop,\n      localTop,\n      updateLocation,\n    }\n  },\n})\n\nexport type VOverlay = InstanceType<typeof VOverlay>\n"]},"metadata":{},"sourceType":"module"}
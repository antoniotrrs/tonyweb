{"ast":null,"code":"import { Fragment as _Fragment, mergeProps as _mergeProps, createVNode as _createVNode } from \"vue\"; // Styles\n\nimport \"./VFileInput.css\"; // Components\n\nimport { VChip } from \"../VChip/index.js\";\nimport { VCounter } from \"../VCounter/index.js\";\nimport { VField } from \"../VField/index.js\";\nimport { makeVFieldProps } from \"../VField/VField.js\";\nimport { makeVInputProps, VInput } from \"../VInput/VInput.js\"; // Composables\n\nimport { useFocus } from \"../../composables/focus.js\";\nimport { forwardRefs } from \"../../composables/forwardRefs.js\";\nimport { useLocale } from \"../../composables/locale.js\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.js\"; // Utilities\n\nimport { computed, nextTick, ref, watch } from 'vue';\nimport { callEvent, filterInputAttrs, genericComponent, humanReadableFileSize, propsFactory, useRender, wrapInArray } from \"../../util/index.js\"; // Types\n\nexport const makeVFileInputProps = propsFactory({\n  chips: Boolean,\n  counter: Boolean,\n  counterSizeString: {\n    type: String,\n    default: '$vuetify.fileInput.counterSize'\n  },\n  counterString: {\n    type: String,\n    default: '$vuetify.fileInput.counter'\n  },\n  hideInput: Boolean,\n  multiple: Boolean,\n  showSize: {\n    type: [Boolean, Number, String],\n    default: false,\n    validator: v => {\n      return typeof v === 'boolean' || [1000, 1024].includes(Number(v));\n    }\n  },\n  ...makeVInputProps({\n    prependIcon: '$file'\n  }),\n  modelValue: {\n    type: [Array, Object],\n    default: props => props.multiple ? [] : null,\n    validator: val => {\n      return wrapInArray(val).every(v => v != null && typeof v === 'object');\n    }\n  },\n  ...makeVFieldProps({\n    clearable: true\n  })\n}, 'VFileInput');\nexport const VFileInput = genericComponent()({\n  name: 'VFileInput',\n  inheritAttrs: false,\n  props: makeVFileInputProps(),\n  emits: {\n    'click:control': e => true,\n    'mousedown:control': e => true,\n    'update:focused': focused => true,\n    'update:modelValue': files => true\n  },\n\n  setup(props, _ref) {\n    let {\n      attrs,\n      emit,\n      slots\n    } = _ref;\n    const {\n      t\n    } = useLocale();\n    const model = useProxiedModel(props, 'modelValue', props.modelValue, val => wrapInArray(val), val => !props.multiple && Array.isArray(val) ? val[0] : val);\n    const {\n      isFocused,\n      focus,\n      blur\n    } = useFocus(props);\n    const base = computed(() => typeof props.showSize !== 'boolean' ? props.showSize : undefined);\n    const totalBytes = computed(() => (model.value ?? []).reduce((bytes, _ref2) => {\n      let {\n        size = 0\n      } = _ref2;\n      return bytes + size;\n    }, 0));\n    const totalBytesReadable = computed(() => humanReadableFileSize(totalBytes.value, base.value));\n    const fileNames = computed(() => (model.value ?? []).map(file => {\n      const {\n        name = '',\n        size = 0\n      } = file;\n      return !props.showSize ? name : `${name} (${humanReadableFileSize(size, base.value)})`;\n    }));\n    const counterValue = computed(() => {\n      const fileCount = model.value?.length ?? 0;\n      if (props.showSize) return t(props.counterSizeString, fileCount, totalBytesReadable.value);else return t(props.counterString, fileCount);\n    });\n    const vInputRef = ref();\n    const vFieldRef = ref();\n    const inputRef = ref();\n    const isActive = computed(() => isFocused.value || props.active);\n    const isPlainOrUnderlined = computed(() => ['plain', 'underlined'].includes(props.variant));\n\n    function onFocus() {\n      if (inputRef.value !== document.activeElement) {\n        inputRef.value?.focus();\n      }\n\n      if (!isFocused.value) focus();\n    }\n\n    function onClickPrepend(e) {\n      inputRef.value?.click();\n    }\n\n    function onControlMousedown(e) {\n      emit('mousedown:control', e);\n    }\n\n    function onControlClick(e) {\n      inputRef.value?.click();\n      emit('click:control', e);\n    }\n\n    function onClear(e) {\n      e.stopPropagation();\n      onFocus();\n      nextTick(() => {\n        model.value = [];\n        callEvent(props['onClick:clear'], e);\n      });\n    }\n\n    function onDragover(e) {\n      e.preventDefault();\n    }\n\n    function onDrop(e) {\n      e.preventDefault();\n      if (!e.dataTransfer) return;\n      model.value = [...(e.dataTransfer.files ?? [])];\n    }\n\n    watch(model, newValue => {\n      const hasModelReset = !Array.isArray(newValue) || !newValue.length;\n\n      if (hasModelReset && inputRef.value) {\n        inputRef.value.value = '';\n      }\n    });\n    useRender(() => {\n      const hasCounter = !!(slots.counter || props.counter);\n      const hasDetails = !!(hasCounter || slots.details);\n      const [rootAttrs, inputAttrs] = filterInputAttrs(attrs);\n      const {\n        modelValue: _,\n        ...inputProps\n      } = VInput.filterProps(props);\n      const fieldProps = VField.filterProps(props);\n      return _createVNode(VInput, _mergeProps({\n        \"ref\": vInputRef,\n        \"modelValue\": props.multiple ? model.value : model.value[0],\n        \"class\": ['v-file-input', {\n          'v-file-input--chips': !!props.chips,\n          'v-file-input--hide': props.hideInput,\n          'v-input--plain-underlined': isPlainOrUnderlined.value\n        }, props.class],\n        \"style\": props.style,\n        \"onClick:prepend\": onClickPrepend\n      }, rootAttrs, inputProps, {\n        \"centerAffix\": !isPlainOrUnderlined.value,\n        \"focused\": isFocused.value\n      }), { ...slots,\n        default: _ref3 => {\n          let {\n            id,\n            isDisabled,\n            isDirty,\n            isReadonly,\n            isValid\n          } = _ref3;\n          return _createVNode(VField, _mergeProps({\n            \"ref\": vFieldRef,\n            \"prepend-icon\": props.prependIcon,\n            \"onMousedown\": onControlMousedown,\n            \"onClick\": onControlClick,\n            \"onClick:clear\": onClear,\n            \"onClick:prependInner\": props['onClick:prependInner'],\n            \"onClick:appendInner\": props['onClick:appendInner']\n          }, fieldProps, {\n            \"id\": id.value,\n            \"active\": isActive.value || isDirty.value,\n            \"dirty\": isDirty.value || props.dirty,\n            \"disabled\": isDisabled.value,\n            \"focused\": isFocused.value,\n            \"error\": isValid.value === false,\n            \"onDragover\": onDragover,\n            \"onDrop\": onDrop\n          }), { ...slots,\n            default: _ref4 => {\n              let {\n                props: {\n                  class: fieldClass,\n                  ...slotProps\n                }\n              } = _ref4;\n              return _createVNode(_Fragment, null, [_createVNode(\"input\", _mergeProps({\n                \"ref\": inputRef,\n                \"type\": \"file\",\n                \"readonly\": isReadonly.value,\n                \"disabled\": isDisabled.value,\n                \"multiple\": props.multiple,\n                \"name\": props.name,\n                \"onClick\": e => {\n                  e.stopPropagation();\n                  if (isReadonly.value) e.preventDefault();\n                  onFocus();\n                },\n                \"onChange\": e => {\n                  if (!e.target) return;\n                  const target = e.target;\n                  model.value = [...(target.files ?? [])];\n                },\n                \"onFocus\": onFocus,\n                \"onBlur\": blur\n              }, slotProps, inputAttrs), null), _createVNode(\"div\", {\n                \"class\": fieldClass\n              }, [!!model.value?.length && !props.hideInput && (slots.selection ? slots.selection({\n                fileNames: fileNames.value,\n                totalBytes: totalBytes.value,\n                totalBytesReadable: totalBytesReadable.value\n              }) : props.chips ? fileNames.value.map(text => _createVNode(VChip, {\n                \"key\": text,\n                \"size\": \"small\",\n                \"text\": text\n              }, null)) : fileNames.value.join(', '))])]);\n            }\n          });\n        },\n        details: hasDetails ? slotProps => _createVNode(_Fragment, null, [slots.details?.(slotProps), hasCounter && _createVNode(_Fragment, null, [_createVNode(\"span\", null, null), _createVNode(VCounter, {\n          \"active\": !!model.value?.length,\n          \"value\": counterValue.value,\n          \"disabled\": props.disabled\n        }, slots.counter)])]) : undefined\n      });\n    });\n    return forwardRefs({}, vInputRef, vFieldRef, inputRef);\n  }\n\n});","map":{"version":3,"mappings":"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","names":["VChip","VCounter","VField","makeVFieldProps","makeVInputProps","VInput","useFocus","forwardRefs","useLocale","useProxiedModel","computed","nextTick","ref","watch","callEvent","filterInputAttrs","genericComponent","humanReadableFileSize","propsFactory","useRender","wrapInArray","makeVFileInputProps","chips","Boolean","counter","counterSizeString","type","String","default","counterString","hideInput","multiple","showSize","Number","validator","v","includes","prependIcon","modelValue","Array","Object","props","val","every","clearable","VFileInput","name","inheritAttrs","emits","e","focused","files","setup","_ref","attrs","emit","slots","t","model","isArray","isFocused","focus","blur","base","undefined","totalBytes","value","reduce","bytes","_ref2","size","totalBytesReadable","fileNames","map","file","counterValue","fileCount","length","vInputRef","vFieldRef","inputRef","isActive","active","isPlainOrUnderlined","variant","onFocus","document","activeElement","onClickPrepend","click","onControlMousedown","onControlClick","onClear","stopPropagation","onDragover","preventDefault","onDrop","dataTransfer","newValue","hasModelReset","hasCounter","hasDetails","details","rootAttrs","inputAttrs","_","inputProps","filterProps","fieldProps","class","style","_ref3","id","isDisabled","isDirty","isReadonly","isValid","dirty","_ref4","fieldClass","slotProps","target","_createVNode","selection","text","join","disabled"],"sources":["../../../src/components/VFileInput/VFileInput.tsx"],"sourcesContent":["// Styles\nimport './VFileInput.sass'\n\n// Components\nimport { VChip } from '@/components/VChip'\nimport { VCounter } from '@/components/VCounter'\nimport { VField } from '@/components/VField'\nimport { makeVFieldProps } from '@/components/VField/VField'\nimport { makeVInputProps, VInput } from '@/components/VInput/VInput'\n\n// Composables\nimport { useFocus } from '@/composables/focus'\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed, nextTick, ref, watch } from 'vue'\nimport {\n  callEvent,\n  filterInputAttrs,\n  genericComponent,\n  humanReadableFileSize,\n  propsFactory,\n  useRender,\n  wrapInArray,\n} from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { VFieldSlots } from '@/components/VField/VField'\nimport type { VInputSlots } from '@/components/VInput/VInput'\n\nexport type VFileInputSlots = VInputSlots & VFieldSlots & {\n  counter: never\n  selection: {\n    fileNames: string[]\n    totalBytes: number\n    totalBytesReadable: string\n  }\n}\n\nexport const makeVFileInputProps = propsFactory({\n  chips: Boolean,\n  counter: Boolean,\n  counterSizeString: {\n    type: String,\n    default: '$vuetify.fileInput.counterSize',\n  },\n  counterString: {\n    type: String,\n    default: '$vuetify.fileInput.counter',\n  },\n  hideInput: Boolean,\n  multiple: Boolean,\n  showSize: {\n    type: [Boolean, Number, String] as PropType<boolean | 1000 | 1024>,\n    default: false,\n    validator: (v: boolean | number) => {\n      return (\n        typeof v === 'boolean' ||\n        [1000, 1024].includes(Number(v))\n      )\n    },\n  },\n\n  ...makeVInputProps({ prependIcon: '$file' }),\n\n  modelValue: {\n    type: [Array, Object] as PropType<File[] | File | null>,\n    default: (props: any) => props.multiple ? [] : null,\n    validator: (val: any) => {\n      return wrapInArray(val).every(v => v != null && typeof v === 'object')\n    },\n  },\n\n  ...makeVFieldProps({ clearable: true }),\n}, 'VFileInput')\n\nexport const VFileInput = genericComponent<VFileInputSlots>()({\n  name: 'VFileInput',\n\n  inheritAttrs: false,\n\n  props: makeVFileInputProps(),\n\n  emits: {\n    'click:control': (e: MouseEvent) => true,\n    'mousedown:control': (e: MouseEvent) => true,\n    'update:focused': (focused: boolean) => true,\n    'update:modelValue': (files: File | File[]) => true,\n  },\n\n  setup (props, { attrs, emit, slots }) {\n    const { t } = useLocale()\n    const model = useProxiedModel(\n      props,\n      'modelValue',\n      props.modelValue,\n      val => wrapInArray(val),\n      val => (!props.multiple && Array.isArray(val)) ? val[0] : val,\n    )\n    const { isFocused, focus, blur } = useFocus(props)\n    const base = computed(() => typeof props.showSize !== 'boolean' ? props.showSize : undefined)\n    const totalBytes = computed(() => (model.value ?? []).reduce((bytes, { size = 0 }) => bytes + size, 0))\n    const totalBytesReadable = computed(() => humanReadableFileSize(totalBytes.value, base.value))\n\n    const fileNames = computed(() => (model.value ?? []).map(file => {\n      const { name = '', size = 0 } = file\n\n      return !props.showSize\n        ? name\n        : `${name} (${humanReadableFileSize(size, base.value)})`\n    }))\n\n    const counterValue = computed(() => {\n      const fileCount = model.value?.length ?? 0\n      if (props.showSize) return t(props.counterSizeString, fileCount, totalBytesReadable.value)\n      else return t(props.counterString, fileCount)\n    })\n    const vInputRef = ref<VInput>()\n    const vFieldRef = ref<VInput>()\n    const inputRef = ref<HTMLInputElement>()\n    const isActive = computed(() => (\n      isFocused.value ||\n      props.active\n    ))\n    const isPlainOrUnderlined = computed(() => ['plain', 'underlined'].includes(props.variant))\n    function onFocus () {\n      if (inputRef.value !== document.activeElement) {\n        inputRef.value?.focus()\n      }\n\n      if (!isFocused.value) focus()\n    }\n    function onClickPrepend (e: MouseEvent) {\n      inputRef.value?.click()\n    }\n    function onControlMousedown (e: MouseEvent) {\n      emit('mousedown:control', e)\n    }\n    function onControlClick (e: MouseEvent) {\n      inputRef.value?.click()\n\n      emit('click:control', e)\n    }\n    function onClear (e: MouseEvent) {\n      e.stopPropagation()\n\n      onFocus()\n\n      nextTick(() => {\n        model.value = []\n\n        callEvent(props['onClick:clear'], e)\n      })\n    }\n    function onDragover (e: DragEvent) {\n      e.preventDefault()\n    }\n    function onDrop (e: DragEvent) {\n      e.preventDefault()\n\n      if (!e.dataTransfer) return\n\n      model.value = [...e.dataTransfer.files ?? []]\n    }\n\n    watch(model, newValue => {\n      const hasModelReset = !Array.isArray(newValue) || !newValue.length\n\n      if (hasModelReset && inputRef.value) {\n        inputRef.value.value = ''\n      }\n    })\n\n    useRender(() => {\n      const hasCounter = !!(slots.counter || props.counter)\n      const hasDetails = !!(hasCounter || slots.details)\n      const [rootAttrs, inputAttrs] = filterInputAttrs(attrs)\n      const { modelValue: _, ...inputProps } = VInput.filterProps(props)\n      const fieldProps = VField.filterProps(props)\n\n      return (\n        <VInput\n          ref={ vInputRef }\n          modelValue={ props.multiple ? model.value : model.value[0] }\n          class={[\n            'v-file-input',\n            {\n              'v-file-input--chips': !!props.chips,\n              'v-file-input--hide': props.hideInput,\n              'v-input--plain-underlined': isPlainOrUnderlined.value,\n            },\n            props.class,\n          ]}\n          style={ props.style }\n          onClick:prepend={ onClickPrepend }\n          { ...rootAttrs }\n          { ...inputProps }\n          centerAffix={ !isPlainOrUnderlined.value }\n          focused={ isFocused.value }\n        >\n          {{\n            ...slots,\n            default: ({\n              id,\n              isDisabled,\n              isDirty,\n              isReadonly,\n              isValid,\n            }) => (\n              <VField\n                ref={ vFieldRef }\n                prepend-icon={ props.prependIcon }\n                onMousedown={ onControlMousedown }\n                onClick={ onControlClick }\n                onClick:clear={ onClear }\n                onClick:prependInner={ props['onClick:prependInner'] }\n                onClick:appendInner={ props['onClick:appendInner'] }\n                { ...fieldProps }\n                id={ id.value }\n                active={ isActive.value || isDirty.value }\n                dirty={ isDirty.value || props.dirty }\n                disabled={ isDisabled.value }\n                focused={ isFocused.value }\n                error={ isValid.value === false }\n                onDragover={ onDragover }\n                onDrop={ onDrop }\n              >\n                {{\n                  ...slots,\n                  default: ({\n                    props: { class: fieldClass, ...slotProps },\n                  }) => (\n                    <>\n                      <input\n                        ref={ inputRef }\n                        type=\"file\"\n                        readonly={ isReadonly.value }\n                        disabled={ isDisabled.value }\n                        multiple={ props.multiple }\n                        name={ props.name }\n                        onClick={ e => {\n                          e.stopPropagation()\n\n                          if (isReadonly.value) e.preventDefault()\n\n                          onFocus()\n                        }}\n                        onChange={ e => {\n                          if (!e.target) return\n\n                          const target = e.target as HTMLInputElement\n                          model.value = [...target.files ?? []]\n                        }}\n                        onFocus={ onFocus }\n                        onBlur={ blur }\n                        { ...slotProps }\n                        { ...inputAttrs }\n                      />\n\n                      <div class={ fieldClass }>\n                        { !!model.value?.length && !props.hideInput && (\n                          slots.selection ? slots.selection({\n                            fileNames: fileNames.value,\n                            totalBytes: totalBytes.value,\n                            totalBytesReadable: totalBytesReadable.value,\n                          })\n                          : props.chips ? fileNames.value.map(text => (\n                            <VChip\n                              key={ text }\n                              size=\"small\"\n                              text={ text }\n                            />\n                          ))\n                          : fileNames.value.join(', ')\n                        )}\n                      </div>\n                    </>\n                  ),\n                }}\n              </VField>\n            ),\n            details: hasDetails ? slotProps => (\n              <>\n                { slots.details?.(slotProps) }\n\n                { hasCounter && (\n                  <>\n                    <span />\n\n                    <VCounter\n                      active={ !!model.value?.length }\n                      value={ counterValue.value }\n                      disabled={ props.disabled }\n                      v-slots:default={ slots.counter }\n                    />\n                  </>\n                )}\n              </>\n            ) : undefined,\n          }}\n        </VInput>\n      )\n    })\n\n    return forwardRefs({}, vInputRef, vFieldRef, inputRef)\n  },\n})\n\nexport type VFileInput = InstanceType<typeof VFileInput>\n"]},"metadata":{},"sourceType":"module"}
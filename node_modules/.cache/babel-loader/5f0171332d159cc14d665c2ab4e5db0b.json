{"ast":null,"code":"import { Fragment as _Fragment, createVNode as _createVNode, mergeProps as _mergeProps, createTextVNode as _createTextVNode } from \"vue\"; // Styles\n\nimport \"./VCombobox.css\"; // Components\n\nimport { VAvatar } from \"../VAvatar/index.js\";\nimport { VCheckboxBtn } from \"../VCheckbox/index.js\";\nimport { VChip } from \"../VChip/index.js\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.js\";\nimport { VIcon } from \"../VIcon/index.js\";\nimport { VList, VListItem } from \"../VList/index.js\";\nimport { VMenu } from \"../VMenu/index.js\";\nimport { makeSelectProps } from \"../VSelect/VSelect.js\";\nimport { VTextField } from \"../VTextField/index.js\";\nimport { makeVTextFieldProps } from \"../VTextField/VTextField.js\";\nimport { VVirtualScroll } from \"../VVirtualScroll/index.js\"; // Composables\n\nimport { useScrolling } from \"../VSelect/useScrolling.js\";\nimport { useTextColor } from \"../../composables/color.js\";\nimport { highlightResult, makeFilterProps, useFilter } from \"../../composables/filter.js\";\nimport { useForm } from \"../../composables/form.js\";\nimport { forwardRefs } from \"../../composables/forwardRefs.js\";\nimport { transformItem, useItems } from \"../../composables/list-items.js\";\nimport { useLocale } from \"../../composables/locale.js\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.js\";\nimport { makeTransitionProps } from \"../../composables/transition.js\"; // Utilities\n\nimport { computed, mergeProps, nextTick, ref, shallowRef, watch } from 'vue';\nimport { checkPrintable, deepEqual, ensureValidVNode, genericComponent, IN_BROWSER, isComposingIgnoreKey, noop, omit, propsFactory, useRender, wrapInArray } from \"../../util/index.js\"; // Types\n\nexport const makeVComboboxProps = propsFactory({\n  autoSelectFirst: {\n    type: [Boolean, String]\n  },\n  clearOnSelect: {\n    type: Boolean,\n    default: true\n  },\n  delimiters: Array,\n  ...makeFilterProps({\n    filterKeys: ['title']\n  }),\n  ...makeSelectProps({\n    hideNoData: true,\n    returnObject: true\n  }),\n  ...omit(makeVTextFieldProps({\n    modelValue: null,\n    role: 'combobox'\n  }), ['validationValue', 'dirty', 'appendInnerIcon']),\n  ...makeTransitionProps({\n    transition: false\n  })\n}, 'VCombobox');\nexport const VCombobox = genericComponent()({\n  name: 'VCombobox',\n  props: makeVComboboxProps(),\n  emits: {\n    'update:focused': focused => true,\n    'update:modelValue': value => true,\n    'update:search': value => true,\n    'update:menu': value => true\n  },\n\n  setup(props, _ref) {\n    let {\n      emit,\n      slots\n    } = _ref;\n    const {\n      t\n    } = useLocale();\n    const vTextFieldRef = ref();\n    const isFocused = shallowRef(false);\n    const isPristine = shallowRef(true);\n    const listHasFocus = shallowRef(false);\n    const vMenuRef = ref();\n    const vVirtualScrollRef = ref();\n    const selectionIndex = shallowRef(-1);\n    let cleared = false;\n    const color = computed(() => vTextFieldRef.value?.color);\n    const {\n      items,\n      transformIn,\n      transformOut\n    } = useItems(props);\n    const {\n      textColorClasses,\n      textColorStyles\n    } = useTextColor(color);\n    const model = useProxiedModel(props, 'modelValue', [], v => transformIn(wrapInArray(v)), v => {\n      const transformed = transformOut(v);\n      return props.multiple ? transformed : transformed[0] ?? null;\n    });\n    const form = useForm(props);\n    const hasChips = computed(() => !!(props.chips || slots.chip));\n    const hasSelectionSlot = computed(() => hasChips.value || !!slots.selection);\n\n    const _search = shallowRef(!props.multiple && !hasSelectionSlot.value ? model.value[0]?.title ?? '' : '');\n\n    const search = computed({\n      get: () => {\n        return _search.value;\n      },\n      set: val => {\n        _search.value = val ?? '';\n\n        if (!props.multiple && !hasSelectionSlot.value) {\n          model.value = [transformItem(props, val)];\n        }\n\n        if (val && props.multiple && props.delimiters?.length) {\n          const values = val.split(new RegExp(`(?:${props.delimiters.join('|')})+`));\n\n          if (values.length > 1) {\n            values.forEach(v => {\n              v = v.trim();\n              if (v) select(transformItem(props, v));\n            });\n            _search.value = '';\n          }\n        }\n\n        if (!val) selectionIndex.value = -1;\n        isPristine.value = !val;\n      }\n    });\n    const counterValue = computed(() => {\n      return typeof props.counterValue === 'function' ? props.counterValue(model.value) : typeof props.counterValue === 'number' ? props.counterValue : props.multiple ? model.value.length : search.value.length;\n    });\n    const {\n      filteredItems,\n      getMatches\n    } = useFilter(props, items, () => isPristine.value ? '' : search.value);\n    const displayItems = computed(() => {\n      if (props.hideSelected) {\n        return filteredItems.value.filter(filteredItem => !model.value.some(s => s.value === filteredItem.value));\n      }\n\n      return filteredItems.value;\n    });\n    const menuDisabled = computed(() => props.hideNoData && !displayItems.value.length || form.isReadonly.value || form.isDisabled.value);\n\n    const _menu = useProxiedModel(props, 'menu');\n\n    const menu = computed({\n      get: () => _menu.value,\n      set: v => {\n        if (_menu.value && !v && vMenuRef.value?.Î¨openChildren.size) return;\n        if (v && menuDisabled.value) return;\n        _menu.value = v;\n      }\n    });\n    const label = computed(() => menu.value ? props.closeText : props.openText);\n    watch(_search, value => {\n      if (cleared) {\n        // wait for clear to finish, VTextField sets _search to null\n        // then search computed triggers and updates _search to ''\n        nextTick(() => cleared = false);\n      } else if (isFocused.value && !menu.value) {\n        menu.value = true;\n      }\n\n      emit('update:search', value);\n    });\n    watch(model, value => {\n      if (!props.multiple && !hasSelectionSlot.value) {\n        _search.value = value[0]?.title ?? '';\n      }\n    });\n    const selectedValues = computed(() => model.value.map(selection => selection.value));\n    const highlightFirst = computed(() => {\n      const selectFirst = props.autoSelectFirst === true || props.autoSelectFirst === 'exact' && search.value === displayItems.value[0]?.title;\n      return selectFirst && displayItems.value.length > 0 && !isPristine.value && !listHasFocus.value;\n    });\n    const listRef = ref();\n    const listEvents = useScrolling(listRef, vTextFieldRef);\n\n    function onClear(e) {\n      cleared = true;\n\n      if (props.openOnClear) {\n        menu.value = true;\n      }\n    }\n\n    function onMousedownControl() {\n      if (menuDisabled.value) return;\n      menu.value = true;\n    }\n\n    function onMousedownMenuIcon(e) {\n      if (menuDisabled.value) return;\n\n      if (isFocused.value) {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n\n      menu.value = !menu.value;\n    }\n\n    function onListKeydown(e) {\n      if (e.key !== ' ' && checkPrintable(e)) {\n        vTextFieldRef.value?.focus();\n      }\n    } // eslint-disable-next-line complexity\n\n\n    function onKeydown(e) {\n      if (isComposingIgnoreKey(e) || form.isReadonly.value) return;\n      const selectionStart = vTextFieldRef.value?.selectionStart;\n      const length = model.value.length;\n\n      if (['Enter', 'ArrowDown', 'ArrowUp'].includes(e.key)) {\n        e.preventDefault();\n      }\n\n      if (['Enter', 'ArrowDown'].includes(e.key)) {\n        menu.value = true;\n      }\n\n      if (['Escape'].includes(e.key)) {\n        menu.value = false;\n      }\n\n      if (['Enter', 'Escape', 'Tab'].includes(e.key)) {\n        if (highlightFirst.value && ['Enter', 'Tab'].includes(e.key) && !model.value.some(_ref2 => {\n          let {\n            value\n          } = _ref2;\n          return value === displayItems.value[0].value;\n        })) {\n          select(filteredItems.value[0]);\n        }\n\n        isPristine.value = true;\n      }\n\n      if (e.key === 'ArrowDown' && highlightFirst.value) {\n        listRef.value?.focus('next');\n      }\n\n      if (e.key === 'Enter' && search.value) {\n        select(transformItem(props, search.value));\n        if (hasSelectionSlot.value) _search.value = '';\n      }\n\n      if (['Backspace', 'Delete'].includes(e.key)) {\n        if (!props.multiple && hasSelectionSlot.value && model.value.length > 0 && !search.value) return select(model.value[0], false);\n\n        if (~selectionIndex.value) {\n          e.preventDefault();\n          const originalSelectionIndex = selectionIndex.value;\n          select(model.value[selectionIndex.value], false);\n          selectionIndex.value = originalSelectionIndex >= length - 1 ? length - 2 : originalSelectionIndex;\n        } else if (e.key === 'Backspace' && !search.value) {\n          selectionIndex.value = length - 1;\n        }\n\n        return;\n      }\n\n      if (!props.multiple) return;\n\n      if (e.key === 'ArrowLeft') {\n        if (selectionIndex.value < 0 && selectionStart && selectionStart > 0) return;\n        const prev = selectionIndex.value > -1 ? selectionIndex.value - 1 : length - 1;\n\n        if (model.value[prev]) {\n          selectionIndex.value = prev;\n        } else {\n          selectionIndex.value = -1;\n          vTextFieldRef.value?.setSelectionRange(search.value.length, search.value.length);\n        }\n      } else if (e.key === 'ArrowRight') {\n        if (selectionIndex.value < 0) return;\n        const next = selectionIndex.value + 1;\n\n        if (model.value[next]) {\n          selectionIndex.value = next;\n        } else {\n          selectionIndex.value = -1;\n          vTextFieldRef.value?.setSelectionRange(0, 0);\n        }\n      } else if (~selectionIndex.value && checkPrintable(e)) {\n        selectionIndex.value = -1;\n      }\n    }\n\n    function onAfterEnter() {\n      if (props.eager) {\n        vVirtualScrollRef.value?.calculateVisibleItems();\n      }\n    }\n\n    function onAfterLeave() {\n      if (isFocused.value) {\n        isPristine.value = true;\n        vTextFieldRef.value?.focus();\n      }\n    }\n    /** @param set - null means toggle */\n\n\n    function select(item) {\n      let set = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      if (!item || item.props.disabled) return;\n\n      if (props.multiple) {\n        const index = model.value.findIndex(selection => (props.valueComparator || deepEqual)(selection.value, item.value));\n        const add = set == null ? !~index : set;\n\n        if (~index) {\n          const value = add ? [...model.value, item] : [...model.value];\n          value.splice(index, 1);\n          model.value = value;\n        } else if (add) {\n          model.value = [...model.value, item];\n        }\n\n        if (props.clearOnSelect) {\n          search.value = '';\n        }\n      } else {\n        const add = set !== false;\n        model.value = add ? [item] : [];\n        _search.value = add && !hasSelectionSlot.value ? item.title : ''; // watch for search watcher to trigger\n\n        nextTick(() => {\n          menu.value = false;\n          isPristine.value = true;\n        });\n      }\n    }\n\n    function onFocusin(e) {\n      isFocused.value = true;\n      setTimeout(() => {\n        listHasFocus.value = true;\n      });\n    }\n\n    function onFocusout(e) {\n      listHasFocus.value = false;\n    }\n\n    function onUpdateModelValue(v) {\n      if (v == null || v === '' && !props.multiple && !hasSelectionSlot.value) model.value = [];\n    }\n\n    watch(isFocused, (val, oldVal) => {\n      if (val || val === oldVal) return;\n      selectionIndex.value = -1;\n      menu.value = false;\n\n      if (search.value) {\n        if (props.multiple) {\n          select(transformItem(props, search.value));\n          return;\n        }\n\n        if (!hasSelectionSlot.value) return;\n\n        if (model.value.some(_ref3 => {\n          let {\n            title\n          } = _ref3;\n          return title === search.value;\n        })) {\n          _search.value = '';\n        } else {\n          select(transformItem(props, search.value));\n        }\n      }\n    });\n    watch(menu, () => {\n      if (!props.hideSelected && menu.value && model.value.length) {\n        const index = displayItems.value.findIndex(item => model.value.some(s => (props.valueComparator || deepEqual)(s.value, item.value)));\n        IN_BROWSER && window.requestAnimationFrame(() => {\n          index >= 0 && vVirtualScrollRef.value?.scrollToIndex(index);\n        });\n      }\n    });\n    watch(() => props.items, (newVal, oldVal) => {\n      if (menu.value) return;\n\n      if (isFocused.value && !oldVal.length && newVal.length) {\n        menu.value = true;\n      }\n    });\n    useRender(() => {\n      const hasList = !!(!props.hideNoData || displayItems.value.length || slots['prepend-item'] || slots['append-item'] || slots['no-data']);\n      const isDirty = model.value.length > 0;\n      const textFieldProps = VTextField.filterProps(props);\n      return _createVNode(VTextField, _mergeProps({\n        \"ref\": vTextFieldRef\n      }, textFieldProps, {\n        \"modelValue\": search.value,\n        \"onUpdate:modelValue\": [$event => search.value = $event, onUpdateModelValue],\n        \"focused\": isFocused.value,\n        \"onUpdate:focused\": $event => isFocused.value = $event,\n        \"validationValue\": model.externalValue,\n        \"counterValue\": counterValue.value,\n        \"dirty\": isDirty,\n        \"class\": ['v-combobox', {\n          'v-combobox--active-menu': menu.value,\n          'v-combobox--chips': !!props.chips,\n          'v-combobox--selection-slot': !!hasSelectionSlot.value,\n          'v-combobox--selecting-index': selectionIndex.value > -1,\n          [`v-combobox--${props.multiple ? 'multiple' : 'single'}`]: true\n        }, props.class],\n        \"style\": props.style,\n        \"readonly\": form.isReadonly.value,\n        \"placeholder\": isDirty ? undefined : props.placeholder,\n        \"onClick:clear\": onClear,\n        \"onMousedown:control\": onMousedownControl,\n        \"onKeydown\": onKeydown\n      }), { ...slots,\n        default: () => _createVNode(_Fragment, null, [_createVNode(VMenu, _mergeProps({\n          \"ref\": vMenuRef,\n          \"modelValue\": menu.value,\n          \"onUpdate:modelValue\": $event => menu.value = $event,\n          \"activator\": \"parent\",\n          \"contentClass\": \"v-combobox__content\",\n          \"disabled\": menuDisabled.value,\n          \"eager\": props.eager,\n          \"maxHeight\": 310,\n          \"openOnClick\": false,\n          \"closeOnContentClick\": false,\n          \"transition\": props.transition,\n          \"onAfterEnter\": onAfterEnter,\n          \"onAfterLeave\": onAfterLeave\n        }, props.menuProps), {\n          default: () => [hasList && _createVNode(VList, _mergeProps({\n            \"ref\": listRef,\n            \"selected\": selectedValues.value,\n            \"selectStrategy\": props.multiple ? 'independent' : 'single-independent',\n            \"onMousedown\": e => e.preventDefault(),\n            \"onKeydown\": onListKeydown,\n            \"onFocusin\": onFocusin,\n            \"onFocusout\": onFocusout,\n            \"tabindex\": \"-1\",\n            \"aria-live\": \"polite\",\n            \"color\": props.itemColor ?? props.color\n          }, listEvents, props.listProps), {\n            default: () => [slots['prepend-item']?.(), !displayItems.value.length && !props.hideNoData && (slots['no-data']?.() ?? _createVNode(VListItem, {\n              \"key\": \"no-data\",\n              \"title\": t(props.noDataText)\n            }, null)), _createVNode(VVirtualScroll, {\n              \"ref\": vVirtualScrollRef,\n              \"renderless\": true,\n              \"items\": displayItems.value,\n              \"itemKey\": \"value\"\n            }, {\n              default: _ref4 => {\n                let {\n                  item,\n                  index,\n                  itemRef\n                } = _ref4;\n                const itemProps = mergeProps(item.props, {\n                  ref: itemRef,\n                  key: item.value,\n                  active: highlightFirst.value && index === 0 ? true : undefined,\n                  onClick: () => select(item, null)\n                });\n                return slots.item?.({\n                  item,\n                  index,\n                  props: itemProps\n                }) ?? _createVNode(VListItem, _mergeProps(itemProps, {\n                  \"role\": \"option\"\n                }), {\n                  prepend: _ref5 => {\n                    let {\n                      isSelected\n                    } = _ref5;\n                    return _createVNode(_Fragment, null, [props.multiple && !props.hideSelected ? _createVNode(VCheckboxBtn, {\n                      \"key\": item.value,\n                      \"modelValue\": isSelected,\n                      \"ripple\": false,\n                      \"tabindex\": \"-1\"\n                    }, null) : undefined, item.props.prependAvatar && _createVNode(VAvatar, {\n                      \"image\": item.props.prependAvatar\n                    }, null), item.props.prependIcon && _createVNode(VIcon, {\n                      \"icon\": item.props.prependIcon\n                    }, null)]);\n                  },\n                  title: () => {\n                    return isPristine.value ? item.title : highlightResult('v-combobox', item.title, getMatches(item)?.title);\n                  }\n                });\n              }\n            }), slots['append-item']?.()]\n          })]\n        }), model.value.map((item, index) => {\n          function onChipClose(e) {\n            e.stopPropagation();\n            e.preventDefault();\n            select(item, false);\n          }\n\n          const slotProps = {\n            'onClick:close': onChipClose,\n\n            onKeydown(e) {\n              if (e.key !== 'Enter' && e.key !== ' ') return;\n              e.preventDefault();\n              e.stopPropagation();\n              onChipClose(e);\n            },\n\n            onMousedown(e) {\n              e.preventDefault();\n              e.stopPropagation();\n            },\n\n            modelValue: true,\n            'onUpdate:modelValue': undefined\n          };\n          const hasSlot = hasChips.value ? !!slots.chip : !!slots.selection;\n          const slotContent = hasSlot ? ensureValidVNode(hasChips.value ? slots.chip({\n            item,\n            index,\n            props: slotProps\n          }) : slots.selection({\n            item,\n            index\n          })) : undefined;\n          if (hasSlot && !slotContent) return undefined;\n          return _createVNode(\"div\", {\n            \"key\": item.value,\n            \"class\": ['v-combobox__selection', index === selectionIndex.value && ['v-combobox__selection--selected', textColorClasses.value]],\n            \"style\": index === selectionIndex.value ? textColorStyles.value : {}\n          }, [hasChips.value ? !slots.chip ? _createVNode(VChip, _mergeProps({\n            \"key\": \"chip\",\n            \"closable\": props.closableChips,\n            \"size\": \"small\",\n            \"text\": item.title,\n            \"disabled\": item.props.disabled\n          }, slotProps), null) : _createVNode(VDefaultsProvider, {\n            \"key\": \"chip-defaults\",\n            \"defaults\": {\n              VChip: {\n                closable: props.closableChips,\n                size: 'small',\n                text: item.title\n              }\n            }\n          }, {\n            default: () => [slotContent]\n          }) : slotContent ?? _createVNode(\"span\", {\n            \"class\": \"v-combobox__selection-text\"\n          }, [item.title, props.multiple && index < model.value.length - 1 && _createVNode(\"span\", {\n            \"class\": \"v-combobox__selection-comma\"\n          }, [_createTextVNode(\",\")])])]);\n        })]),\n        'append-inner': function () {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          return _createVNode(_Fragment, null, [slots['append-inner']?.(...args), (!props.hideNoData || props.items.length) && props.menuIcon ? _createVNode(VIcon, {\n            \"class\": \"v-combobox__menu-icon\",\n            \"color\": vTextFieldRef.value?.fieldIconColor,\n            \"icon\": props.menuIcon,\n            \"onMousedown\": onMousedownMenuIcon,\n            \"onClick\": noop,\n            \"aria-label\": t(label.value),\n            \"title\": t(label.value),\n            \"tabindex\": \"-1\"\n          }, null) : undefined]);\n        }\n      });\n    });\n    return forwardRefs({\n      isFocused,\n      isPristine,\n      menu,\n      search,\n      selectionIndex,\n      filteredItems,\n      select\n    }, vTextFieldRef);\n  }\n\n});","map":{"version":3,"mappings":"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","names":["VAvatar","VCheckboxBtn","VChip","VDefaultsProvider","VIcon","VList","VListItem","VMenu","makeSelectProps","VTextField","makeVTextFieldProps","VVirtualScroll","useScrolling","useTextColor","highlightResult","makeFilterProps","useFilter","useForm","forwardRefs","transformItem","useItems","useLocale","useProxiedModel","makeTransitionProps","computed","mergeProps","nextTick","ref","shallowRef","watch","checkPrintable","deepEqual","ensureValidVNode","genericComponent","IN_BROWSER","isComposingIgnoreKey","noop","omit","propsFactory","useRender","wrapInArray","makeVComboboxProps","autoSelectFirst","type","Boolean","String","clearOnSelect","default","delimiters","Array","filterKeys","hideNoData","returnObject","modelValue","role","transition","VCombobox","name","props","emits","focused","value","setup","_ref","emit","slots","t","vTextFieldRef","isFocused","isPristine","listHasFocus","vMenuRef","vVirtualScrollRef","selectionIndex","cleared","color","items","transformIn","transformOut","textColorClasses","textColorStyles","model","v","transformed","multiple","form","hasChips","chips","chip","hasSelectionSlot","selection","_search","title","search","get","set","val","length","values","split","RegExp","join","forEach","trim","select","counterValue","filteredItems","getMatches","displayItems","hideSelected","filter","filteredItem","some","s","menuDisabled","isReadonly","isDisabled","_menu","menu","Î¨openChildren","size","label","closeText","openText","selectedValues","map","highlightFirst","selectFirst","listRef","listEvents","onClear","e","openOnClear","onMousedownControl","onMousedownMenuIcon","preventDefault","stopPropagation","onListKeydown","key","focus","onKeydown","selectionStart","includes","_ref2","originalSelectionIndex","prev","setSelectionRange","next","onAfterEnter","eager","calculateVisibleItems","onAfterLeave","item","disabled","index","findIndex","valueComparator","add","splice","onFocusin","setTimeout","onFocusout","onUpdateModelValue","oldVal","_ref3","window","requestAnimationFrame","scrollToIndex","newVal","hasList","isDirty","textFieldProps","filterProps","$event","externalValue","class","style","undefined","placeholder","menuProps","itemColor","listProps","_createVNode","noDataText","_ref4","itemRef","itemProps","active","onClick","prepend","_ref5","isSelected","prependAvatar","prependIcon","onChipClose","slotProps","onMousedown","hasSlot","slotContent","closableChips","closable","text","args","_key","arguments","menuIcon","fieldIconColor"],"sources":["../../../src/components/VCombobox/VCombobox.tsx"],"sourcesContent":["// Styles\nimport './VCombobox.sass'\n\n// Components\nimport { VAvatar } from '@/components/VAvatar'\nimport { VCheckboxBtn } from '@/components/VCheckbox'\nimport { VChip } from '@/components/VChip'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VIcon } from '@/components/VIcon'\nimport { VList, VListItem } from '@/components/VList'\nimport { VMenu } from '@/components/VMenu'\nimport { makeSelectProps } from '@/components/VSelect/VSelect'\nimport { VTextField } from '@/components/VTextField'\nimport { makeVTextFieldProps } from '@/components/VTextField/VTextField'\nimport { VVirtualScroll } from '@/components/VVirtualScroll'\n\n// Composables\nimport { useScrolling } from '../VSelect/useScrolling'\nimport { useTextColor } from '@/composables/color'\nimport { highlightResult, makeFilterProps, useFilter } from '@/composables/filter'\nimport { useForm } from '@/composables/form'\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { transformItem, useItems } from '@/composables/list-items'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { makeTransitionProps } from '@/composables/transition'\n\n// Utilities\nimport { computed, mergeProps, nextTick, ref, shallowRef, watch } from 'vue'\nimport {\n  checkPrintable,\n  deepEqual,\n  ensureValidVNode,\n  genericComponent,\n  IN_BROWSER,\n  isComposingIgnoreKey,\n  noop,\n  omit,\n  propsFactory,\n  useRender,\n  wrapInArray,\n} from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { VFieldSlots } from '@/components/VField/VField'\nimport type { VInputSlots } from '@/components/VInput/VInput'\nimport type { ListItem } from '@/composables/list-items'\nimport type { GenericProps, SelectItemKey } from '@/util'\n\ntype Primitive = string | number | boolean | symbol\n\ntype Val <T, ReturnObject extends boolean> = string | ([T] extends [Primitive]\n  ? T\n  : (ReturnObject extends true ? T : any))\n\ntype Value <T, ReturnObject extends boolean, Multiple extends boolean> =\n  Multiple extends true\n    ? readonly Val<T, ReturnObject>[]\n    : Val<T, ReturnObject> | null\n\nexport const makeVComboboxProps = propsFactory({\n  autoSelectFirst: {\n    type: [Boolean, String] as PropType<boolean | 'exact'>,\n  },\n  clearOnSelect: {\n    type: Boolean,\n    default: true,\n  },\n  delimiters: Array as PropType<readonly string[]>,\n\n  ...makeFilterProps({ filterKeys: ['title'] }),\n  ...makeSelectProps({ hideNoData: true, returnObject: true }),\n  ...omit(makeVTextFieldProps({\n    modelValue: null,\n    role: 'combobox',\n  }), ['validationValue', 'dirty', 'appendInnerIcon']),\n  ...makeTransitionProps({ transition: false }),\n}, 'VCombobox')\n\ntype ItemType<T> = T extends readonly (infer U)[] ? U : never\n\nexport const VCombobox = genericComponent<new <\n  T extends readonly any[],\n  Item = ItemType<T>,\n  ReturnObject extends boolean = true,\n  Multiple extends boolean = false,\n  V extends Value<Item, ReturnObject, Multiple> = Value<Item, ReturnObject, Multiple>\n>(\n  props: {\n    items?: T\n    itemTitle?: SelectItemKey<ItemType<T>>\n    itemValue?: SelectItemKey<ItemType<T>>\n    itemProps?: SelectItemKey<ItemType<T>>\n    returnObject?: ReturnObject\n    multiple?: Multiple\n    modelValue?: V | null\n    'onUpdate:modelValue'?: (value: V) => void\n  },\n  slots: Omit<VInputSlots & VFieldSlots, 'default'> & {\n    item: { item: ListItem<Item>, index: number, props: Record<string, unknown> }\n    chip: { item: ListItem<Item>, index: number, props: Record<string, unknown> }\n    selection: { item: ListItem<Item>, index: number }\n    'prepend-item': never\n    'append-item': never\n    'no-data': never\n  }\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VCombobox',\n\n  props: makeVComboboxProps(),\n\n  emits: {\n    'update:focused': (focused: boolean) => true,\n    'update:modelValue': (value: any) => true,\n    'update:search': (value: string) => true,\n    'update:menu': (value: boolean) => true,\n  },\n\n  setup (props, { emit, slots }) {\n    const { t } = useLocale()\n    const vTextFieldRef = ref<VTextField>()\n    const isFocused = shallowRef(false)\n    const isPristine = shallowRef(true)\n    const listHasFocus = shallowRef(false)\n    const vMenuRef = ref<VMenu>()\n    const vVirtualScrollRef = ref<VVirtualScroll>()\n    const selectionIndex = shallowRef(-1)\n    let cleared = false\n    const color = computed(() => vTextFieldRef.value?.color)\n    const { items, transformIn, transformOut } = useItems(props)\n    const { textColorClasses, textColorStyles } = useTextColor(color)\n    const model = useProxiedModel(\n      props,\n      'modelValue',\n      [],\n      v => transformIn(wrapInArray(v)),\n      v => {\n        const transformed = transformOut(v)\n        return props.multiple ? transformed : (transformed[0] ?? null)\n      }\n    )\n    const form = useForm(props)\n\n    const hasChips = computed(() => !!(props.chips || slots.chip))\n    const hasSelectionSlot = computed(() => hasChips.value || !!slots.selection)\n\n    const _search = shallowRef(!props.multiple && !hasSelectionSlot.value ? model.value[0]?.title ?? '' : '')\n\n    const search = computed<string>({\n      get: () => {\n        return _search.value\n      },\n      set: (val: string | null) => {\n        _search.value = val ?? ''\n        if (!props.multiple && !hasSelectionSlot.value) {\n          model.value = [transformItem(props, val)]\n        }\n\n        if (val && props.multiple && props.delimiters?.length) {\n          const values = val.split(new RegExp(`(?:${props.delimiters.join('|')})+`))\n          if (values.length > 1) {\n            values.forEach(v => {\n              v = v.trim()\n              if (v) select(transformItem(props, v))\n            })\n            _search.value = ''\n          }\n        }\n\n        if (!val) selectionIndex.value = -1\n\n        isPristine.value = !val\n      },\n    })\n\n    const counterValue = computed(() => {\n      return typeof props.counterValue === 'function' ? props.counterValue(model.value)\n        : typeof props.counterValue === 'number' ? props.counterValue\n        : (props.multiple ? model.value.length : search.value.length)\n    })\n\n    const { filteredItems, getMatches } = useFilter(props, items, () => isPristine.value ? '' : search.value)\n\n    const displayItems = computed(() => {\n      if (props.hideSelected) {\n        return filteredItems.value.filter(filteredItem => !model.value.some(s => s.value === filteredItem.value))\n      }\n      return filteredItems.value\n    })\n\n    const menuDisabled = computed(() => (\n      (props.hideNoData && !displayItems.value.length) ||\n      form.isReadonly.value || form.isDisabled.value\n    ))\n    const _menu = useProxiedModel(props, 'menu')\n    const menu = computed({\n      get: () => _menu.value,\n      set: v => {\n        if (_menu.value && !v && vMenuRef.value?.Î¨openChildren.size) return\n        if (v && menuDisabled.value) return\n        _menu.value = v\n      },\n    })\n\n    const label = computed(() => menu.value ? props.closeText : props.openText)\n\n    watch(_search, value => {\n      if (cleared) {\n        // wait for clear to finish, VTextField sets _search to null\n        // then search computed triggers and updates _search to ''\n        nextTick(() => (cleared = false))\n      } else if (isFocused.value && !menu.value) {\n        menu.value = true\n      }\n\n      emit('update:search', value)\n    })\n\n    watch(model, value => {\n      if (!props.multiple && !hasSelectionSlot.value) {\n        _search.value = value[0]?.title ?? ''\n      }\n    })\n\n    const selectedValues = computed(() => model.value.map(selection => selection.value))\n\n    const highlightFirst = computed(() => {\n      const selectFirst = props.autoSelectFirst === true ||\n        (props.autoSelectFirst === 'exact' && search.value === displayItems.value[0]?.title)\n      return selectFirst &&\n        displayItems.value.length > 0 &&\n        !isPristine.value &&\n        !listHasFocus.value\n    })\n\n    const listRef = ref<VList>()\n    const listEvents = useScrolling(listRef, vTextFieldRef)\n    function onClear (e: MouseEvent) {\n      cleared = true\n\n      if (props.openOnClear) {\n        menu.value = true\n      }\n    }\n    function onMousedownControl () {\n      if (menuDisabled.value) return\n\n      menu.value = true\n    }\n    function onMousedownMenuIcon (e: MouseEvent) {\n      if (menuDisabled.value) return\n\n      if (isFocused.value) {\n        e.preventDefault()\n        e.stopPropagation()\n      }\n      menu.value = !menu.value\n    }\n    function onListKeydown (e: KeyboardEvent) {\n      if (e.key !== ' ' && checkPrintable(e)) {\n        vTextFieldRef.value?.focus()\n      }\n    }\n    // eslint-disable-next-line complexity\n    function onKeydown (e: KeyboardEvent) {\n      if (isComposingIgnoreKey(e) || form.isReadonly.value) return\n\n      const selectionStart = vTextFieldRef.value?.selectionStart\n      const length = model.value.length\n\n      if (['Enter', 'ArrowDown', 'ArrowUp'].includes(e.key)) {\n        e.preventDefault()\n      }\n\n      if (['Enter', 'ArrowDown'].includes(e.key)) {\n        menu.value = true\n      }\n\n      if (['Escape'].includes(e.key)) {\n        menu.value = false\n      }\n\n      if (['Enter', 'Escape', 'Tab'].includes(e.key)) {\n        if (\n          highlightFirst.value &&\n          ['Enter', 'Tab'].includes(e.key) &&\n          !model.value.some(({ value }) => value === displayItems.value[0].value)\n        ) {\n          select(filteredItems.value[0])\n        }\n\n        isPristine.value = true\n      }\n\n      if (e.key === 'ArrowDown' && highlightFirst.value) {\n        listRef.value?.focus('next')\n      }\n\n      if (e.key === 'Enter' && search.value) {\n        select(transformItem(props, search.value))\n        if (hasSelectionSlot.value) _search.value = ''\n      }\n\n      if (['Backspace', 'Delete'].includes(e.key)) {\n        if (\n          !props.multiple &&\n          hasSelectionSlot.value &&\n          model.value.length > 0 &&\n          !search.value\n        ) return select(model.value[0], false)\n\n        if (~selectionIndex.value) {\n          e.preventDefault()\n          const originalSelectionIndex = selectionIndex.value\n          select(model.value[selectionIndex.value], false)\n\n          selectionIndex.value = originalSelectionIndex >= length - 1 ? (length - 2) : originalSelectionIndex\n        } else if (e.key === 'Backspace' && !search.value) {\n          selectionIndex.value = length - 1\n        }\n\n        return\n      }\n\n      if (!props.multiple) return\n\n      if (e.key === 'ArrowLeft') {\n        if (selectionIndex.value < 0 && selectionStart && selectionStart > 0) return\n\n        const prev = selectionIndex.value > -1\n          ? selectionIndex.value - 1\n          : length - 1\n\n        if (model.value[prev]) {\n          selectionIndex.value = prev\n        } else {\n          selectionIndex.value = -1\n          vTextFieldRef.value?.setSelectionRange(search.value.length, search.value.length)\n        }\n      } else if (e.key === 'ArrowRight') {\n        if (selectionIndex.value < 0) return\n\n        const next = selectionIndex.value + 1\n\n        if (model.value[next]) {\n          selectionIndex.value = next\n        } else {\n          selectionIndex.value = -1\n          vTextFieldRef.value?.setSelectionRange(0, 0)\n        }\n      } else if (~selectionIndex.value && checkPrintable(e)) {\n        selectionIndex.value = -1\n      }\n    }\n    function onAfterEnter () {\n      if (props.eager) {\n        vVirtualScrollRef.value?.calculateVisibleItems()\n      }\n    }\n    function onAfterLeave () {\n      if (isFocused.value) {\n        isPristine.value = true\n        vTextFieldRef.value?.focus()\n      }\n    }\n    /** @param set - null means toggle */\n    function select (item: ListItem | undefined, set: boolean | null = true) {\n      if (!item || item.props.disabled) return\n\n      if (props.multiple) {\n        const index = model.value.findIndex(selection => (props.valueComparator || deepEqual)(selection.value, item.value))\n        const add = set == null ? !~index : set\n\n        if (~index) {\n          const value = add ? [...model.value, item] : [...model.value]\n          value.splice(index, 1)\n          model.value = value\n        } else if (add) {\n          model.value = [...model.value, item]\n        }\n\n        if (props.clearOnSelect) {\n          search.value = ''\n        }\n      } else {\n        const add = set !== false\n        model.value = add ? [item] : []\n        _search.value = add && !hasSelectionSlot.value ? item.title : ''\n\n        // watch for search watcher to trigger\n        nextTick(() => {\n          menu.value = false\n          isPristine.value = true\n        })\n      }\n    }\n\n    function onFocusin (e: FocusEvent) {\n      isFocused.value = true\n      setTimeout(() => {\n        listHasFocus.value = true\n      })\n    }\n    function onFocusout (e: FocusEvent) {\n      listHasFocus.value = false\n    }\n    function onUpdateModelValue (v: any) {\n      if (v == null || (v === '' && !props.multiple && !hasSelectionSlot.value)) model.value = []\n    }\n\n    watch(isFocused, (val, oldVal) => {\n      if (val || val === oldVal) return\n\n      selectionIndex.value = -1\n      menu.value = false\n\n      if (search.value) {\n        if (props.multiple) {\n          select(transformItem(props, search.value))\n          return\n        }\n\n        if (!hasSelectionSlot.value) return\n\n        if (model.value.some(({ title }) => title === search.value)) {\n          _search.value = ''\n        } else {\n          select(transformItem(props, search.value))\n        }\n      }\n    })\n\n    watch(menu, () => {\n      if (!props.hideSelected && menu.value && model.value.length) {\n        const index = displayItems.value.findIndex(\n          item => model.value.some(s => (props.valueComparator || deepEqual)(s.value, item.value))\n        )\n        IN_BROWSER && window.requestAnimationFrame(() => {\n          index >= 0 && vVirtualScrollRef.value?.scrollToIndex(index)\n        })\n      }\n    })\n\n    watch(() => props.items, (newVal, oldVal) => {\n      if (menu.value) return\n\n      if (isFocused.value && !oldVal.length && newVal.length) {\n        menu.value = true\n      }\n    })\n\n    useRender(() => {\n      const hasList = !!(\n        (!props.hideNoData || displayItems.value.length) ||\n        slots['prepend-item'] ||\n        slots['append-item'] ||\n        slots['no-data']\n      )\n      const isDirty = model.value.length > 0\n      const textFieldProps = VTextField.filterProps(props)\n\n      return (\n        <VTextField\n          ref={ vTextFieldRef }\n          { ...textFieldProps }\n          v-model={ search.value }\n          onUpdate:modelValue={ onUpdateModelValue }\n          v-model:focused={ isFocused.value }\n          validationValue={ model.externalValue }\n          counterValue={ counterValue.value }\n          dirty={ isDirty }\n          class={[\n            'v-combobox',\n            {\n              'v-combobox--active-menu': menu.value,\n              'v-combobox--chips': !!props.chips,\n              'v-combobox--selection-slot': !!hasSelectionSlot.value,\n              'v-combobox--selecting-index': selectionIndex.value > -1,\n              [`v-combobox--${props.multiple ? 'multiple' : 'single'}`]: true,\n            },\n            props.class,\n          ]}\n          style={ props.style }\n          readonly={ form.isReadonly.value }\n          placeholder={ isDirty ? undefined : props.placeholder }\n          onClick:clear={ onClear }\n          onMousedown:control={ onMousedownControl }\n          onKeydown={ onKeydown }\n        >\n          {{\n            ...slots,\n            default: () => (\n              <>\n                <VMenu\n                  ref={ vMenuRef }\n                  v-model={ menu.value }\n                  activator=\"parent\"\n                  contentClass=\"v-combobox__content\"\n                  disabled={ menuDisabled.value }\n                  eager={ props.eager }\n                  maxHeight={ 310 }\n                  openOnClick={ false }\n                  closeOnContentClick={ false }\n                  transition={ props.transition }\n                  onAfterEnter={ onAfterEnter }\n                  onAfterLeave={ onAfterLeave }\n                  { ...props.menuProps }\n                >\n                  { hasList && (\n                    <VList\n                      ref={ listRef }\n                      selected={ selectedValues.value }\n                      selectStrategy={ props.multiple ? 'independent' : 'single-independent' }\n                      onMousedown={ (e: MouseEvent) => e.preventDefault() }\n                      onKeydown={ onListKeydown }\n                      onFocusin={ onFocusin }\n                      onFocusout={ onFocusout }\n                      tabindex=\"-1\"\n                      aria-live=\"polite\"\n                      color={ props.itemColor ?? props.color }\n                      { ...listEvents }\n                      { ...props.listProps }\n                    >\n                      { slots['prepend-item']?.() }\n\n                      { !displayItems.value.length && !props.hideNoData && (slots['no-data']?.() ?? (\n                        <VListItem key=\"no-data\" title={ t(props.noDataText) } />\n                      ))}\n\n                      <VVirtualScroll ref={ vVirtualScrollRef } renderless items={ displayItems.value } itemKey=\"value\">\n                        { ({ item, index, itemRef }) => {\n                          const itemProps = mergeProps(item.props, {\n                            ref: itemRef,\n                            key: item.value,\n                            active: (highlightFirst.value && index === 0) ? true : undefined,\n                            onClick: () => select(item, null),\n                          })\n\n                          return slots.item?.({\n                            item,\n                            index,\n                            props: itemProps,\n                          }) ?? (\n                            <VListItem { ...itemProps } role=\"option\">\n                            {{\n                              prepend: ({ isSelected }) => (\n                                <>\n                                  { props.multiple && !props.hideSelected ? (\n                                    <VCheckboxBtn\n                                      key={ item.value }\n                                      modelValue={ isSelected }\n                                      ripple={ false }\n                                      tabindex=\"-1\"\n                                    />\n                                  ) : undefined }\n\n                                  { item.props.prependAvatar && (\n                                    <VAvatar image={ item.props.prependAvatar } />\n                                  )}\n\n                                  { item.props.prependIcon && (\n                                    <VIcon icon={ item.props.prependIcon } />\n                                  )}\n                                </>\n                              ),\n                              title: () => {\n                                return isPristine.value\n                                  ? item.title\n                                  : highlightResult('v-combobox', item.title, getMatches(item)?.title)\n                              },\n                            }}\n                          </VListItem>\n                          )\n                        }}\n                      </VVirtualScroll>\n\n                      { slots['append-item']?.() }\n                    </VList>\n                  )}\n                </VMenu>\n\n                { model.value.map((item, index) => {\n                  function onChipClose (e: Event) {\n                    e.stopPropagation()\n                    e.preventDefault()\n\n                    select(item, false)\n                  }\n\n                  const slotProps = {\n                    'onClick:close': onChipClose,\n                    onKeydown (e: KeyboardEvent) {\n                      if (e.key !== 'Enter' && e.key !== ' ') return\n\n                      e.preventDefault()\n                      e.stopPropagation()\n\n                      onChipClose(e)\n                    },\n                    onMousedown (e: MouseEvent) {\n                      e.preventDefault()\n                      e.stopPropagation()\n                    },\n                    modelValue: true,\n                    'onUpdate:modelValue': undefined,\n                  }\n\n                  const hasSlot = hasChips.value ? !!slots.chip : !!slots.selection\n                  const slotContent = hasSlot\n                    ? ensureValidVNode(\n                      hasChips.value\n                        ? slots.chip!({ item, index, props: slotProps })\n                        : slots.selection!({ item, index })\n                    )\n                    : undefined\n\n                  if (hasSlot && !slotContent) return undefined\n\n                  return (\n                    <div\n                      key={ item.value }\n                      class={[\n                        'v-combobox__selection',\n                        index === selectionIndex.value && [\n                          'v-combobox__selection--selected',\n                          textColorClasses.value,\n                        ],\n                      ]}\n                      style={ index === selectionIndex.value ? textColorStyles.value : {} }\n                    >\n                      { hasChips.value ? (\n                        !slots.chip ? (\n                          <VChip\n                            key=\"chip\"\n                            closable={ props.closableChips }\n                            size=\"small\"\n                            text={ item.title }\n                            disabled={ item.props.disabled }\n                            { ...slotProps }\n                          />\n                        ) : (\n                          <VDefaultsProvider\n                            key=\"chip-defaults\"\n                            defaults={{\n                              VChip: {\n                                closable: props.closableChips,\n                                size: 'small',\n                                text: item.title,\n                              },\n                            }}\n                          >\n                            { slotContent }\n                          </VDefaultsProvider>\n                        )\n                      ) : (\n                        slotContent ?? (\n                          <span class=\"v-combobox__selection-text\">\n                            { item.title }\n                            { props.multiple && (index < model.value.length - 1) && (\n                              <span class=\"v-combobox__selection-comma\">,</span>\n                            )}\n                          </span>\n                        )\n                      )}\n                    </div>\n                  )\n                })}\n              </>\n            ),\n            'append-inner': (...args) => (\n              <>\n                { slots['append-inner']?.(...args) }\n                { (!props.hideNoData || props.items.length) && props.menuIcon ? (\n                  <VIcon\n                    class=\"v-combobox__menu-icon\"\n                    color={ vTextFieldRef.value?.fieldIconColor }\n                    icon={ props.menuIcon }\n                    onMousedown={ onMousedownMenuIcon }\n                    onClick={ noop }\n                    aria-label={ t(label.value) }\n                    title={ t(label.value) }\n                    tabindex=\"-1\"\n                  />\n                ) : undefined }\n              </>\n            ),\n          }}\n        </VTextField>\n      )\n    })\n\n    return forwardRefs({\n      isFocused,\n      isPristine,\n      menu,\n      search,\n      selectionIndex,\n      filteredItems,\n      select,\n    }, vTextFieldRef)\n  },\n})\n\nexport type VCombobox = InstanceType<typeof VCombobox>\n"]},"metadata":{},"sourceType":"module"}
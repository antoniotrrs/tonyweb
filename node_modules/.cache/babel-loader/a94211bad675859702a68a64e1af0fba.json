{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\"; // Styles\n\nimport \"./VProgressLinear.css\"; // Composables\n\nimport { useBackgroundColor, useTextColor } from \"../../composables/color.js\";\nimport { makeComponentProps } from \"../../composables/component.js\";\nimport { useIntersectionObserver } from \"../../composables/intersectionObserver.js\";\nimport { useRtl } from \"../../composables/locale.js\";\nimport { makeLocationProps, useLocation } from \"../../composables/location.js\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.js\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.js\";\nimport { makeTagProps } from \"../../composables/tag.js\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.js\"; // Utilities\n\nimport { computed, Transition } from 'vue';\nimport { clamp, convertToUnit, genericComponent, IN_BROWSER, propsFactory, useRender } from \"../../util/index.js\";\nexport const makeVProgressLinearProps = propsFactory({\n  absolute: Boolean,\n  active: {\n    type: Boolean,\n    default: true\n  },\n  bgColor: String,\n  bgOpacity: [Number, String],\n  bufferValue: {\n    type: [Number, String],\n    default: 0\n  },\n  bufferColor: String,\n  bufferOpacity: [Number, String],\n  clickable: Boolean,\n  color: String,\n  height: {\n    type: [Number, String],\n    default: 4\n  },\n  indeterminate: Boolean,\n  max: {\n    type: [Number, String],\n    default: 100\n  },\n  modelValue: {\n    type: [Number, String],\n    default: 0\n  },\n  opacity: [Number, String],\n  reverse: Boolean,\n  stream: Boolean,\n  striped: Boolean,\n  roundedBar: Boolean,\n  ...makeComponentProps(),\n  ...makeLocationProps({\n    location: 'top'\n  }),\n  ...makeRoundedProps(),\n  ...makeTagProps(),\n  ...makeThemeProps()\n}, 'VProgressLinear');\nexport const VProgressLinear = genericComponent()({\n  name: 'VProgressLinear',\n  props: makeVProgressLinearProps(),\n  emits: {\n    'update:modelValue': value => true\n  },\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const progress = useProxiedModel(props, 'modelValue');\n    const {\n      isRtl,\n      rtlClasses\n    } = useRtl();\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      locationStyles\n    } = useLocation(props);\n    const {\n      textColorClasses,\n      textColorStyles\n    } = useTextColor(props, 'color');\n    const {\n      backgroundColorClasses,\n      backgroundColorStyles\n    } = useBackgroundColor(computed(() => props.bgColor || props.color));\n    const {\n      backgroundColorClasses: bufferColorClasses,\n      backgroundColorStyles: bufferColorStyles\n    } = useBackgroundColor(computed(() => props.bufferColor || props.bgColor || props.color));\n    const {\n      backgroundColorClasses: barColorClasses,\n      backgroundColorStyles: barColorStyles\n    } = useBackgroundColor(props, 'color');\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const {\n      intersectionRef,\n      isIntersecting\n    } = useIntersectionObserver();\n    const max = computed(() => parseFloat(props.max));\n    const height = computed(() => parseFloat(props.height));\n    const normalizedBuffer = computed(() => clamp(parseFloat(props.bufferValue) / max.value * 100, 0, 100));\n    const normalizedValue = computed(() => clamp(parseFloat(progress.value) / max.value * 100, 0, 100));\n    const isReversed = computed(() => isRtl.value !== props.reverse);\n    const transition = computed(() => props.indeterminate ? 'fade-transition' : 'slide-x-transition');\n    const isForcedColorsModeActive = IN_BROWSER && window.matchMedia?.('(forced-colors: active)').matches;\n\n    function handleClick(e) {\n      if (!intersectionRef.value) return;\n      const {\n        left,\n        right,\n        width\n      } = intersectionRef.value.getBoundingClientRect();\n      const value = isReversed.value ? width - e.clientX + (right - width) : e.clientX - left;\n      progress.value = Math.round(value / width * max.value);\n    }\n\n    useRender(() => _createVNode(props.tag, {\n      \"ref\": intersectionRef,\n      \"class\": ['v-progress-linear', {\n        'v-progress-linear--absolute': props.absolute,\n        'v-progress-linear--active': props.active && isIntersecting.value,\n        'v-progress-linear--reverse': isReversed.value,\n        'v-progress-linear--rounded': props.rounded,\n        'v-progress-linear--rounded-bar': props.roundedBar,\n        'v-progress-linear--striped': props.striped\n      }, roundedClasses.value, themeClasses.value, rtlClasses.value, props.class],\n      \"style\": [{\n        bottom: props.location === 'bottom' ? 0 : undefined,\n        top: props.location === 'top' ? 0 : undefined,\n        height: props.active ? convertToUnit(height.value) : 0,\n        '--v-progress-linear-height': convertToUnit(height.value),\n        ...(props.absolute ? locationStyles.value : {})\n      }, props.style],\n      \"role\": \"progressbar\",\n      \"aria-hidden\": props.active ? 'false' : 'true',\n      \"aria-valuemin\": \"0\",\n      \"aria-valuemax\": props.max,\n      \"aria-valuenow\": props.indeterminate ? undefined : Math.min(parseFloat(progress.value), max.value),\n      \"onClick\": props.clickable && handleClick\n    }, {\n      default: () => [props.stream && _createVNode(\"div\", {\n        \"key\": \"stream\",\n        \"class\": ['v-progress-linear__stream', textColorClasses.value],\n        \"style\": { ...textColorStyles.value,\n          [isReversed.value ? 'left' : 'right']: convertToUnit(-height.value),\n          borderTop: `${convertToUnit(height.value / 2)} dotted`,\n          opacity: parseFloat(props.bufferOpacity),\n          top: `calc(50% - ${convertToUnit(height.value / 4)})`,\n          width: convertToUnit(100 - normalizedBuffer.value, '%'),\n          '--v-progress-linear-stream-to': convertToUnit(height.value * (isReversed.value ? 1 : -1))\n        }\n      }, null), _createVNode(\"div\", {\n        \"class\": ['v-progress-linear__background', !isForcedColorsModeActive ? backgroundColorClasses.value : undefined],\n        \"style\": [backgroundColorStyles.value, {\n          opacity: parseFloat(props.bgOpacity),\n          width: props.stream ? 0 : undefined\n        }]\n      }, null), _createVNode(\"div\", {\n        \"class\": ['v-progress-linear__buffer', !isForcedColorsModeActive ? bufferColorClasses.value : undefined],\n        \"style\": [bufferColorStyles.value, {\n          opacity: parseFloat(props.bufferOpacity),\n          width: convertToUnit(normalizedBuffer.value, '%')\n        }]\n      }, null), _createVNode(Transition, {\n        \"name\": transition.value\n      }, {\n        default: () => [!props.indeterminate ? _createVNode(\"div\", {\n          \"class\": ['v-progress-linear__determinate', !isForcedColorsModeActive ? barColorClasses.value : undefined],\n          \"style\": [barColorStyles.value, {\n            width: convertToUnit(normalizedValue.value, '%')\n          }]\n        }, null) : _createVNode(\"div\", {\n          \"class\": \"v-progress-linear__indeterminate\"\n        }, [['long', 'short'].map(bar => _createVNode(\"div\", {\n          \"key\": bar,\n          \"class\": ['v-progress-linear__indeterminate', bar, !isForcedColorsModeActive ? barColorClasses.value : undefined],\n          \"style\": barColorStyles.value\n        }, null))])]\n      }), slots.default && _createVNode(\"div\", {\n        \"class\": \"v-progress-linear__content\"\n      }, [slots.default({\n        value: normalizedValue.value,\n        buffer: normalizedBuffer.value\n      })])]\n    }));\n    return {};\n  }\n\n});","map":{"version":3,"mappings":"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","names":["useBackgroundColor","useTextColor","makeComponentProps","useIntersectionObserver","useRtl","makeLocationProps","useLocation","useProxiedModel","makeRoundedProps","useRounded","makeTagProps","makeThemeProps","provideTheme","computed","Transition","clamp","convertToUnit","genericComponent","IN_BROWSER","propsFactory","useRender","makeVProgressLinearProps","absolute","Boolean","active","type","default","bgColor","String","bgOpacity","Number","bufferValue","bufferColor","bufferOpacity","clickable","color","height","indeterminate","max","modelValue","opacity","reverse","stream","striped","roundedBar","location","VProgressLinear","name","props","emits","value","setup","_ref","slots","progress","isRtl","rtlClasses","themeClasses","locationStyles","textColorClasses","textColorStyles","backgroundColorClasses","backgroundColorStyles","bufferColorClasses","bufferColorStyles","barColorClasses","barColorStyles","roundedClasses","intersectionRef","isIntersecting","parseFloat","normalizedBuffer","normalizedValue","isReversed","transition","isForcedColorsModeActive","window","matchMedia","matches","handleClick","e","left","right","width","getBoundingClientRect","clientX","Math","round","rounded","class","bottom","undefined","top","style","min","_createVNode","borderTop","map","bar","buffer"],"sources":["../../../src/components/VProgressLinear/VProgressLinear.tsx"],"sourcesContent":["// Styles\nimport './VProgressLinear.sass'\n\n// Composables\nimport { useBackgroundColor, useTextColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { useIntersectionObserver } from '@/composables/intersectionObserver'\nimport { useRtl } from '@/composables/locale'\nimport { makeLocationProps, useLocation } from '@/composables/location'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\n\n// Utilities\nimport { computed, Transition } from 'vue'\nimport { clamp, convertToUnit, genericComponent, IN_BROWSER, propsFactory, useRender } from '@/util'\n\ntype VProgressLinearSlots = {\n  default: { value: number, buffer: number }\n}\n\nexport const makeVProgressLinearProps = propsFactory({\n  absolute: Boolean,\n  active: {\n    type: Boolean,\n    default: true,\n  },\n  bgColor: String,\n  bgOpacity: [Number, String],\n  bufferValue: {\n    type: [Number, String],\n    default: 0,\n  },\n  bufferColor: String,\n  bufferOpacity: [Number, String],\n  clickable: Boolean,\n  color: String,\n  height: {\n    type: [Number, String],\n    default: 4,\n  },\n  indeterminate: Boolean,\n  max: {\n    type: [Number, String],\n    default: 100,\n  },\n  modelValue: {\n    type: [Number, String],\n    default: 0,\n  },\n  opacity: [Number, String],\n  reverse: Boolean,\n  stream: Boolean,\n  striped: Boolean,\n  roundedBar: Boolean,\n\n  ...makeComponentProps(),\n  ...makeLocationProps({ location: 'top' } as const),\n  ...makeRoundedProps(),\n  ...makeTagProps(),\n  ...makeThemeProps(),\n}, 'VProgressLinear')\n\nexport const VProgressLinear = genericComponent<VProgressLinearSlots>()({\n  name: 'VProgressLinear',\n\n  props: makeVProgressLinearProps(),\n\n  emits: {\n    'update:modelValue': (value: number) => true,\n  },\n\n  setup (props, { slots }) {\n    const progress = useProxiedModel(props, 'modelValue')\n    const { isRtl, rtlClasses } = useRtl()\n    const { themeClasses } = provideTheme(props)\n    const { locationStyles } = useLocation(props)\n    const { textColorClasses, textColorStyles } = useTextColor(props, 'color')\n    const {\n      backgroundColorClasses,\n      backgroundColorStyles,\n    } = useBackgroundColor(computed(() => props.bgColor || props.color))\n    const {\n      backgroundColorClasses: bufferColorClasses,\n      backgroundColorStyles: bufferColorStyles,\n    } = useBackgroundColor(computed(() => props.bufferColor || props.bgColor || props.color))\n    const {\n      backgroundColorClasses: barColorClasses,\n      backgroundColorStyles: barColorStyles,\n    } = useBackgroundColor(props, 'color')\n    const { roundedClasses } = useRounded(props)\n    const { intersectionRef, isIntersecting } = useIntersectionObserver()\n\n    const max = computed(() => parseFloat(props.max))\n    const height = computed(() => parseFloat(props.height))\n    const normalizedBuffer = computed(() => clamp(parseFloat(props.bufferValue) / max.value * 100, 0, 100))\n    const normalizedValue = computed(() => clamp(parseFloat(progress.value) / max.value * 100, 0, 100))\n    const isReversed = computed(() => isRtl.value !== props.reverse)\n    const transition = computed(() => props.indeterminate ? 'fade-transition' : 'slide-x-transition')\n    const isForcedColorsModeActive = IN_BROWSER && window.matchMedia?.('(forced-colors: active)').matches\n\n    function handleClick (e: MouseEvent) {\n      if (!intersectionRef.value) return\n\n      const { left, right, width } = intersectionRef.value.getBoundingClientRect()\n      const value = isReversed.value ? (width - e.clientX) + (right - width) : e.clientX - left\n\n      progress.value = Math.round(value / width * max.value)\n    }\n\n    useRender(() => (\n      <props.tag\n        ref={ intersectionRef }\n        class={[\n          'v-progress-linear',\n          {\n            'v-progress-linear--absolute': props.absolute,\n            'v-progress-linear--active': props.active && isIntersecting.value,\n            'v-progress-linear--reverse': isReversed.value,\n            'v-progress-linear--rounded': props.rounded,\n            'v-progress-linear--rounded-bar': props.roundedBar,\n            'v-progress-linear--striped': props.striped,\n          },\n          roundedClasses.value,\n          themeClasses.value,\n          rtlClasses.value,\n          props.class,\n        ]}\n        style={[\n          {\n            bottom: props.location === 'bottom' ? 0 : undefined,\n            top: props.location === 'top' ? 0 : undefined,\n            height: props.active ? convertToUnit(height.value) : 0,\n            '--v-progress-linear-height': convertToUnit(height.value),\n            ...(props.absolute ? locationStyles.value : {}),\n          },\n          props.style,\n        ]}\n        role=\"progressbar\"\n        aria-hidden={ props.active ? 'false' : 'true' }\n        aria-valuemin=\"0\"\n        aria-valuemax={ props.max }\n        aria-valuenow={ props.indeterminate ? undefined : Math.min(parseFloat(progress.value), max.value) }\n        onClick={ props.clickable && handleClick }\n      >\n        { props.stream && (\n          <div\n            key=\"stream\"\n            class={[\n              'v-progress-linear__stream',\n              textColorClasses.value,\n            ]}\n            style={{\n              ...textColorStyles.value,\n              [isReversed.value ? 'left' : 'right']: convertToUnit(-height.value),\n              borderTop: `${convertToUnit(height.value / 2)} dotted`,\n              opacity: parseFloat(props.bufferOpacity!),\n              top: `calc(50% - ${convertToUnit(height.value / 4)})`,\n              width: convertToUnit(100 - normalizedBuffer.value, '%'),\n              '--v-progress-linear-stream-to': convertToUnit(height.value * (isReversed.value ? 1 : -1)),\n            }}\n          />\n        )}\n\n        <div\n          class={[\n            'v-progress-linear__background',\n            !isForcedColorsModeActive ? backgroundColorClasses.value : undefined,\n          ]}\n          style={[\n            backgroundColorStyles.value,\n            {\n              opacity: parseFloat(props.bgOpacity!),\n              width: props.stream ? 0 : undefined,\n            },\n          ]}\n        />\n\n        <div\n          class={[\n            'v-progress-linear__buffer',\n            !isForcedColorsModeActive ? bufferColorClasses.value : undefined,\n          ]}\n          style={[\n            bufferColorStyles.value,\n            {\n              opacity: parseFloat(props.bufferOpacity!),\n              width: convertToUnit(normalizedBuffer.value, '%'),\n            },\n          ]}\n        />\n\n        <Transition name={ transition.value }>\n          { !props.indeterminate ? (\n            <div\n              class={[\n                'v-progress-linear__determinate',\n                !isForcedColorsModeActive ? barColorClasses.value : undefined,\n              ]}\n              style={[\n                barColorStyles.value,\n                { width: convertToUnit(normalizedValue.value, '%') },\n              ]}\n            />\n          ) : (\n            <div class=\"v-progress-linear__indeterminate\">\n              {['long', 'short'].map(bar => (\n                <div\n                  key={ bar }\n                  class={[\n                    'v-progress-linear__indeterminate',\n                    bar,\n                    !isForcedColorsModeActive ? barColorClasses.value : undefined,\n                  ]}\n                  style={ barColorStyles.value }\n                />\n              ))}\n            </div>\n          )}\n        </Transition>\n\n        { slots.default && (\n          <div class=\"v-progress-linear__content\">\n            { slots.default({ value: normalizedValue.value, buffer: normalizedBuffer.value }) }\n          </div>\n        )}\n      </props.tag>\n    ))\n\n    return {}\n  },\n})\n\nexport type VProgressLinear = InstanceType<typeof VProgressLinear>\n"]},"metadata":{},"sourceType":"module"}
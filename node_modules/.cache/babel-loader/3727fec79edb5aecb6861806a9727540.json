{"ast":null,"code":"import { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\"; // Styles\n\nimport \"./VSpeedDial.css\"; // Components\n\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.js\";\nimport { makeVMenuProps, VMenu } from \"../VMenu/VMenu.js\"; // Composables\n\nimport { makeComponentProps } from \"../../composables/component.js\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.js\";\nimport { MaybeTransition } from \"../../composables/transition.js\"; // Utilities\n\nimport { computed, ref } from 'vue';\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.js\"; // Types\n\nexport const makeVSpeedDialProps = propsFactory({ ...makeComponentProps(),\n  ...makeVMenuProps({\n    offset: 8,\n    minWidth: 0,\n    openDelay: 0,\n    closeDelay: 100,\n    location: 'top center',\n    transition: 'scale-transition'\n  })\n}, 'VSpeedDial');\nexport const VSpeedDial = genericComponent()({\n  name: 'VSpeedDial',\n  props: makeVSpeedDialProps(),\n  emits: {\n    'update:modelValue': value => true\n  },\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const model = useProxiedModel(props, 'modelValue');\n    const menuRef = ref();\n    const location = computed(() => {\n      const [y, x = 'center'] = props.location?.split(' ') ?? [];\n      return `${y} ${x}`;\n    });\n    const locationClasses = computed(() => ({\n      [`v-speed-dial__content--${location.value.replace(' ', '-')}`]: true\n    }));\n    useRender(() => {\n      const menuProps = VMenu.filterProps(props);\n      return _createVNode(VMenu, _mergeProps(menuProps, {\n        \"modelValue\": model.value,\n        \"onUpdate:modelValue\": $event => model.value = $event,\n        \"class\": props.class,\n        \"style\": props.style,\n        \"contentClass\": ['v-speed-dial__content', locationClasses.value, props.contentClass],\n        \"location\": location.value,\n        \"ref\": menuRef,\n        \"transition\": \"fade-transition\"\n      }), { ...slots,\n        default: slotProps => _createVNode(VDefaultsProvider, {\n          \"defaults\": {\n            VBtn: {\n              size: 'small'\n            }\n          }\n        }, {\n          default: () => [_createVNode(MaybeTransition, {\n            \"appear\": true,\n            \"group\": true,\n            \"transition\": props.transition\n          }, {\n            default: () => [slots.default?.(slotProps)]\n          })]\n        })\n      });\n    });\n    return {};\n  }\n\n});","map":{"version":3,"mappings":"8EAAA;;AACA,0B,CAEA;;AAAA,SACSA,iBADT,QAC0B,+BAD1B;AAC0B,SACjBC,cADiB,EACDC,KADC,QACI,mBADJ,C,CAG1B;;AAAA,SACSC,kBADT,QAC2B,gCAD3B;AAC2B,SAClBC,eADkB,QACH,mCADG;AACH,SACfC,eADe,QACA,iCADA,C,CAGxB;;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,KAA9B;AAAmC,SAC1BC,gBAD0B,EACRC,YADQ,EACMC,SADN,QACe,qBADf,C,CAGnC;;AAIA,OAAO,MAAMC,mBAAmB,GAAGF,YAAY,CAAC,EAC9C,GAAGN,kBAAkB,EADyB;AAE9C,KAAGF,cAAc,CAAC;AAChBW,UAAM,EAAE,CADQ;AAEhBC,YAAQ,EAAE,CAFM;AAGhBC,aAAS,EAAE,CAHK;AAIhBC,cAAU,EAAE,GAJI;AAKhBC,YAAQ,EAAE,YALM;AAMhBC,cAAU,EAAE;AANI,GAAD;AAF6B,CAAD,EAU5C,YAV4C,CAAxC;AAYP,OAAO,MAAMC,UAAU,GAAGV,gBAAgB,GAAiB;AACzDW,MAAI,EAAE,YADmD;AAGzDC,OAAK,EAAET,mBAAmB,EAH+B;AAKzDU,OAAK,EAAE;AACL,yBAAsBC,KAAc,IAAK;AADpC,GALkD;;AASzDC,OAAKA,CAAEH,KAAFG,EAAOC,IAAPD,EAAoB;AAAA,QAAX;AAAEE;AAAF,QAASD,IAAE;AACvB,UAAME,KAAK,GAAGtB,eAAe,CAACgB,KAAD,EAAQ,YAAR,CAA7B;AAEA,UAAMO,OAAO,GAAGpB,GAAG,EAAnB;AAEA,UAAMS,QAAQ,GAAGV,QAAQ,CAAS,MAAM;AACtC,YAAM,CAACsB,CAAD,EAAIC,CAAC,GAAG,QAAR,IAAoBT,KAAK,CAACJ,QAANI,EAAgBU,KAAhBV,CAAsB,GAAtBA,KAA8B,EAAxD;AAEA,aAAO,GAAGQ,CAAC,IAAIC,CAAC,EAAhB;AACD,KAJwB,CAAzB;AAMA,UAAME,eAAe,GAAGzB,QAAQ,CAAC,OAAO;AACtC,OAAC,0BAA0BU,QAAQ,CAACM,KAATN,CAAegB,OAAfhB,CAAuB,GAAvBA,EAA4B,GAA5BA,CAAgC,EAA3D,GAAgE;AAD1B,KAAP,CAAD,CAAhC;AAIAN,aAAS,CAAC,MAAM;AACd,YAAMuB,SAAS,GAAG/B,KAAK,CAACgC,WAANhC,CAAkBkB,KAAlBlB,CAAlB;AAEA,6CAES+B,SAFT,EAEkB;AAAA,sBACJP,KAAK,CAACJ,KADF;AACO,yCAAXI,KAAK,CAACJ,KAANI,GAAWS,MADP;AACO,iBACbf,KAAK,CAACgB,KAFA;AAEK,iBACXhB,KAAK,CAACiB,KAHA;AAGK,wBACL,CACZ,uBADY,EAEZN,eAAe,CAACT,KAFJ,EAGZF,KAAK,CAACkB,YAHM,CAJA;AAQb,oBACUtB,QAAQ,CAACM,KATN;AASW,eACnBK,OAVQ;AAUD;AAVC,OAFlB,GAYiB,EAIX,GAAGF,KAJQ;AAKXc,eAAO,EAAEC,SAAS;AAAA,sBAEJ;AACRC,gBAAI,EAAE;AACJC,kBAAI,EAAE;AADF;AADE;AAFI,WAMb;AAAAH;AAAA;AAAA;AAAA,0BAKcnB,KAAK,CAACH;AALpB,aAK8B;AAAAsB,4BAE3Bd,KAAK,CAACc,OAANd,GAAgBe,SAAhBf,CAF2B;AAAA,WAL9B;AAAA,SANa;AALP,OAZjB;AAqCD,KAxCQ,CAATf;AA0CA,WAAO,EAAP;AACF;;AAnEyD,CAAjB,CAAnC","names":["VDefaultsProvider","makeVMenuProps","VMenu","makeComponentProps","useProxiedModel","MaybeTransition","computed","ref","genericComponent","propsFactory","useRender","makeVSpeedDialProps","offset","minWidth","openDelay","closeDelay","location","transition","VSpeedDial","name","props","emits","value","setup","_ref","slots","model","menuRef","y","x","split","locationClasses","replace","menuProps","filterProps","$event","class","style","contentClass","default","slotProps","VBtn","size"],"sources":["../../../src/components/VSpeedDial/VSpeedDial.tsx"],"sourcesContent":["// Styles\nimport './VSpeedDial.sass'\n\n// Components\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { makeVMenuProps, VMenu } from '@/components/VMenu/VMenu'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { MaybeTransition } from '@/composables/transition'\n\n// Utilities\nimport { computed, ref } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { OverlaySlots } from '@/components/VOverlay/VOverlay'\nimport type { Anchor } from '@/util'\n\nexport const makeVSpeedDialProps = propsFactory({\n  ...makeComponentProps(),\n  ...makeVMenuProps({\n    offset: 8,\n    minWidth: 0,\n    openDelay: 0,\n    closeDelay: 100,\n    location: 'top center' as const,\n    transition: 'scale-transition',\n  }),\n}, 'VSpeedDial')\n\nexport const VSpeedDial = genericComponent<OverlaySlots>()({\n  name: 'VSpeedDial',\n\n  props: makeVSpeedDialProps(),\n\n  emits: {\n    'update:modelValue': (value: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const model = useProxiedModel(props, 'modelValue')\n\n    const menuRef = ref<VMenu>()\n\n    const location = computed<Anchor>(() => {\n      const [y, x = 'center'] = props.location?.split(' ') ?? []\n\n      return `${y} ${x}` as Anchor\n    })\n\n    const locationClasses = computed(() => ({\n      [`v-speed-dial__content--${location.value.replace(' ', '-')}`]: true,\n    }))\n\n    useRender(() => {\n      const menuProps = VMenu.filterProps(props)\n\n      return (\n        <VMenu\n          { ...menuProps }\n          v-model={ model.value }\n          class={ props.class }\n          style={ props.style }\n          contentClass={[\n            'v-speed-dial__content',\n            locationClasses.value,\n            props.contentClass,\n          ]}\n          location={ location.value }\n          ref={ menuRef }\n          transition=\"fade-transition\"\n        >\n          {{\n            ...slots,\n            default: slotProps => (\n              <VDefaultsProvider\n                defaults={{\n                  VBtn: {\n                    size: 'small',\n                  },\n                }}\n              >\n                <MaybeTransition\n                  appear\n                  group\n                  transition={ props.transition }\n                >\n                  { slots.default?.(slotProps) }\n                </MaybeTransition>\n              </VDefaultsProvider>\n            ),\n          }}\n        </VMenu>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VSpeedDial = InstanceType<typeof VSpeedDial>\n"]},"metadata":{},"sourceType":"module"}
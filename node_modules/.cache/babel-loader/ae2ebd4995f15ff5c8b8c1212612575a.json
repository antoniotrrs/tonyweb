{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { createVNode as _createVNode } from \"vue\"; // Styles\n\nimport \"./VSliderTrack.css\"; // Components\n\nimport { VSliderSymbol } from \"./slider.js\"; // Composables\n\nimport { useBackgroundColor } from \"../../composables/color.js\";\nimport { makeComponentProps } from \"../../composables/component.js\";\nimport { useRounded } from \"../../composables/rounded.js\"; // Utilities\n\nimport { computed, inject } from 'vue';\nimport { convertToUnit, genericComponent, propsFactory, useRender } from \"../../util/index.js\"; // Types\n\nexport const makeVSliderTrackProps = propsFactory({\n  start: {\n    type: Number,\n    required: true\n  },\n  stop: {\n    type: Number,\n    required: true\n  },\n  ...makeComponentProps()\n}, 'VSliderTrack');\nexport const VSliderTrack = genericComponent()({\n  name: 'VSliderTrack',\n  props: makeVSliderTrackProps(),\n  emits: {},\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const slider = inject(VSliderSymbol);\n    if (!slider) throw new Error('[Vuetify] v-slider-track must be inside v-slider or v-range-slider');\n    const {\n      color,\n      parsedTicks,\n      rounded,\n      showTicks,\n      tickSize,\n      trackColor,\n      trackFillColor,\n      trackSize,\n      vertical,\n      min,\n      max,\n      indexFromEnd\n    } = slider;\n    const {\n      roundedClasses\n    } = useRounded(rounded);\n    const {\n      backgroundColorClasses: trackFillColorClasses,\n      backgroundColorStyles: trackFillColorStyles\n    } = useBackgroundColor(trackFillColor);\n    const {\n      backgroundColorClasses: trackColorClasses,\n      backgroundColorStyles: trackColorStyles\n    } = useBackgroundColor(trackColor);\n    const startDir = computed(() => `inset-${vertical.value ? 'block' : 'inline'}-${indexFromEnd.value ? 'end' : 'start'}`);\n    const endDir = computed(() => vertical.value ? 'height' : 'width');\n    const backgroundStyles = computed(() => {\n      return {\n        [startDir.value]: '0%',\n        [endDir.value]: '100%'\n      };\n    });\n    const trackFillWidth = computed(() => props.stop - props.start);\n    const trackFillStyles = computed(() => {\n      return {\n        [startDir.value]: convertToUnit(props.start, '%'),\n        [endDir.value]: convertToUnit(trackFillWidth.value, '%')\n      };\n    });\n    const computedTicks = computed(() => {\n      if (!showTicks.value) return [];\n      const ticks = vertical.value ? parsedTicks.value.slice().reverse() : parsedTicks.value;\n      return ticks.map((tick, index) => {\n        const directionValue = tick.value !== min.value && tick.value !== max.value ? convertToUnit(tick.position, '%') : undefined;\n        return _createVNode(\"div\", {\n          \"key\": tick.value,\n          \"class\": ['v-slider-track__tick', {\n            'v-slider-track__tick--filled': tick.position >= props.start && tick.position <= props.stop,\n            'v-slider-track__tick--first': tick.value === min.value,\n            'v-slider-track__tick--last': tick.value === max.value\n          }],\n          \"style\": {\n            [startDir.value]: directionValue\n          }\n        }, [(tick.label || slots['tick-label']) && _createVNode(\"div\", {\n          \"class\": \"v-slider-track__tick-label\"\n        }, [slots['tick-label']?.({\n          tick,\n          index\n        }) ?? tick.label])]);\n      });\n    });\n    useRender(() => {\n      return _createVNode(\"div\", {\n        \"class\": ['v-slider-track', roundedClasses.value, props.class],\n        \"style\": [{\n          '--v-slider-track-size': convertToUnit(trackSize.value),\n          '--v-slider-tick-size': convertToUnit(tickSize.value)\n        }, props.style]\n      }, [_createVNode(\"div\", {\n        \"class\": ['v-slider-track__background', trackColorClasses.value, {\n          'v-slider-track__background--opacity': !!color.value || !trackFillColor.value\n        }],\n        \"style\": { ...backgroundStyles.value,\n          ...trackColorStyles.value\n        }\n      }, null), _createVNode(\"div\", {\n        \"class\": ['v-slider-track__fill', trackFillColorClasses.value],\n        \"style\": { ...trackFillStyles.value,\n          ...trackFillColorStyles.value\n        }\n      }, null), showTicks.value && _createVNode(\"div\", {\n        \"class\": ['v-slider-track__ticks', {\n          'v-slider-track__ticks--always-show': showTicks.value === 'always'\n        }]\n      }, [computedTicks.value])]);\n    });\n    return {};\n  }\n\n});","map":{"version":3,"mappings":"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","names":["VSliderSymbol","useBackgroundColor","makeComponentProps","useRounded","computed","inject","convertToUnit","genericComponent","propsFactory","useRender","makeVSliderTrackProps","start","type","Number","required","stop","VSliderTrack","name","props","emits","setup","_ref","slots","slider","Error","color","parsedTicks","rounded","showTicks","tickSize","trackColor","trackFillColor","trackSize","vertical","min","max","indexFromEnd","roundedClasses","backgroundColorClasses","trackFillColorClasses","backgroundColorStyles","trackFillColorStyles","trackColorClasses","trackColorStyles","startDir","value","endDir","backgroundStyles","trackFillWidth","trackFillStyles","computedTicks","ticks","slice","reverse","map","tick","index","directionValue","position","undefined","label","_createVNode","class","style"],"sources":["../../../src/components/VSlider/VSliderTrack.tsx"],"sourcesContent":["// Styles\nimport './VSliderTrack.sass'\n\n// Components\nimport { VSliderSymbol } from './slider'\n\n// Composables\nimport { useBackgroundColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { useRounded } from '@/composables/rounded'\n\n// Utilities\nimport { computed, inject } from 'vue'\nimport { convertToUnit, genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { Tick } from './slider'\n\nexport type VSliderTrackSlots = {\n  'tick-label': { tick: Tick, index: number }\n}\n\nexport const makeVSliderTrackProps = propsFactory({\n  start: {\n    type: Number,\n    required: true,\n  },\n  stop: {\n    type: Number,\n    required: true,\n  },\n\n  ...makeComponentProps(),\n}, 'VSliderTrack')\n\nexport const VSliderTrack = genericComponent<VSliderTrackSlots>()({\n  name: 'VSliderTrack',\n\n  props: makeVSliderTrackProps(),\n\n  emits: {},\n\n  setup (props, { slots }) {\n    const slider = inject(VSliderSymbol)\n\n    if (!slider) throw new Error('[Vuetify] v-slider-track must be inside v-slider or v-range-slider')\n\n    const {\n      color,\n      parsedTicks,\n      rounded,\n      showTicks,\n      tickSize,\n      trackColor,\n      trackFillColor,\n      trackSize,\n      vertical,\n      min,\n      max,\n      indexFromEnd,\n    } = slider\n\n    const { roundedClasses } = useRounded(rounded)\n\n    const {\n      backgroundColorClasses: trackFillColorClasses,\n      backgroundColorStyles: trackFillColorStyles,\n    } = useBackgroundColor(trackFillColor)\n\n    const {\n      backgroundColorClasses: trackColorClasses,\n      backgroundColorStyles: trackColorStyles,\n    } = useBackgroundColor(trackColor)\n\n    const startDir = computed(() => `inset-${vertical.value ? 'block' : 'inline'}-${indexFromEnd.value ? 'end' : 'start'}`)\n    const endDir = computed(() => vertical.value ? 'height' : 'width')\n\n    const backgroundStyles = computed(() => {\n      return {\n        [startDir.value]: '0%',\n        [endDir.value]: '100%',\n      }\n    })\n\n    const trackFillWidth = computed(() => props.stop - props.start)\n\n    const trackFillStyles = computed(() => {\n      return {\n        [startDir.value]: convertToUnit(props.start, '%'),\n        [endDir.value]: convertToUnit(trackFillWidth.value, '%'),\n      }\n    })\n\n    const computedTicks = computed(() => {\n      if (!showTicks.value) return []\n\n      const ticks = vertical.value ? parsedTicks.value.slice().reverse() : parsedTicks.value\n\n      return ticks.map((tick, index) => {\n        const directionValue = tick.value !== min.value && tick.value !== max.value ? convertToUnit(tick.position, '%') : undefined\n\n        return (\n          <div\n            key={ tick.value }\n            class={[\n              'v-slider-track__tick',\n              {\n                'v-slider-track__tick--filled': tick.position >= props.start && tick.position <= props.stop,\n                'v-slider-track__tick--first': tick.value === min.value,\n                'v-slider-track__tick--last': tick.value === max.value,\n              },\n            ]}\n            style={{ [startDir.value]: directionValue }}\n          >\n            {\n              (tick.label || slots['tick-label']) && (\n                <div class=\"v-slider-track__tick-label\">\n                  { slots['tick-label']?.({ tick, index }) ?? tick.label }\n                </div>\n              )\n            }\n          </div>\n        )\n      })\n    })\n\n    useRender(() => {\n      return (\n        <div\n          class={[\n            'v-slider-track',\n            roundedClasses.value,\n            props.class,\n          ]}\n          style={[\n            {\n              '--v-slider-track-size': convertToUnit(trackSize.value),\n              '--v-slider-tick-size': convertToUnit(tickSize.value),\n            },\n            props.style,\n          ]}\n        >\n          <div\n            class={[\n              'v-slider-track__background',\n              trackColorClasses.value,\n              {\n                'v-slider-track__background--opacity': !!color.value || !trackFillColor.value,\n              },\n            ]}\n            style={{\n              ...backgroundStyles.value,\n              ...trackColorStyles.value,\n            }}\n          />\n          <div\n            class={[\n              'v-slider-track__fill',\n              trackFillColorClasses.value,\n            ]}\n            style={{\n              ...trackFillStyles.value,\n              ...trackFillColorStyles.value,\n            }}\n          />\n\n          { showTicks.value && (\n            <div\n              class={[\n                'v-slider-track__ticks',\n                {\n                  'v-slider-track__ticks--always-show': showTicks.value === 'always',\n                },\n              ]}\n            >\n              { computedTicks.value }\n            </div>\n          )}\n        </div>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VSliderTrack = InstanceType<typeof VSliderTrack>\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"/Users/antoniotorres/Documents/tony/tonyweb/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _typeof from \"/Users/antoniotorres/Documents/tony/tonyweb/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport _toConsumableArray from \"/Users/antoniotorres/Documents/tony/tonyweb/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _createForOfIteratorHelper from \"/Users/antoniotorres/Documents/tony/tonyweb/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.error.cause.js\";\n// Composables\nimport { useProxiedModel } from \"../../../composables/proxiedModel.js\"; // Utilities\n\nimport { computed, inject, provide, shallowRef } from 'vue';\nimport { deepEqual, propsFactory, wrapInArray } from \"../../../util/index.js\"; // Types\n\nvar singleSelectStrategy = {\n  showSelectAll: false,\n  allSelected: function allSelected() {\n    return [];\n  },\n  select: function select(_ref) {\n    var _items$;\n\n    var items = _ref.items,\n        value = _ref.value;\n    return new Set(value ? [(_items$ = items[0]) === null || _items$ === void 0 ? void 0 : _items$.value] : []);\n  },\n  selectAll: function selectAll(_ref2) {\n    var selected = _ref2.selected;\n    return selected;\n  }\n};\nvar pageSelectStrategy = {\n  showSelectAll: true,\n  allSelected: function allSelected(_ref3) {\n    var currentPage = _ref3.currentPage;\n    return currentPage;\n  },\n  select: function select(_ref4) {\n    var items = _ref4.items,\n        value = _ref4.value,\n        selected = _ref4.selected;\n\n    var _iterator = _createForOfIteratorHelper(items),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var item = _step.value;\n        if (value) selected.add(item.value);else selected.delete(item.value);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    return selected;\n  },\n  selectAll: function selectAll(_ref5) {\n    var value = _ref5.value,\n        currentPage = _ref5.currentPage,\n        selected = _ref5.selected;\n    return pageSelectStrategy.select({\n      items: currentPage,\n      value: value,\n      selected: selected\n    });\n  }\n};\nvar allSelectStrategy = {\n  showSelectAll: true,\n  allSelected: function allSelected(_ref6) {\n    var allItems = _ref6.allItems;\n    return allItems;\n  },\n  select: function select(_ref7) {\n    var items = _ref7.items,\n        value = _ref7.value,\n        selected = _ref7.selected;\n\n    var _iterator2 = _createForOfIteratorHelper(items),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var item = _step2.value;\n        if (value) selected.add(item.value);else selected.delete(item.value);\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n\n    return selected;\n  },\n  selectAll: function selectAll(_ref8) {\n    var value = _ref8.value,\n        allItems = _ref8.allItems,\n        selected = _ref8.selected;\n    return allSelectStrategy.select({\n      items: allItems,\n      value: value,\n      selected: selected\n    });\n  }\n};\nexport var makeDataTableSelectProps = propsFactory({\n  showSelect: Boolean,\n  selectStrategy: {\n    type: [String, Object],\n    default: 'page'\n  },\n  modelValue: {\n    type: Array,\n    default: function _default() {\n      return [];\n    }\n  },\n  valueComparator: {\n    type: Function,\n    default: deepEqual\n  }\n}, 'DataTable-select');\nexport var VDataTableSelectionSymbol = Symbol.for('vuetify:data-table-selection');\nexport function provideSelection(props, _ref9) {\n  var allItems = _ref9.allItems,\n      currentPage = _ref9.currentPage;\n  var selected = useProxiedModel(props, 'modelValue', props.modelValue, function (v) {\n    return new Set(wrapInArray(v).map(function (v) {\n      var _allItems$value$find$, _allItems$value$find;\n\n      return (_allItems$value$find$ = (_allItems$value$find = allItems.value.find(function (item) {\n        return props.valueComparator(v, item.value);\n      })) === null || _allItems$value$find === void 0 ? void 0 : _allItems$value$find.value) !== null && _allItems$value$find$ !== void 0 ? _allItems$value$find$ : v;\n    }));\n  }, function (v) {\n    return _toConsumableArray(v.values());\n  });\n  var allSelectable = computed(function () {\n    return allItems.value.filter(function (item) {\n      return item.selectable;\n    });\n  });\n  var currentPageSelectable = computed(function () {\n    return currentPage.value.filter(function (item) {\n      return item.selectable;\n    });\n  });\n  var selectStrategy = computed(function () {\n    if (_typeof(props.selectStrategy) === 'object') return props.selectStrategy;\n\n    switch (props.selectStrategy) {\n      case 'single':\n        return singleSelectStrategy;\n\n      case 'all':\n        return allSelectStrategy;\n\n      case 'page':\n      default:\n        return pageSelectStrategy;\n    }\n  });\n  var lastSelectedIndex = shallowRef(null);\n\n  function isSelected(items) {\n    return wrapInArray(items).every(function (item) {\n      return selected.value.has(item.value);\n    });\n  }\n\n  function isSomeSelected(items) {\n    return wrapInArray(items).some(function (item) {\n      return selected.value.has(item.value);\n    });\n  }\n\n  function select(items, value) {\n    var newSelected = selectStrategy.value.select({\n      items: items,\n      value: value,\n      selected: new Set(selected.value)\n    });\n    selected.value = newSelected;\n  }\n\n  function toggleSelect(item, index, event) {\n    var _index;\n\n    var items = [];\n    index = (_index = index) !== null && _index !== void 0 ? _index : currentPage.value.findIndex(function (i) {\n      return i.value === item.value;\n    });\n\n    if (props.selectStrategy !== 'single' && event !== null && event !== void 0 && event.shiftKey && lastSelectedIndex.value !== null) {\n      var _sort = [lastSelectedIndex.value, index].sort(function (a, b) {\n        return a - b;\n      }),\n          _sort2 = _slicedToArray(_sort, 2),\n          start = _sort2[0],\n          end = _sort2[1];\n\n      items.push.apply(items, _toConsumableArray(currentPage.value.slice(start, end + 1)));\n    } else {\n      items.push(item);\n      lastSelectedIndex.value = index;\n    }\n\n    select(items, !isSelected([item]));\n  }\n\n  function selectAll(value) {\n    var newSelected = selectStrategy.value.selectAll({\n      value: value,\n      allItems: allSelectable.value,\n      currentPage: currentPageSelectable.value,\n      selected: new Set(selected.value)\n    });\n    selected.value = newSelected;\n  }\n\n  var someSelected = computed(function () {\n    return selected.value.size > 0;\n  });\n  var allSelected = computed(function () {\n    var items = selectStrategy.value.allSelected({\n      allItems: allSelectable.value,\n      currentPage: currentPageSelectable.value\n    });\n    return !!items.length && isSelected(items);\n  });\n  var showSelectAll = computed(function () {\n    return selectStrategy.value.showSelectAll;\n  });\n  var data = {\n    toggleSelect: toggleSelect,\n    select: select,\n    selectAll: selectAll,\n    isSelected: isSelected,\n    isSomeSelected: isSomeSelected,\n    someSelected: someSelected,\n    allSelected: allSelected,\n    showSelectAll: showSelectAll,\n    lastSelectedIndex: lastSelectedIndex,\n    selectStrategy: selectStrategy\n  };\n  provide(VDataTableSelectionSymbol, data);\n  return data;\n}\nexport function useSelection() {\n  var data = inject(VDataTableSelectionSymbol);\n  if (!data) throw new Error('Missing selection!');\n  return data;\n}","map":{"version":3,"mappings":"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","names":["useProxiedModel","computed","inject","provide","shallowRef","deepEqual","propsFactory","wrapInArray","singleSelectStrategy","showSelectAll","allSelected","select","_ref","items","value","Set","selectAll","_ref2","selected","pageSelectStrategy","_ref3","currentPage","_ref4","item","add","delete","_ref5","allSelectStrategy","_ref6","allItems","_ref7","_ref8","makeDataTableSelectProps","showSelect","Boolean","selectStrategy","type","String","Object","default","modelValue","Array","valueComparator","Function","VDataTableSelectionSymbol","Symbol","for","provideSelection","props","_ref9","v","map","find","values","allSelectable","filter","selectable","currentPageSelectable","lastSelectedIndex","isSelected","every","has","isSomeSelected","some","newSelected","toggleSelect","index","event","findIndex","i","shiftKey","sort","a","b","start","end","push","slice","someSelected","size","length","data","useSelection","Error"],"sources":["../../../../src/components/VDataTable/composables/select.ts"],"sourcesContent":["// Composables\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed, inject, provide, shallowRef } from 'vue'\nimport { deepEqual, propsFactory, wrapInArray } from '@/util'\n\n// Types\nimport type { InjectionKey, PropType, Ref } from 'vue'\nimport type { DataTableItemProps } from './items'\nimport type { EventProp } from '@/util'\n\nexport interface SelectableItem {\n  value: any\n  selectable: boolean\n}\n\nexport interface DataTableSelectStrategy {\n  showSelectAll: boolean\n  allSelected: (data: {\n    allItems: SelectableItem[]\n    currentPage: SelectableItem[]\n  }) => SelectableItem[]\n  select: (data: {\n    items: SelectableItem[]\n    value: boolean\n    selected: Set<unknown>\n  }) => Set<unknown>\n  selectAll: (data: {\n    value: boolean\n    allItems: SelectableItem[]\n    currentPage: SelectableItem[]\n    selected: Set<unknown>\n  }) => Set<unknown>\n}\n\ntype SelectionProps = Pick<DataTableItemProps, 'itemValue'> & {\n  modelValue: readonly any[]\n  selectStrategy: 'single' | 'page' | 'all'\n  valueComparator: typeof deepEqual\n  'onUpdate:modelValue': EventProp<[any[]]> | undefined\n}\n\nconst singleSelectStrategy: DataTableSelectStrategy = {\n  showSelectAll: false,\n  allSelected: () => [],\n  select: ({ items, value }) => {\n    return new Set(value ? [items[0]?.value] : [])\n  },\n  selectAll: ({ selected }) => selected,\n}\n\nconst pageSelectStrategy: DataTableSelectStrategy = {\n  showSelectAll: true,\n  allSelected: ({ currentPage }) => currentPage,\n  select: ({ items, value, selected }) => {\n    for (const item of items) {\n      if (value) selected.add(item.value)\n      else selected.delete(item.value)\n    }\n\n    return selected\n  },\n  selectAll: ({ value, currentPage, selected }) => pageSelectStrategy.select({ items: currentPage, value, selected }),\n}\n\nconst allSelectStrategy: DataTableSelectStrategy = {\n  showSelectAll: true,\n  allSelected: ({ allItems }) => allItems,\n  select: ({ items, value, selected }) => {\n    for (const item of items) {\n      if (value) selected.add(item.value)\n      else selected.delete(item.value)\n    }\n\n    return selected\n  },\n  selectAll: ({ value, allItems, selected }) => allSelectStrategy.select({ items: allItems, value, selected }),\n}\n\nexport const makeDataTableSelectProps = propsFactory({\n  showSelect: Boolean,\n  selectStrategy: {\n    type: [String, Object] as PropType<'single' | 'page' | 'all'>,\n    default: 'page',\n  },\n  modelValue: {\n    type: Array as PropType<readonly any[]>,\n    default: () => ([]),\n  },\n  valueComparator: {\n    type: Function as PropType<typeof deepEqual>,\n    default: deepEqual,\n  },\n}, 'DataTable-select')\n\nexport const VDataTableSelectionSymbol: InjectionKey<ReturnType<typeof provideSelection>> = Symbol.for('vuetify:data-table-selection')\n\nexport function provideSelection (\n  props: SelectionProps,\n  { allItems, currentPage }: { allItems: Ref<SelectableItem[]>, currentPage: Ref<SelectableItem[]> }\n) {\n  const selected = useProxiedModel(props, 'modelValue', props.modelValue, v => {\n    return new Set(wrapInArray(v).map(v => {\n      return allItems.value.find(item => props.valueComparator(v, item.value))?.value ?? v\n    }))\n  }, v => {\n    return [...v.values()]\n  })\n\n  const allSelectable = computed(() => allItems.value.filter(item => item.selectable))\n  const currentPageSelectable = computed(() => currentPage.value.filter(item => item.selectable))\n\n  const selectStrategy = computed(() => {\n    if (typeof props.selectStrategy === 'object') return props.selectStrategy\n\n    switch (props.selectStrategy) {\n      case 'single': return singleSelectStrategy\n      case 'all': return allSelectStrategy\n      case 'page':\n      default: return pageSelectStrategy\n    }\n  })\n\n  const lastSelectedIndex = shallowRef<number | null>(null)\n\n  function isSelected (items: SelectableItem | SelectableItem[]) {\n    return wrapInArray(items).every(item => selected.value.has(item.value))\n  }\n\n  function isSomeSelected (items: SelectableItem | SelectableItem[]) {\n    return wrapInArray(items).some(item => selected.value.has(item.value))\n  }\n\n  function select (items: SelectableItem[], value: boolean) {\n    const newSelected = selectStrategy.value.select({\n      items,\n      value,\n      selected: new Set(selected.value),\n    })\n\n    selected.value = newSelected\n  }\n\n  function toggleSelect (item: SelectableItem, index?: number, event?: MouseEvent) {\n    const items = []\n    index = index ?? currentPage.value.findIndex(i => i.value === item.value)\n\n    if (props.selectStrategy !== 'single' && event?.shiftKey && lastSelectedIndex.value !== null) {\n      const [start, end] = [lastSelectedIndex.value, index].sort((a, b) => a - b)\n\n      items.push(...currentPage.value.slice(start, end + 1))\n    } else {\n      items.push(item)\n      lastSelectedIndex.value = index\n    }\n\n    select(items, !isSelected([item]))\n  }\n\n  function selectAll (value: boolean) {\n    const newSelected = selectStrategy.value.selectAll({\n      value,\n      allItems: allSelectable.value,\n      currentPage: currentPageSelectable.value,\n      selected: new Set(selected.value),\n    })\n\n    selected.value = newSelected\n  }\n\n  const someSelected = computed(() => selected.value.size > 0)\n  const allSelected = computed(() => {\n    const items = selectStrategy.value.allSelected({\n      allItems: allSelectable.value,\n      currentPage: currentPageSelectable.value,\n    })\n    return !!items.length && isSelected(items)\n  })\n  const showSelectAll = computed(() => selectStrategy.value.showSelectAll)\n\n  const data = {\n    toggleSelect,\n    select,\n    selectAll,\n    isSelected,\n    isSomeSelected,\n    someSelected,\n    allSelected,\n    showSelectAll,\n    lastSelectedIndex,\n    selectStrategy,\n  }\n\n  provide(VDataTableSelectionSymbol, data)\n\n  return data\n}\n\nexport function useSelection () {\n  const data = inject(VDataTableSelectionSymbol)\n\n  if (!data) throw new Error('Missing selection!')\n\n  return data\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _toConsumableArray from \"/Users/antoniotorres/Documents/tony/tonyweb/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"/Users/antoniotorres/Documents/tony/tonyweb/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array.at.js\";\nimport \"core-js/modules/es.string.at-alternative.js\";\nimport { Fragment as _Fragment, createVNode as _createVNode, mergeProps as _mergeProps, createTextVNode as _createTextVNode } from \"vue\"; // Styles\n\nimport \"./VAutocomplete.css\"; // Components\n\nimport { VAvatar } from \"../VAvatar/index.js\";\nimport { VCheckboxBtn } from \"../VCheckbox/index.js\";\nimport { VChip } from \"../VChip/index.js\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.js\";\nimport { VIcon } from \"../VIcon/index.js\";\nimport { VList, VListItem } from \"../VList/index.js\";\nimport { VMenu } from \"../VMenu/index.js\";\nimport { makeSelectProps } from \"../VSelect/VSelect.js\";\nimport { makeVTextFieldProps, VTextField } from \"../VTextField/VTextField.js\";\nimport { VVirtualScroll } from \"../VVirtualScroll/index.js\"; // Composables\n\nimport { useScrolling } from \"../VSelect/useScrolling.js\";\nimport { useTextColor } from \"../../composables/color.js\";\nimport { highlightResult, makeFilterProps, useFilter } from \"../../composables/filter.js\";\nimport { useForm } from \"../../composables/form.js\";\nimport { forwardRefs } from \"../../composables/forwardRefs.js\";\nimport { useItems } from \"../../composables/list-items.js\";\nimport { useLocale } from \"../../composables/locale.js\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.js\";\nimport { makeTransitionProps } from \"../../composables/transition.js\"; // Utilities\n\nimport { computed, mergeProps, nextTick, ref, shallowRef, watch } from 'vue';\nimport { checkPrintable, deepEqual, ensureValidVNode, genericComponent, IN_BROWSER, matchesSelector, noop, omit, propsFactory, useRender, wrapInArray } from \"../../util/index.js\"; // Types\n\nexport var makeVAutocompleteProps = propsFactory(_objectSpread(_objectSpread(_objectSpread(_objectSpread({\n  autoSelectFirst: {\n    type: [Boolean, String]\n  },\n  clearOnSelect: Boolean,\n  search: String\n}, makeFilterProps({\n  filterKeys: ['title']\n})), makeSelectProps()), omit(makeVTextFieldProps({\n  modelValue: null,\n  role: 'combobox'\n}), ['validationValue', 'dirty', 'appendInnerIcon'])), makeTransitionProps({\n  transition: false\n})), 'VAutocomplete');\nexport var VAutocomplete = genericComponent()({\n  name: 'VAutocomplete',\n  props: makeVAutocompleteProps(),\n  emits: {\n    'update:focused': function updateFocused(focused) {\n      return true;\n    },\n    'update:search': function updateSearch(value) {\n      return true;\n    },\n    'update:modelValue': function updateModelValue(value) {\n      return true;\n    },\n    'update:menu': function updateMenu(value) {\n      return true;\n    }\n  },\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n\n    var _useLocale = useLocale(),\n        t = _useLocale.t;\n\n    var vTextFieldRef = ref();\n    var isFocused = shallowRef(false);\n    var isPristine = shallowRef(true);\n    var listHasFocus = shallowRef(false);\n    var vMenuRef = ref();\n    var vVirtualScrollRef = ref();\n    var selectionIndex = shallowRef(-1);\n    var color = computed(function () {\n      var _vTextFieldRef$value;\n\n      return (_vTextFieldRef$value = vTextFieldRef.value) === null || _vTextFieldRef$value === void 0 ? void 0 : _vTextFieldRef$value.color;\n    });\n\n    var _useItems = useItems(props),\n        items = _useItems.items,\n        transformIn = _useItems.transformIn,\n        transformOut = _useItems.transformOut;\n\n    var _useTextColor = useTextColor(color),\n        textColorClasses = _useTextColor.textColorClasses,\n        textColorStyles = _useTextColor.textColorStyles;\n\n    var search = useProxiedModel(props, 'search', '');\n    var model = useProxiedModel(props, 'modelValue', [], function (v) {\n      return transformIn(v === null ? [null] : wrapInArray(v));\n    }, function (v) {\n      var _transformed$;\n\n      var transformed = transformOut(v);\n      return props.multiple ? transformed : (_transformed$ = transformed[0]) !== null && _transformed$ !== void 0 ? _transformed$ : null;\n    });\n    var counterValue = computed(function () {\n      return typeof props.counterValue === 'function' ? props.counterValue(model.value) : typeof props.counterValue === 'number' ? props.counterValue : model.value.length;\n    });\n    var form = useForm(props);\n\n    var _useFilter = useFilter(props, items, function () {\n      return isPristine.value ? '' : search.value;\n    }),\n        filteredItems = _useFilter.filteredItems,\n        getMatches = _useFilter.getMatches;\n\n    var displayItems = computed(function () {\n      if (props.hideSelected) {\n        return filteredItems.value.filter(function (filteredItem) {\n          return !model.value.some(function (s) {\n            return s.value === filteredItem.value;\n          });\n        });\n      }\n\n      return filteredItems.value;\n    });\n    var hasChips = computed(function () {\n      return !!(props.chips || slots.chip);\n    });\n    var hasSelectionSlot = computed(function () {\n      return hasChips.value || !!slots.selection;\n    });\n    var selectedValues = computed(function () {\n      return model.value.map(function (selection) {\n        return selection.props.value;\n      });\n    });\n    var highlightFirst = computed(function () {\n      var _displayItems$value$;\n\n      var selectFirst = props.autoSelectFirst === true || props.autoSelectFirst === 'exact' && search.value === ((_displayItems$value$ = displayItems.value[0]) === null || _displayItems$value$ === void 0 ? void 0 : _displayItems$value$.title);\n      return selectFirst && displayItems.value.length > 0 && !isPristine.value && !listHasFocus.value;\n    });\n    var menuDisabled = computed(function () {\n      return props.hideNoData && !displayItems.value.length || form.isReadonly.value || form.isDisabled.value;\n    });\n\n    var _menu = useProxiedModel(props, 'menu');\n\n    var menu = computed({\n      get: function get() {\n        return _menu.value;\n      },\n      set: function set(v) {\n        var _vMenuRef$value;\n\n        if (_menu.value && !v && (_vMenuRef$value = vMenuRef.value) !== null && _vMenuRef$value !== void 0 && _vMenuRef$value.Î¨openChildren.size) return;\n        if (v && menuDisabled.value) return;\n        _menu.value = v;\n      }\n    });\n    var label = computed(function () {\n      return menu.value ? props.closeText : props.openText;\n    });\n    var listRef = ref();\n    var listEvents = useScrolling(listRef, vTextFieldRef);\n\n    function onClear(e) {\n      if (props.openOnClear) {\n        menu.value = true;\n      }\n\n      search.value = '';\n    }\n\n    function onMousedownControl() {\n      if (menuDisabled.value) return;\n      menu.value = true;\n    }\n\n    function onMousedownMenuIcon(e) {\n      if (menuDisabled.value) return;\n\n      if (isFocused.value) {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n\n      menu.value = !menu.value;\n    }\n\n    function onListKeydown(e) {\n      if (e.key !== ' ' && checkPrintable(e)) {\n        var _vTextFieldRef$value2;\n\n        (_vTextFieldRef$value2 = vTextFieldRef.value) === null || _vTextFieldRef$value2 === void 0 ? void 0 : _vTextFieldRef$value2.focus();\n      }\n    }\n\n    function onKeydown(e) {\n      var _vTextFieldRef$value3;\n\n      if (form.isReadonly.value) return;\n      var selectionStart = (_vTextFieldRef$value3 = vTextFieldRef.value) === null || _vTextFieldRef$value3 === void 0 ? void 0 : _vTextFieldRef$value3.selectionStart;\n      var length = model.value.length;\n\n      if (['Enter', 'ArrowDown', 'ArrowUp'].includes(e.key)) {\n        e.preventDefault();\n      }\n\n      if (['Enter', 'ArrowDown'].includes(e.key)) {\n        menu.value = true;\n      }\n\n      if (['Escape'].includes(e.key)) {\n        menu.value = false;\n      }\n\n      if (highlightFirst.value && ['Enter', 'Tab'].includes(e.key) && !model.value.some(function (_ref2) {\n        var value = _ref2.value;\n        return value === displayItems.value[0].value;\n      })) {\n        select(displayItems.value[0]);\n      }\n\n      if (e.key === 'ArrowDown' && highlightFirst.value) {\n        var _listRef$value;\n\n        (_listRef$value = listRef.value) === null || _listRef$value === void 0 ? void 0 : _listRef$value.focus('next');\n      }\n\n      if (['Backspace', 'Delete'].includes(e.key)) {\n        if (!props.multiple && hasSelectionSlot.value && model.value.length > 0 && !search.value) return select(model.value[0], false);\n\n        if (~selectionIndex.value) {\n          e.preventDefault();\n          var originalSelectionIndex = selectionIndex.value;\n          select(model.value[selectionIndex.value], false);\n          selectionIndex.value = originalSelectionIndex >= length - 1 ? length - 2 : originalSelectionIndex;\n        } else if (e.key === 'Backspace' && !search.value) {\n          selectionIndex.value = length - 1;\n        }\n\n        return;\n      }\n\n      if (!props.multiple) return;\n\n      if (e.key === 'ArrowLeft') {\n        if (selectionIndex.value < 0 && selectionStart && selectionStart > 0) return;\n        var prev = selectionIndex.value > -1 ? selectionIndex.value - 1 : length - 1;\n\n        if (model.value[prev]) {\n          selectionIndex.value = prev;\n        } else {\n          var _search$value$length, _search$value, _vTextFieldRef$value4;\n\n          var searchLength = (_search$value$length = (_search$value = search.value) === null || _search$value === void 0 ? void 0 : _search$value.length) !== null && _search$value$length !== void 0 ? _search$value$length : null;\n          selectionIndex.value = -1;\n          (_vTextFieldRef$value4 = vTextFieldRef.value) === null || _vTextFieldRef$value4 === void 0 ? void 0 : _vTextFieldRef$value4.setSelectionRange(searchLength, searchLength);\n        }\n      } else if (e.key === 'ArrowRight') {\n        if (selectionIndex.value < 0) return;\n        var next = selectionIndex.value + 1;\n\n        if (model.value[next]) {\n          selectionIndex.value = next;\n        } else {\n          var _vTextFieldRef$value5;\n\n          selectionIndex.value = -1;\n          (_vTextFieldRef$value5 = vTextFieldRef.value) === null || _vTextFieldRef$value5 === void 0 ? void 0 : _vTextFieldRef$value5.setSelectionRange(0, 0);\n        }\n      } else if (~selectionIndex.value && checkPrintable(e)) {\n        selectionIndex.value = -1;\n      }\n    }\n\n    function onChange(e) {\n      if (matchesSelector(vTextFieldRef.value, ':autofill') || matchesSelector(vTextFieldRef.value, ':-webkit-autofill')) {\n        var item = items.value.find(function (item) {\n          return item.title === e.target.value;\n        });\n\n        if (item) {\n          select(item);\n        }\n      }\n    }\n\n    function onAfterEnter() {\n      if (props.eager) {\n        var _vVirtualScrollRef$va;\n\n        (_vVirtualScrollRef$va = vVirtualScrollRef.value) === null || _vVirtualScrollRef$va === void 0 ? void 0 : _vVirtualScrollRef$va.calculateVisibleItems();\n      }\n    }\n\n    function onAfterLeave() {\n      if (isFocused.value) {\n        var _vTextFieldRef$value6;\n\n        isPristine.value = true;\n        (_vTextFieldRef$value6 = vTextFieldRef.value) === null || _vTextFieldRef$value6 === void 0 ? void 0 : _vTextFieldRef$value6.focus();\n      }\n    }\n\n    function onFocusin(e) {\n      isFocused.value = true;\n      setTimeout(function () {\n        listHasFocus.value = true;\n      });\n    }\n\n    function onFocusout(e) {\n      listHasFocus.value = false;\n    }\n\n    function onUpdateModelValue(v) {\n      if (v == null || v === '' && !props.multiple && !hasSelectionSlot.value) model.value = [];\n    }\n\n    var isSelecting = shallowRef(false);\n    /** @param set - null means toggle */\n\n    function select(item) {\n      var set = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      if (!item || item.props.disabled) return;\n\n      if (props.multiple) {\n        var index = model.value.findIndex(function (selection) {\n          return (props.valueComparator || deepEqual)(selection.value, item.value);\n        });\n        var add = set == null ? !~index : set;\n\n        if (~index) {\n          var value = add ? [].concat(_toConsumableArray(model.value), [item]) : _toConsumableArray(model.value);\n          value.splice(index, 1);\n          model.value = value;\n        } else if (add) {\n          model.value = [].concat(_toConsumableArray(model.value), [item]);\n        }\n\n        if (props.clearOnSelect) {\n          search.value = '';\n        }\n      } else {\n        var _add = set !== false;\n\n        model.value = _add ? [item] : [];\n        search.value = _add && !hasSelectionSlot.value ? item.title : ''; // watch for search watcher to trigger\n\n        nextTick(function () {\n          menu.value = false;\n          isPristine.value = true;\n        });\n      }\n    }\n\n    watch(isFocused, function (val, oldVal) {\n      if (val === oldVal) return;\n\n      if (val) {\n        var _model$value$at$props, _model$value$at;\n\n        isSelecting.value = true;\n        search.value = props.multiple || hasSelectionSlot.value ? '' : String((_model$value$at$props = (_model$value$at = model.value.at(-1)) === null || _model$value$at === void 0 ? void 0 : _model$value$at.props.title) !== null && _model$value$at$props !== void 0 ? _model$value$at$props : '');\n        isPristine.value = true;\n        nextTick(function () {\n          return isSelecting.value = false;\n        });\n      } else {\n        if (!props.multiple && search.value == null) model.value = [];\n        menu.value = false;\n        if (props.multiple || hasSelectionSlot.value) search.value = '';\n        selectionIndex.value = -1;\n      }\n    });\n    watch(search, function (val) {\n      if (!isFocused.value || isSelecting.value) return;\n      if (val) menu.value = true;\n      isPristine.value = !val;\n    });\n    watch(menu, function () {\n      if (!props.hideSelected && menu.value && model.value.length) {\n        var index = displayItems.value.findIndex(function (item) {\n          return model.value.some(function (s) {\n            return item.value === s.value;\n          });\n        });\n        IN_BROWSER && window.requestAnimationFrame(function () {\n          var _vVirtualScrollRef$va2;\n\n          index >= 0 && ((_vVirtualScrollRef$va2 = vVirtualScrollRef.value) === null || _vVirtualScrollRef$va2 === void 0 ? void 0 : _vVirtualScrollRef$va2.scrollToIndex(index));\n        });\n      }\n    });\n    watch(function () {\n      return props.items;\n    }, function (newVal, oldVal) {\n      if (menu.value) return;\n\n      if (isFocused.value && !oldVal.length && newVal.length) {\n        menu.value = true;\n      }\n    });\n    useRender(function () {\n      var hasList = !!(!props.hideNoData || displayItems.value.length || slots['prepend-item'] || slots['append-item'] || slots['no-data']);\n      var isDirty = model.value.length > 0;\n      var textFieldProps = VTextField.filterProps(props);\n      return _createVNode(VTextField, _mergeProps({\n        \"ref\": vTextFieldRef\n      }, textFieldProps, {\n        \"modelValue\": search.value,\n        \"onUpdate:modelValue\": [function ($event) {\n          return search.value = $event;\n        }, onUpdateModelValue],\n        \"focused\": isFocused.value,\n        \"onUpdate:focused\": function onUpdateFocused($event) {\n          return isFocused.value = $event;\n        },\n        \"validationValue\": model.externalValue,\n        \"counterValue\": counterValue.value,\n        \"dirty\": isDirty,\n        \"onChange\": onChange,\n        \"class\": ['v-autocomplete', \"v-autocomplete--\".concat(props.multiple ? 'multiple' : 'single'), {\n          'v-autocomplete--active-menu': menu.value,\n          'v-autocomplete--chips': !!props.chips,\n          'v-autocomplete--selection-slot': !!hasSelectionSlot.value,\n          'v-autocomplete--selecting-index': selectionIndex.value > -1\n        }, props.class],\n        \"style\": props.style,\n        \"readonly\": form.isReadonly.value,\n        \"placeholder\": isDirty ? undefined : props.placeholder,\n        \"onClick:clear\": onClear,\n        \"onMousedown:control\": onMousedownControl,\n        \"onKeydown\": onKeydown\n      }), _objectSpread(_objectSpread({}, slots), {}, {\n        default: function _default() {\n          return _createVNode(_Fragment, null, [_createVNode(VMenu, _mergeProps({\n            \"ref\": vMenuRef,\n            \"modelValue\": menu.value,\n            \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n              return menu.value = $event;\n            },\n            \"activator\": \"parent\",\n            \"contentClass\": \"v-autocomplete__content\",\n            \"disabled\": menuDisabled.value,\n            \"eager\": props.eager,\n            \"maxHeight\": 310,\n            \"openOnClick\": false,\n            \"closeOnContentClick\": false,\n            \"transition\": props.transition,\n            \"onAfterEnter\": onAfterEnter,\n            \"onAfterLeave\": onAfterLeave\n          }, props.menuProps), {\n            default: function _default() {\n              var _props$itemColor;\n\n              return [hasList && _createVNode(VList, _mergeProps({\n                \"ref\": listRef,\n                \"selected\": selectedValues.value,\n                \"selectStrategy\": props.multiple ? 'independent' : 'single-independent',\n                \"onMousedown\": function onMousedown(e) {\n                  return e.preventDefault();\n                },\n                \"onKeydown\": onListKeydown,\n                \"onFocusin\": onFocusin,\n                \"onFocusout\": onFocusout,\n                \"tabindex\": \"-1\",\n                \"aria-live\": \"polite\",\n                \"color\": (_props$itemColor = props.itemColor) !== null && _props$itemColor !== void 0 ? _props$itemColor : props.color\n              }, listEvents, props.listProps), {\n                default: function _default() {\n                  var _slots$prependItem, _slots$noData, _slots$noData2, _slots$appendItem;\n\n                  return [(_slots$prependItem = slots['prepend-item']) === null || _slots$prependItem === void 0 ? void 0 : _slots$prependItem.call(slots), !displayItems.value.length && !props.hideNoData && ((_slots$noData = (_slots$noData2 = slots['no-data']) === null || _slots$noData2 === void 0 ? void 0 : _slots$noData2.call(slots)) !== null && _slots$noData !== void 0 ? _slots$noData : _createVNode(VListItem, {\n                    \"key\": \"no-data\",\n                    \"title\": t(props.noDataText)\n                  }, null)), _createVNode(VVirtualScroll, {\n                    \"ref\": vVirtualScrollRef,\n                    \"renderless\": true,\n                    \"items\": displayItems.value,\n                    \"itemKey\": \"value\"\n                  }, {\n                    default: function _default(_ref3) {\n                      var _slots$item, _slots$item2;\n\n                      var item = _ref3.item,\n                          index = _ref3.index,\n                          itemRef = _ref3.itemRef;\n                      var itemProps = mergeProps(item.props, {\n                        ref: itemRef,\n                        key: item.value,\n                        active: highlightFirst.value && index === 0 ? true : undefined,\n                        onClick: function onClick() {\n                          return select(item, null);\n                        }\n                      });\n                      return (_slots$item = (_slots$item2 = slots.item) === null || _slots$item2 === void 0 ? void 0 : _slots$item2.call(slots, {\n                        item: item,\n                        index: index,\n                        props: itemProps\n                      })) !== null && _slots$item !== void 0 ? _slots$item : _createVNode(VListItem, _mergeProps(itemProps, {\n                        \"role\": \"option\"\n                      }), {\n                        prepend: function prepend(_ref4) {\n                          var isSelected = _ref4.isSelected;\n                          return _createVNode(_Fragment, null, [props.multiple && !props.hideSelected ? _createVNode(VCheckboxBtn, {\n                            \"key\": item.value,\n                            \"modelValue\": isSelected,\n                            \"ripple\": false,\n                            \"tabindex\": \"-1\"\n                          }, null) : undefined, item.props.prependAvatar && _createVNode(VAvatar, {\n                            \"image\": item.props.prependAvatar\n                          }, null), item.props.prependIcon && _createVNode(VIcon, {\n                            \"icon\": item.props.prependIcon\n                          }, null)]);\n                        },\n                        title: function title() {\n                          var _getMatches;\n\n                          return isPristine.value ? item.title : highlightResult('v-autocomplete', item.title, (_getMatches = getMatches(item)) === null || _getMatches === void 0 ? void 0 : _getMatches.title);\n                        }\n                      });\n                    }\n                  }), (_slots$appendItem = slots['append-item']) === null || _slots$appendItem === void 0 ? void 0 : _slots$appendItem.call(slots)];\n                }\n              })];\n            }\n          }), model.value.map(function (item, index) {\n            function onChipClose(e) {\n              e.stopPropagation();\n              e.preventDefault();\n              select(item, false);\n            }\n\n            var slotProps = {\n              'onClick:close': onChipClose,\n              onKeydown: function onKeydown(e) {\n                if (e.key !== 'Enter' && e.key !== ' ') return;\n                e.preventDefault();\n                e.stopPropagation();\n                onChipClose(e);\n              },\n              onMousedown: function onMousedown(e) {\n                e.preventDefault();\n                e.stopPropagation();\n              },\n              modelValue: true,\n              'onUpdate:modelValue': undefined\n            };\n            var hasSlot = hasChips.value ? !!slots.chip : !!slots.selection;\n            var slotContent = hasSlot ? ensureValidVNode(hasChips.value ? slots.chip({\n              item: item,\n              index: index,\n              props: slotProps\n            }) : slots.selection({\n              item: item,\n              index: index\n            })) : undefined;\n            if (hasSlot && !slotContent) return undefined;\n            return _createVNode(\"div\", {\n              \"key\": item.value,\n              \"class\": ['v-autocomplete__selection', index === selectionIndex.value && ['v-autocomplete__selection--selected', textColorClasses.value]],\n              \"style\": index === selectionIndex.value ? textColorStyles.value : {}\n            }, [hasChips.value ? !slots.chip ? _createVNode(VChip, _mergeProps({\n              \"key\": \"chip\",\n              \"closable\": props.closableChips,\n              \"size\": \"small\",\n              \"text\": item.title,\n              \"disabled\": item.props.disabled\n            }, slotProps), null) : _createVNode(VDefaultsProvider, {\n              \"key\": \"chip-defaults\",\n              \"defaults\": {\n                VChip: {\n                  closable: props.closableChips,\n                  size: 'small',\n                  text: item.title\n                }\n              }\n            }, {\n              default: function _default() {\n                return [slotContent];\n              }\n            }) : slotContent !== null && slotContent !== void 0 ? slotContent : _createVNode(\"span\", {\n              \"class\": \"v-autocomplete__selection-text\"\n            }, [item.title, props.multiple && index < model.value.length - 1 && _createVNode(\"span\", {\n              \"class\": \"v-autocomplete__selection-comma\"\n            }, [_createTextVNode(\",\")])])]);\n          })]);\n        },\n        'append-inner': function appendInner() {\n          var _slots$appendInner, _vTextFieldRef$value7;\n\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          return _createVNode(_Fragment, null, [(_slots$appendInner = slots['append-inner']) === null || _slots$appendInner === void 0 ? void 0 : _slots$appendInner.call.apply(_slots$appendInner, [slots].concat(args)), props.menuIcon ? _createVNode(VIcon, {\n            \"class\": \"v-autocomplete__menu-icon\",\n            \"color\": (_vTextFieldRef$value7 = vTextFieldRef.value) === null || _vTextFieldRef$value7 === void 0 ? void 0 : _vTextFieldRef$value7.fieldIconColor,\n            \"icon\": props.menuIcon,\n            \"onMousedown\": onMousedownMenuIcon,\n            \"onClick\": noop,\n            \"aria-label\": t(label.value),\n            \"title\": t(label.value),\n            \"tabindex\": \"-1\"\n          }, null) : undefined]);\n        }\n      }));\n    });\n    return forwardRefs({\n      isFocused: isFocused,\n      isPristine: isPristine,\n      menu: menu,\n      search: search,\n      filteredItems: filteredItems,\n      select: select\n    }, vTextFieldRef);\n  }\n});","map":{"version":3,"mappings":";;;;;;;;;;;;0IAAA;;AACA,6B,CAEA;;AAAA,SACSA,OADT,QACgB,qBADhB;AACgB,SACPC,YADO,QACK,uBADL;AACK,SACZC,KADY,QACP,mBADO;AACP,SACLC,iBADK,QACY,+BADZ;AACY,SACjBC,KADiB,QACZ,mBADY;AACZ,SACLC,KADK,EACEC,SADF,QACW,mBADX;AACW,SAChBC,KADgB,QACX,mBADW;AACX,SACLC,eADK,QACU,uBADV;AACU,SACfC,mBADe,EACMC,UADN,QACgB,6BADhB;AACgB,SAC/BC,cAD+B,QACjB,4BADiB,C,CAGxC;;AAAA,SACSC,YADT,QACqB,4BADrB;AACqB,SACZC,YADY,QACA,4BADA;AACA,SACZC,eADY,EACKC,eADL,EACsBC,SADtB,QAC+B,6BAD/B;AAC+B,SAC3CC,OAD2C,QACpC,2BADoC;AACpC,SACPC,WADO,QACI,kCADJ;AACI,SACXC,QADW,QACH,iCADG;AACH,SACRC,SADQ,QACC,6BADD;AACC,SACTC,eADS,QACM,mCADN;AACM,SACfC,mBADe,QACI,iCADJ,C,CAGxB;;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,QAA/B,EAAyCC,GAAzC,EAA8CC,UAA9C,EAA0DC,KAA1D,QAAuE,KAAvE;AAA4E,SAE1EC,cAF0E,EAG1EC,SAH0E,EAI1EC,gBAJ0E,EAK1EC,gBAL0E,EAM1EC,UAN0E,EAO1EC,eAP0E,EAQ1EC,IAR0E,EAS1EC,IAT0E,EAU1EC,YAV0E,EAW1EC,SAX0E,EAY1EC,WAZ0E,QAY/D,qBAZ+D,C,CAe5E;;AAkBA,OAAO,IAAMC,sBAAsB,GAAGH,YAAY;AAChDI,iBAAe,EAAE;AACfC,QAAI,EAAE,CAACC,OAAD,EAAUC,MAAV;AADS,GAD+B;AAIhDC,eAAa,EAAEF,OAJiC;AAKhDG,QAAM,EAAEF;AALwC,GAO7C7B,eAAe,CAAC;AAAEgC,YAAU,EAAE,CAAC,OAAD;AAAd,CAAD,CAP8B,GAQ7CvC,eAAe,EAR8B,GAS7C4B,IAAI,CAAC3B,mBAAmB,CAAC;AAC1BuC,YAAU,EAAE,IADc;AAE1BC,MAAI,EAAE;AAFoB,CAAD,CAApB,EAGH,CAAC,iBAAD,EAAoB,OAApB,EAA6B,iBAA7B,CAHG,CATyC,GAa7C3B,mBAAmB,CAAC;AAAE4B,YAAU,EAAE;AAAd,CAAD,CAb0B,GAc/C,eAd+C,CAA3C;AAkBP,OAAO,IAAMC,aAAa,GAAGnB,gBAAgB,GAyBI;AAC/CoB,MAAI,EAAE,eADyC;AAG/CC,OAAK,EAAEb,sBAAsB,EAHkB;AAK/Cc,OAAK,EAAE;AACL,sBAAmBC,8BAAgB;AAAA,aAAK,IAAL;AAAA,KAD9B;AAEL,qBAAkBC,2BAAU;AAAA,aAAK,IAAL;AAAA,KAFvB;AAGL,yBAAsBA,+BAAU;AAAA,aAAK,IAAL;AAAA,KAH3B;AAIL,mBAAgBA,yBAAc;AAAA,aAAK,IAAL;AAAA;AAJzB,GALwC;AAY/CC,OAZ+C,iBAYxCJ,KAZwC,EAYnCK,IAZmC,EAYtB;AAAA,QAATC,KAAS,GAAFD,IAAE,CAATC,KAAS;;AACvB,qBAAcvC,SAAS,EAAvB;AAAA,QAAQwC,CAAR,cAAQA,CAAR;;AACA,QAAMC,aAAa,GAAGnC,GAAG,EAAzB;AACA,QAAMoC,SAAS,GAAGnC,UAAU,CAAC,KAAD,CAA5B;AACA,QAAMoC,UAAU,GAAGpC,UAAU,CAAC,IAAD,CAA7B;AACA,QAAMqC,YAAY,GAAGrC,UAAU,CAAC,KAAD,CAA/B;AACA,QAAMsC,QAAQ,GAAGvC,GAAG,EAApB;AACA,QAAMwC,iBAAiB,GAAGxC,GAAG,EAA7B;AACA,QAAMyC,cAAc,GAAGxC,UAAU,CAAC,CAAC,CAAF,CAAjC;AACA,QAAMyC,KAAK,GAAG7C,QAAQ,CAAC;AAAA;;AAAA,qCAAMsC,aAAa,CAACL,KAApB,yDAAMK,qBAAqBO,KAA3B;AAAA,KAAD,CAAtB;;AACA,oBAA6CjD,QAAQ,CAACkC,KAAD,CAArD;AAAA,QAAQgB,KAAR,aAAQA,KAAR;AAAA,QAAeC,WAAf,aAAeA,WAAf;AAAA,QAA4BC,YAA5B,aAA4BA,YAA5B;;AACA,wBAA8C1D,YAAY,CAACuD,KAAD,CAA1D;AAAA,QAAQI,gBAAR,iBAAQA,gBAAR;AAAA,QAA0BC,eAA1B,iBAA0BA,eAA1B;;AACA,QAAM3B,MAAM,GAAGzB,eAAe,CAACgC,KAAD,EAAQ,QAAR,EAAkB,EAAlB,CAA9B;AACA,QAAMqB,KAAK,GAAGrD,eAAe,CAC3BgC,KAD2B,EAE3B,YAF2B,EAG3B,EAH2B,EAI3BsB,WAAC;AAAA,aAAIL,WAAW,CAACK,CAAC,KAAK,IAANA,GAAa,CAAC,IAAD,CAAbA,GAAsBpC,WAAW,CAACoC,CAAD,CAAlC,CAAf;AAAA,KAJ0B,EAK3BA,WAAC,EAAI;AAAA;;AACH,UAAMC,WAAW,GAAGL,YAAY,CAACI,CAAD,CAAhC;AACA,aAAOtB,KAAK,CAACwB,QAANxB,GAAiBuB,WAAjBvB,oBAAgCuB,WAAW,CAAC,CAAD,CAA3CvB,yDAAkD,IAAzD;AAEJ,KAT6B,CAA7B;AAUA,QAAMyB,YAAY,GAAGvD,QAAQ,CAAC,YAAM;AAClC,aAAO,OAAO8B,KAAK,CAACyB,YAAb,KAA8B,UAA9B,GAA2CzB,KAAK,CAACyB,YAANzB,CAAmBqB,KAAK,CAAClB,KAAzBH,CAA3C,GACH,OAAOA,KAAK,CAACyB,YAAb,KAA8B,QAA9B,GAAyCzB,KAAK,CAACyB,YAA/C,GACAJ,KAAK,CAAClB,KAANkB,CAAYK,MAFhB;AAGD,KAJ4B,CAA7B;AAKA,QAAMC,IAAI,GAAG/D,OAAO,CAACoC,KAAD,CAApB;;AACA,qBAAsCrC,SAAS,CAACqC,KAAD,EAAQgB,KAAR,EAAe;AAAA,aAAMN,UAAU,CAACP,KAAXO,GAAmB,EAAnBA,GAAwBjB,MAAM,CAACU,KAArC;AAAA,KAAf,CAA/C;AAAA,QAAQyB,aAAR,cAAQA,aAAR;AAAA,QAAuBC,UAAvB,cAAuBA,UAAvB;;AAEA,QAAMC,YAAY,GAAG5D,QAAQ,CAAC,YAAM;AAClC,UAAI8B,KAAK,CAAC+B,YAAV,EAAwB;AACtB,eAAOH,aAAa,CAACzB,KAAdyB,CAAoBI,MAApBJ,CAA2BK,sBAAY;AAAA,iBAAI,CAACZ,KAAK,CAAClB,KAANkB,CAAYa,IAAZb,CAAiBc,WAAC;AAAA,mBAAIA,CAAC,CAAChC,KAAFgC,KAAYF,YAAY,CAAC9B,KAA7B;AAAA,WAAlBkB,CAAL;AAAA,SAAvCO,CAAP;AACF;;AACA,aAAOA,aAAa,CAACzB,KAArB;AACD,KAL4B,CAA7B;AAOA,QAAMiC,QAAQ,GAAGlE,QAAQ,CAAC;AAAA,aAAM,CAAC,EAAE8B,KAAK,CAACqC,KAANrC,IAAeM,KAAK,CAACgC,IAAvB,CAAP;AAAA,KAAD,CAAzB;AACA,QAAMC,gBAAgB,GAAGrE,QAAQ,CAAC;AAAA,aAAMkE,QAAQ,CAACjC,KAATiC,IAAkB,CAAC,CAAC9B,KAAK,CAACkC,SAAhC;AAAA,KAAD,CAAjC;AAEA,QAAMC,cAAc,GAAGvE,QAAQ,CAAC;AAAA,aAAMmD,KAAK,CAAClB,KAANkB,CAAYqB,GAAZrB,CAAgBmB,mBAAS;AAAA,eAAIA,SAAS,CAACxC,KAAVwC,CAAgBrC,KAApB;AAAA,OAAzBkB,CAAN;AAAA,KAAD,CAA/B;AAEA,QAAMsB,cAAc,GAAGzE,QAAQ,CAAC,YAAM;AAAA;;AACpC,UAAM0E,WAAW,GAAG5C,KAAK,CAACZ,eAANY,KAA0B,IAA1BA,IACjBA,KAAK,CAACZ,eAANY,KAA0B,OAA1BA,IAAqCP,MAAM,CAACU,KAAPV,8BAAiBqC,YAAY,CAAC3B,KAAb2B,CAAmB,CAAnBA,CAAjBrC,yDAAiBqC,qBAAuBe,KAAxCpD,CADxC;AAEA,aAAOmD,WAAW,IAChBd,YAAY,CAAC3B,KAAb2B,CAAmBJ,MAAnBI,GAA4B,CADvBc,IAEL,CAAClC,UAAU,CAACP,KAFPyC,IAGL,CAACjC,YAAY,CAACR,KAHhB;AAID,KAP8B,CAA/B;AASA,QAAM2C,YAAY,GAAG5E,QAAQ,CAAC;AAAA,aAC3B8B,KAAK,CAAC+C,UAAN/C,IAAoB,CAAC8B,YAAY,CAAC3B,KAAb2B,CAAmBJ,MAAxC1B,IACD2B,IAAI,CAACqB,UAALrB,CAAgBxB,KADfH,IACwB2B,IAAI,CAACsB,UAALtB,CAAgBxB,KAFb;AAAA,KAAD,CAA7B;;AAIA,QAAM+C,KAAK,GAAGlF,eAAe,CAACgC,KAAD,EAAQ,MAAR,CAA7B;;AACA,QAAMmD,IAAI,GAAGjF,QAAQ,CAAC;AACpBkF,SAAG,EAAEA;AAAAA,eAAMF,KAAK,CAAC/C,KAAZiD;AAAAA,OADe;AAEpBC,SAAG,EAAE/B,cAAC,EAAI;AAAA;;AACR,YAAI4B,KAAK,CAAC/C,KAAN+C,IAAe,CAAC5B,CAAhB4B,uBAAqBtC,QAAQ,CAACT,KAA9B+C,4CAAqBtC,gBAAgB0C,aAAhB1C,CAA8B2C,IAAvD,EAA6D;AAC7D,YAAIjC,CAAC,IAAIwB,YAAY,CAAC3C,KAAtB,EAA6B;AAC7B+C,aAAK,CAAC/C,KAAN+C,GAAc5B,CAAd4B;AACF;AANoB,KAAD,CAArB;AASA,QAAMM,KAAK,GAAGtF,QAAQ,CAAC;AAAA,aAAMiF,IAAI,CAAChD,KAALgD,GAAanD,KAAK,CAACyD,SAAnBN,GAA+BnD,KAAK,CAAC0D,QAA3C;AAAA,KAAD,CAAtB;AAEA,QAAMC,OAAO,GAAGtF,GAAG,EAAnB;AACA,QAAMuF,UAAU,GAAGrG,YAAY,CAACoG,OAAD,EAAUnD,aAAV,CAA/B;;AACA,aAASqD,OAAT,CAAkBC,CAAlB,EAAiC;AAC/B,UAAI9D,KAAK,CAAC+D,WAAV,EAAuB;AACrBZ,YAAI,CAAChD,KAALgD,GAAa,IAAbA;AACF;;AAEA1D,YAAM,CAACU,KAAPV,GAAe,EAAfA;AACF;;AACA,aAASuE,kBAAT,GAA+B;AAC7B,UAAIlB,YAAY,CAAC3C,KAAjB,EAAwB;AAExBgD,UAAI,CAAChD,KAALgD,GAAa,IAAbA;AACF;;AACA,aAASc,mBAAT,CAA8BH,CAA9B,EAA6C;AAC3C,UAAIhB,YAAY,CAAC3C,KAAjB,EAAwB;;AAExB,UAAIM,SAAS,CAACN,KAAd,EAAqB;AACnB2D,SAAC,CAACI,cAAFJ;AACAA,SAAC,CAACK,eAAFL;AACF;;AACAX,UAAI,CAAChD,KAALgD,GAAa,CAACA,IAAI,CAAChD,KAAnBgD;AACF;;AACA,aAASiB,aAAT,CAAwBN,CAAxB,EAA0C;AACxC,UAAIA,CAAC,CAACO,GAAFP,KAAU,GAAVA,IAAiBtF,cAAc,CAACsF,CAAD,CAAnC,EAAwC;AAAA;;AACtCtD,8CAAa,CAACL,KAAdK,gFAAqB8D,KAArB9D;AACF;AACF;;AACA,aAAS+D,SAAT,CAAoBT,CAApB,EAAsC;AAAA;;AACpC,UAAInC,IAAI,CAACqB,UAALrB,CAAgBxB,KAApB,EAA2B;AAE3B,UAAMqE,cAAc,4BAAGhE,aAAa,CAACL,KAAjB,0DAAGK,sBAAqBgE,cAA5C;AACA,UAAM9C,MAAM,GAAGL,KAAK,CAAClB,KAANkB,CAAYK,MAA3B;;AAEA,UAAI,CAAC,OAAD,EAAU,WAAV,EAAuB,SAAvB,EAAkC+C,QAAlC,CAA2CX,CAAC,CAACO,GAA7C,CAAJ,EAAuD;AACrDP,SAAC,CAACI,cAAFJ;AACF;;AAEA,UAAI,CAAC,OAAD,EAAU,WAAV,EAAuBW,QAAvB,CAAgCX,CAAC,CAACO,GAAlC,CAAJ,EAA4C;AAC1ClB,YAAI,CAAChD,KAALgD,GAAa,IAAbA;AACF;;AAEA,UAAI,CAAC,QAAD,EAAWsB,QAAX,CAAoBX,CAAC,CAACO,GAAtB,CAAJ,EAAgC;AAC9BlB,YAAI,CAAChD,KAALgD,GAAa,KAAbA;AACF;;AAEA,UACER,cAAc,CAACxC,KAAfwC,IACA,CAAC,OAAD,EAAU,KAAV,EAAiB8B,QAAjB,CAA0BX,CAAC,CAACO,GAA5B,CADA1B,IAEA,CAACtB,KAAK,CAAClB,KAANkB,CAAYa,IAAZb,CAAiBqD;AAAA,YAAGvE,KAAH,GAAUuE,KAAV,CAAGvE,KAAH;AAAU,eAAKA,KAAK,KAAK2B,YAAY,CAAC3B,KAAb2B,CAAmB,CAAnBA,EAAsB3B,KAArC;AAA0C,OAArEkB,CAHH,EAIE;AACAsD,cAAM,CAAC7C,YAAY,CAAC3B,KAAb2B,CAAmB,CAAnBA,CAAD,CAAN6C;AACF;;AAEA,UAAIb,CAAC,CAACO,GAAFP,KAAU,WAAVA,IAAyBnB,cAAc,CAACxC,KAA5C,EAAmD;AAAA;;AACjDwD,iCAAO,CAACxD,KAARwD,kEAAeW,KAAfX,CAAqB,MAArBA;AACF;;AAEA,UAAI,CAAC,WAAD,EAAc,QAAd,EAAwBc,QAAxB,CAAiCX,CAAC,CAACO,GAAnC,CAAJ,EAA6C;AAC3C,YACE,CAACrE,KAAK,CAACwB,QAAP,IACAe,gBAAgB,CAACpC,KADjB,IAEAkB,KAAK,CAAClB,KAANkB,CAAYK,MAAZL,GAAqB,CAFrB,IAGA,CAAC5B,MAAM,CAACU,KAJV,EAKE,OAAOwE,MAAM,CAACtD,KAAK,CAAClB,KAANkB,CAAY,CAAZA,CAAD,EAAiB,KAAjB,CAAb;;AAEF,YAAI,CAACP,cAAc,CAACX,KAApB,EAA2B;AACzB2D,WAAC,CAACI,cAAFJ;AACA,cAAMc,sBAAsB,GAAG9D,cAAc,CAACX,KAA9C;AACAwE,gBAAM,CAACtD,KAAK,CAAClB,KAANkB,CAAYP,cAAc,CAACX,KAA3BkB,CAAD,EAAoC,KAApC,CAANsD;AAEA7D,wBAAc,CAACX,KAAfW,GAAuB8D,sBAAsB,IAAIlD,MAAM,GAAG,CAAnCkD,GAAwClD,MAAM,GAAG,CAAjDkD,GAAsDA,sBAA7E9D;AACD,SAND,MAMO,IAAIgD,CAAC,CAACO,GAAFP,KAAU,WAAVA,IAAyB,CAACrE,MAAM,CAACU,KAArC,EAA4C;AACjDW,wBAAc,CAACX,KAAfW,GAAuBY,MAAM,GAAG,CAAhCZ;AACF;;AAEA;AACF;;AAEA,UAAI,CAACd,KAAK,CAACwB,QAAX,EAAqB;;AAErB,UAAIsC,CAAC,CAACO,GAAFP,KAAU,WAAd,EAA2B;AACzB,YAAIhD,cAAc,CAACX,KAAfW,GAAuB,CAAvBA,IAA4B0D,cAA5B1D,IAA8C0D,cAAc,GAAG,CAAnE,EAAsE;AAEtE,YAAMK,IAAI,GAAG/D,cAAc,CAACX,KAAfW,GAAuB,CAAC,CAAxBA,GACTA,cAAc,CAACX,KAAfW,GAAuB,CADdA,GAETY,MAAM,GAAG,CAFb;;AAIA,YAAIL,KAAK,CAAClB,KAANkB,CAAYwD,IAAZxD,CAAJ,EAAuB;AACrBP,wBAAc,CAACX,KAAfW,GAAuB+D,IAAvB/D;AACD,SAFD,MAEO;AAAA;;AACL,cAAMgE,YAAY,4CAAGrF,MAAM,CAACU,KAAV,kDAAGV,cAAciC,MAAjB,uEAA2B,IAA7C;AACAZ,wBAAc,CAACX,KAAfW,GAAuB,CAAC,CAAxBA;AACAN,gDAAa,CAACL,KAAdK,gFAAqBuE,iBAArBvE,CAAuCsE,YAAvCtE,EAAqDsE,YAArDtE;AACF;AACD,OAdD,MAcO,IAAIsD,CAAC,CAACO,GAAFP,KAAU,YAAd,EAA4B;AACjC,YAAIhD,cAAc,CAACX,KAAfW,GAAuB,CAA3B,EAA8B;AAE9B,YAAMkE,IAAI,GAAGlE,cAAc,CAACX,KAAfW,GAAuB,CAApC;;AAEA,YAAIO,KAAK,CAAClB,KAANkB,CAAY2D,IAAZ3D,CAAJ,EAAuB;AACrBP,wBAAc,CAACX,KAAfW,GAAuBkE,IAAvBlE;AACD,SAFD,MAEO;AAAA;;AACLA,wBAAc,CAACX,KAAfW,GAAuB,CAAC,CAAxBA;AACAN,gDAAa,CAACL,KAAdK,gFAAqBuE,iBAArBvE,CAAuC,CAAvCA,EAA0C,CAA1CA;AACF;AACD,OAXM,MAWA,IAAI,CAACM,cAAc,CAACX,KAAhB,IAAyB3B,cAAc,CAACsF,CAAD,CAA3C,EAAgD;AACrDhD,sBAAc,CAACX,KAAfW,GAAuB,CAAC,CAAxBA;AACF;AACF;;AAEA,aAASmE,QAAT,CAAmBnB,CAAnB,EAA6B;AAC3B,UAAIjF,eAAe,CAAC2B,aAAa,CAACL,KAAf,EAAsB,WAAtB,CAAftB,IAAqDA,eAAe,CAAC2B,aAAa,CAACL,KAAf,EAAsB,mBAAtB,CAAxE,EAAoH;AAClH,YAAM+E,IAAI,GAAGlE,KAAK,CAACb,KAANa,CAAYmE,IAAZnE,CAAiBkE,cAAI;AAAA,iBAAIA,IAAI,CAACrC,KAALqC,KAAgBpB,CAAC,CAACsB,MAAFtB,CAA8B3D,KAAlD;AAAA,SAArBa,CAAb;;AACA,YAAIkE,IAAJ,EAAU;AACRP,gBAAM,CAACO,IAAD,CAANP;AACF;AACF;AACF;;AAEA,aAASU,YAAT,GAAyB;AACvB,UAAIrF,KAAK,CAACsF,KAAV,EAAiB;AAAA;;AACfzE,kDAAiB,CAACV,KAAlBU,gFAAyB0E,qBAAzB1E;AACF;AACF;;AACA,aAAS2E,YAAT,GAAyB;AACvB,UAAI/E,SAAS,CAACN,KAAd,EAAqB;AAAA;;AACnBO,kBAAU,CAACP,KAAXO,GAAmB,IAAnBA;AACAF,8CAAa,CAACL,KAAdK,gFAAqB8D,KAArB9D;AACF;AACF;;AAEA,aAASiF,SAAT,CAAoB3B,CAApB,EAAmC;AACjCrD,eAAS,CAACN,KAAVM,GAAkB,IAAlBA;AACAiF,gBAAU,CAAC,YAAM;AACf/E,oBAAY,CAACR,KAAbQ,GAAqB,IAArBA;AACD,OAFS,CAAV+E;AAGF;;AACA,aAASC,UAAT,CAAqB7B,CAArB,EAAoC;AAClCnD,kBAAY,CAACR,KAAbQ,GAAqB,KAArBA;AACF;;AACA,aAASiF,kBAAT,CAA6BtE,CAA7B,EAAqC;AACnC,UAAIA,CAAC,IAAI,IAALA,IAAcA,CAAC,KAAK,EAANA,IAAY,CAACtB,KAAK,CAACwB,QAAnBF,IAA+B,CAACiB,gBAAgB,CAACpC,KAAnE,EAA2EkB,KAAK,CAAClB,KAANkB,GAAc,EAAdA;AAC7E;;AAEA,QAAMwE,WAAW,GAAGvH,UAAU,CAAC,KAAD,CAA9B;AAEA;;AACA,aAASqG,MAAT,CAAiBO,IAAjB,EAAyE;AAAA,UAA5B7B,GAAmB,uEAAG,IAAM;AACvE,UAAI,CAAC6B,IAAD,IAASA,IAAI,CAAClF,KAALkF,CAAWY,QAAxB,EAAkC;;AAElC,UAAI9F,KAAK,CAACwB,QAAV,EAAoB;AAClB,YAAMuE,KAAK,GAAG1E,KAAK,CAAClB,KAANkB,CAAY2E,SAAZ3E,CAAsBmB,mBAAS;AAAA,iBAAI,CAACxC,KAAK,CAACiG,eAANjG,IAAyBvB,SAA1B,EAAqC+D,SAAS,CAACrC,KAA/C,EAAsD+E,IAAI,CAAC/E,KAA3D,CAAJ;AAAA,SAA/BkB,CAAd;AACA,YAAM6E,GAAG,GAAG7C,GAAG,IAAI,IAAPA,GAAc,CAAC,CAAC0C,KAAhB1C,GAAwBA,GAApC;;AAEA,YAAI,CAAC0C,KAAL,EAAY;AACV,cAAM5F,KAAK,GAAG+F,GAAG,gCAAO7E,KAAK,CAAClB,KAAb,IAAoB+E,IAApB,wBAAgC7D,KAAK,CAAClB,KAAtC,CAAjB;AACAA,eAAK,CAACgG,MAANhG,CAAa4F,KAAb5F,EAAoB,CAApBA;AACAkB,eAAK,CAAClB,KAANkB,GAAclB,KAAdkB;AACD,SAJD,MAIO,IAAI6E,GAAJ,EAAS;AACd7E,eAAK,CAAClB,KAANkB,gCAAkBA,KAAK,CAAClB,KAAxBkB,IAA+B6D,IAA/B7D;AACF;;AAEA,YAAIrB,KAAK,CAACR,aAAV,EAAyB;AACvBC,gBAAM,CAACU,KAAPV,GAAe,EAAfA;AACF;AACD,OAfD,MAeO;AACL,YAAMyG,IAAG,GAAG7C,GAAG,KAAK,KAApB;;AACAhC,aAAK,CAAClB,KAANkB,GAAc6E,IAAG,GAAG,CAAChB,IAAD,CAAH,GAAY,EAA7B7D;AACA5B,cAAM,CAACU,KAAPV,GAAeyG,IAAG,IAAI,CAAC3D,gBAAgB,CAACpC,KAAzB+F,GAAiChB,IAAI,CAACrC,KAAtCqD,GAA8C,EAA7DzG,CAHK,CAKL;;AACArB,gBAAQ,CAAC,YAAM;AACb+E,cAAI,CAAChD,KAALgD,GAAa,KAAbA;AACAzC,oBAAU,CAACP,KAAXO,GAAmB,IAAnBA;AACD,SAHO,CAARtC;AAIF;AACF;;AAEAG,SAAK,CAACkC,SAAD,EAAY,UAAC2F,GAAD,EAAMC,MAAN,EAAiB;AAChC,UAAID,GAAG,KAAKC,MAAZ,EAAoB;;AAEpB,UAAID,GAAJ,EAAS;AAAA;;AACPP,mBAAW,CAAC1F,KAAZ0F,GAAoB,IAApBA;AACApG,cAAM,CAACU,KAAPV,GAAgBO,KAAK,CAACwB,QAANxB,IAAkBuC,gBAAgB,CAACpC,KAAnCH,GAA4C,EAA5CA,GAAiDT,MAAM,6CAAC8B,KAAK,CAAClB,KAANkB,CAAYiF,EAAZjF,CAAe,CAAC,CAAhBA,CAAD,oDAACA,gBAAoBrB,KAApBqB,CAA0BwB,KAA3B,yEAAoC,EAApC,CAAvEpD;AACAiB,kBAAU,CAACP,KAAXO,GAAmB,IAAnBA;AAEAtC,gBAAQ,CAAC;AAAA,iBAAMyH,WAAW,CAAC1F,KAAZ0F,GAAoB,KAA1B;AAAA,SAAD,CAARzH;AACD,OAND,MAMO;AACL,YAAI,CAAC4B,KAAK,CAACwB,QAAP,IAAmB/B,MAAM,CAACU,KAAPV,IAAgB,IAAvC,EAA6C4B,KAAK,CAAClB,KAANkB,GAAc,EAAdA;AAC7C8B,YAAI,CAAChD,KAALgD,GAAa,KAAbA;AACA,YAAInD,KAAK,CAACwB,QAANxB,IAAkBuC,gBAAgB,CAACpC,KAAvC,EAA8CV,MAAM,CAACU,KAAPV,GAAe,EAAfA;AAC9CqB,sBAAc,CAACX,KAAfW,GAAuB,CAAC,CAAxBA;AACF;AACD,KAfI,CAALvC;AAiBAA,SAAK,CAACkB,MAAD,EAAS2G,aAAG,EAAI;AACnB,UAAI,CAAC3F,SAAS,CAACN,KAAX,IAAoB0F,WAAW,CAAC1F,KAApC,EAA2C;AAE3C,UAAIiG,GAAJ,EAASjD,IAAI,CAAChD,KAALgD,GAAa,IAAbA;AAETzC,gBAAU,CAACP,KAAXO,GAAmB,CAAC0F,GAApB1F;AACD,KANI,CAALnC;AAQAA,SAAK,CAAC4E,IAAD,EAAO,YAAM;AAChB,UAAI,CAACnD,KAAK,CAAC+B,YAAP,IAAuBoB,IAAI,CAAChD,KAA5B,IAAqCkB,KAAK,CAAClB,KAANkB,CAAYK,MAArD,EAA6D;AAC3D,YAAMqE,KAAK,GAAGjE,YAAY,CAAC3B,KAAb2B,CAAmBkE,SAAnBlE,CACZoD,cAAI;AAAA,iBAAI7D,KAAK,CAAClB,KAANkB,CAAYa,IAAZb,CAAiBc,WAAC;AAAA,mBAAI+C,IAAI,CAAC/E,KAAL+E,KAAe/C,CAAC,CAAChC,KAArB;AAAA,WAAlBkB,CAAJ;AAAA,SADQS,CAAd;AAGAlD,kBAAU,IAAI2H,MAAM,CAACC,qBAAPD,CAA6B,YAAM;AAAA;;AAC/CR,eAAK,IAAI,CAATA,+BAAclF,iBAAiB,CAACV,KAAhC4F,2DAAclF,uBAAyB4F,aAAzB5F,CAAuCkF,KAAvClF,CAAdkF;AACD,SAFaQ,CAAd3H;AAGF;AACD,KATI,CAALL;AAWAA,SAAK,CAAC;AAAA,aAAMyB,KAAK,CAACgB,KAAZ;AAAA,KAAD,EAAoB,UAAC0F,MAAD,EAASL,MAAT,EAAoB;AAC3C,UAAIlD,IAAI,CAAChD,KAAT,EAAgB;;AAEhB,UAAIM,SAAS,CAACN,KAAVM,IAAmB,CAAC4F,MAAM,CAAC3E,MAA3BjB,IAAqCiG,MAAM,CAAChF,MAAhD,EAAwD;AACtDyB,YAAI,CAAChD,KAALgD,GAAa,IAAbA;AACF;AACD,KANI,CAAL5E;AAQAU,aAAS,CAAC,YAAM;AACd,UAAM0H,OAAO,GAAG,CAAC,EACd,CAAC3G,KAAK,CAAC+C,UAAP,IAAqBjB,YAAY,CAAC3B,KAAb2B,CAAmBJ,MAAxC,IACDpB,KAAK,CAAC,cAAD,CADJ,IAEDA,KAAK,CAAC,aAAD,CAFJ,IAGDA,KAAK,CAAC,SAAD,CAJU,CAAjB;AAMA,UAAMsG,OAAO,GAAGvF,KAAK,CAAClB,KAANkB,CAAYK,MAAZL,GAAqB,CAArC;AACA,UAAMwF,cAAc,GAAGxJ,UAAU,CAACyJ,WAAXzJ,CAAuB2C,KAAvB3C,CAAvB;AAEA;AAAA,eAEUmD;AAFV,SAGSqG,cAHT,EAGuB;AAAA,sBACTpH,MAAM,CAACU,KADE;AACG;AAAA,iBAAZV,MAAM,CAACU,KAAPV,GAAYsH;AAAA,WACAnB,kBADA,CADH;AAEqB,mBACtBnF,SAAS,CAACN,KAHT;AAGc;AAAA,iBAAfM,SAAS,CAACN,KAAVM,GAAesG;AAAA,SAHd;AAGc,2BACf1F,KAAK,CAAC2F,aAJL;AAIkB,wBACtBvF,YAAY,CAACtB,KALT;AAKc,iBACzByG,OANW;AAMJ,oBACJ3B,QAPQ;AAOA,iBACZ,CACL,gBADK,4BAEcjF,KAAK,CAACwB,QAANxB,GAAiB,UAAjBA,GAA8B,QAF5C,GAGL;AACE,yCAA+BmD,IAAI,CAAChD,KADtC;AAEE,mCAAyB,CAAC,CAACH,KAAK,CAACqC,KAFnC;AAGE,4CAAkC,CAAC,CAACE,gBAAgB,CAACpC,KAHvD;AAIE,6CAAmCW,cAAc,CAACX,KAAfW,GAAuB,CAAC;AAJ7D,SAHK,EASLd,KAAK,CAACiH,KATD,CARY;AAkBlB,iBACOjH,KAAK,CAACkH,KAnBK;AAmBA,oBACRvF,IAAI,CAACqB,UAALrB,CAAgBxB,KApBR;AAoBa,uBAClByG,OAAO,GAAGO,SAAH,GAAenH,KAAK,CAACoH,WArBvB;AAqBkC,yBACrCvD,OAtBG;AAsBI,+BACDG,kBAvBH;AAuBqB,qBAC5BO;AAxBO,OAHvB,mCA8BSjE,KA9BT;AA+BM+G,eAAO,EAAEA;AAAAA;AAAA,mBAGGzG,QAHH;AAGW,0BACJuC,IAAI,CAAChD,KAJZ;AAIiB;AAAA,qBAAVgD,IAAI,CAAChD,KAALgD,GAAU4D;AAAA,aAJjB;AAIiB,iCAJjB;AAIiB,qDAJjB;AAIiB,wBAGTjE,YAAY,CAAC3C,KAPrB;AAO0B,qBACrBH,KAAK,CAACsF,KARX;AAQgB,yBACP,GATT;AASY,2BACD,KAVX;AAUgB,mCACG,KAXnB;AAWwB,0BACdtF,KAAK,CAACH,UAZhB;AAY0B,4BACdwF,YAbZ;AAawB,4BACZG;AAdZ,aAeExF,KAAK,CAACsH,SAfR,GAeiB;AAAAD;AAAAA;;AAAAA,sBAElBV,OAAO;AAAA,uBAEChD,OAFD;AAEQ,4BACFlB,cAAc,CAACtC,KAHrB;AAG0B,kCACdH,KAAK,CAACwB,QAANxB,GAAiB,aAAjBA,GAAiC,oBAJ7C;AAIiE,+BACvD8D,sBAAa;AAAA,yBAAKA,CAAC,CAACI,cAAFJ,EAAL;AAAA,iBALvB;AAK8C,6BACvCM,aANP;AAMoB,6BACbqB,SAPP;AAOgB,8BACRE,UARR;AAQkB,gCARlB;AAQkB,qCARlB;AAQkB,6CAGf3F,KAAK,CAACuH,SAHS,+DAGIvH,KAAK,CAACe;AAX5B,iBAYA6C,UAZA,EAaA5D,KAAK,CAACwH,SAbN,GAae;AAAAH;AAAAA;;AAAAA,gDAElB/G,KAAK,CAAC,cAAD,CAFa,uDAElBA,6BAAK,CAFa,EAIlB,CAACwB,YAAY,CAAC3B,KAAb2B,CAAmBJ,MAApB,IAA8B,CAAC1B,KAAK,CAAC+C,UAArC,wCAAoDzC,KAAK,CAAC,SAAD,CAAzD,mDAAoDA,yBAAK,CAAzD,yDAAwEmH;AAAA;AAAA,6BACvClH,CAAC,CAACP,KAAK,CAAC0H,UAAP;AADsC,qBACpB,IADoB,CAAxE,CAJkB,EAMlBD;AAAA,2BAEoB5G,iBAFpB;AAEqC,sCAFrC;AAEqC,6BAAsBiB,YAAY,CAAC3B,KAFxE;AAE6E;AAF7E,qBAE6E;AAAAkH,6BAC3EM,yBAA8B;AAAA;;AAAA,0BAA3BzC,IAA2B,GAALyC,KAAK,CAA3BzC,IAA2B;AAAA,0BAArBa,KAAqB,GAAL4B,KAAK,CAArB5B,KAAqB;AAAA,0BAAd6B,OAAc,GAALD,KAAK,CAAdC,OAAc;AAC9B,0BAAMC,SAAS,GAAG1J,UAAU,CAAC+G,IAAI,CAAClF,KAAN,EAAa;AACvC3B,2BAAG,EAAEuJ,OADkC;AAEvCvD,2BAAG,EAAEa,IAAI,CAAC/E,KAF6B;AAGvC2H,8BAAM,EAAGnF,cAAc,CAACxC,KAAfwC,IAAwBoD,KAAK,KAAK,CAAlCpD,GAAuC,IAAvCA,GAA8CwE,SAHhB;AAIvCY,+BAAO,EAAEA;AAAAA,iCAAMpD,MAAM,CAACO,IAAD,EAAO,IAAP,CAAZ6C;AAAAA;AAJ8B,uBAAb,CAA5B;AAOA,4DAAOzH,KAAK,CAAC4E,IAAb,iDAAO5E,uBAAK,EAAQ;AAClB4E,4BAAI,EAAJA,IADkB;AAElBa,6BAAK,EAALA,KAFkB;AAGlB/F,6BAAK,EAAE6H;AAHW,uBAAR,CAAZ,qDAIEJ,oCACgBI,SADhB,EACyB;AAAA;AAAA,uBADzB,GACyB;AAEvBG,+BAAO,EAAEC;AAAA,8BAAGC,UAAH,GAAeD,KAAf,CAAGC,UAAH;AAAe,gEAElBlI,KAAK,CAACwB,QAANxB,IAAkB,CAACA,KAAK,CAAC+B,YAAzB/B,GAAqCyH;AAAA,mCAE7BvC,IAAI,CAAC/E,KAFwB;AAEnB,0CACH+H,UAHsB;AAGZ,sCACd,KAJ0B;AAIrB;AAJqB,6BAIrB,IAJqB,CAArClI,GAOEmH,SATgB,EAWlBjC,IAAI,CAAClF,KAALkF,CAAWiD,aAAXjD,IAAwBuC;AAAA,qCACPvC,IAAI,CAAClF,KAALkF,CAAWiD;AADJ,6BACiB,IADjB,CAXN,EAelBjD,IAAI,CAAClF,KAALkF,CAAWkD,WAAXlD,IAAsBuC;AAAA,oCACRvC,IAAI,CAAClF,KAALkF,CAAWkD;AADH,6BACc,IADd,CAfJ;AAmBvB,yBArBsB;AAsBvBvF,6BAAK,EAAEA,iBAAM;AAAA;;AACX,iCAAOnC,UAAU,CAACP,KAAXO,GACHwE,IAAI,CAACrC,KADFnC,GAEHjD,eAAe,CAAC,gBAAD,EAAmByH,IAAI,CAACrC,KAAxB,iBAA+BhB,UAAU,CAACqD,IAAD,CAAzC,gDAA+BrD,YAAkBgB,KAAjD,CAFnB;AAGF;AA1BuB,uBADzB,CAJF;AAmCF;AA5C6E,mBAF7E,CANkB,uBAuDlBvC,KAAK,CAAC,aAAD,CAvDa,sDAuDlBA,4BAAK,CAvDa;AAAA+G;AAAA,eAbf,CAFW;AAAAA;AAAA,WAfjB,GA0FHhG,KAAK,CAAClB,KAANkB,CAAYqB,GAAZrB,CAAgB,UAAC6D,IAAD,EAAOa,KAAP,EAAiB;AACjC,qBAASsC,WAAT,CAAsBvE,CAAtB,EAAgC;AAC9BA,eAAC,CAACK,eAAFL;AACAA,eAAC,CAACI,cAAFJ;AAEAa,oBAAM,CAACO,IAAD,EAAO,KAAP,CAANP;AACF;;AAEA,gBAAM2D,SAAS,GAAG;AAChB,+BAAiBD,WADD;AAEhB9D,uBAFgB,qBAELT,CAFK,EAEa;AAC3B,oBAAIA,CAAC,CAACO,GAAFP,KAAU,OAAVA,IAAqBA,CAAC,CAACO,GAAFP,KAAU,GAAnC,EAAwC;AAExCA,iBAAC,CAACI,cAAFJ;AACAA,iBAAC,CAACK,eAAFL;AAEAuE,2BAAW,CAACvE,CAAD,CAAXuE;AACD,eATe;AAUhBE,yBAVgB,uBAUHzE,CAVG,EAUY;AAC1BA,iBAAC,CAACI,cAAFJ;AACAA,iBAAC,CAACK,eAAFL;AACD,eAbe;AAchBnE,wBAAU,EAAE,IAdI;AAehB,qCAAuBwH;AAfP,aAAlB;AAkBA,gBAAMqB,OAAO,GAAGpG,QAAQ,CAACjC,KAATiC,GAAiB,CAAC,CAAC9B,KAAK,CAACgC,IAAzBF,GAAgC,CAAC,CAAC9B,KAAK,CAACkC,SAAxD;AACA,gBAAMiG,WAAW,GAAGD,OAAO,GACvB9J,gBAAgB,CAChB0D,QAAQ,CAACjC,KAATiC,GACI9B,KAAK,CAACgC,IAANhC,CAAY;AAAE4E,kBAAI,EAAJA,IAAF;AAAQa,mBAAK,EAALA,KAAR;AAAe/F,mBAAK,EAAEsI;AAAtB,aAAZhI,CADJ8B,GAEI9B,KAAK,CAACkC,SAANlC,CAAiB;AAAE4E,kBAAI,EAAJA,IAAF;AAAQa;AAAR,aAAjBzF,CAHY,CADO,GAMvB6G,SANJ;AAQA,gBAAIqB,OAAO,IAAI,CAACC,WAAhB,EAA6B,OAAOtB,SAAP;AAE7B;AAAA,qBAEUjC,IAAI,CAAC/E,KAFf;AAEoB,uBACT,CACL,2BADK,EAEL4F,KAAK,KAAKjF,cAAc,CAACX,KAAzB4F,IAAkC,CAChC,qCADgC,EAEhC5E,gBAAgB,CAAChB,KAFe,CAF7B,CAHX;AASK,uBACO4F,KAAK,KAAKjF,cAAc,CAACX,KAAzB4F,GAAiC3E,eAAe,CAACjB,KAAjD4F,GAAyD;AAVrE,eAUuE,CAEjE3D,QAAQ,CAACjC,KAATiC,GACA,CAAC9B,KAAK,CAACgC,IAAP,GAAWmF;AAAA;AAAA,0BAGIzH,KAAK,CAAC0I,aAHV;AAGuB,6BAHvB;AAGuB,sBAEvBxD,IAAI,CAACrC,KALL;AAKU,0BACNqC,IAAI,CAAClF,KAALkF,CAAWY;AANf,eAOFwC,SAPE,GAOO,IAPP,CAAX,GAOkBb;AAAA;AAAA,0BAKJ;AACR5K,qBAAK,EAAE;AACL8L,0BAAQ,EAAE3I,KAAK,CAAC0I,aADX;AAELnF,sBAAI,EAAE,OAFD;AAGLqF,sBAAI,EAAE1D,IAAI,CAACrC;AAHN;AADC;AALI,eAWb;AAAAwE;AAAAA,wBAECoB,WAFD;AAAApB;AAAA,aAXa,CARlBjF,GAyBAqG,WAzBArG,aAyBAqG,WAzBArG,cAyBAqG,WAzBArG,GAyBWqF;AAAA;AAAA,gBAELvC,IAAI,CAACrC,KAFA,EAGL7C,KAAK,CAACwB,QAANxB,IAAmB+F,KAAK,GAAG1E,KAAK,CAAClB,KAANkB,CAAYK,MAAZL,GAAqB,CAAhDrB,IAAkDyH;AAAA;AAAA,uCAH7C,EA3BsD,CAVvE;AAgDD,WArFCpG,CA1FG;AAAAgG,SA/Bf;AAiNM,wBAAgB;AAAA;;AAAA,4CAAIwB,IAAI,kBAAR,EAAQC,QAAR,EAAQA,WAAR,EAAQA,MAAR,EAAQ;AAAJD,gBAAI,MAAJA,GAAIE,eAAJF;AAAI;;AAAA,sEAElBvI,KAAK,CAAC,cAAD,CAFa,uDAElBA,wDAAK,QAALA,CAA2BuI,IAA3BvI,EAFkB,EAGlBN,KAAK,CAACgJ,QAANhJ,GAAcyH;AAAA;AAAA,8CAGJjH,aAAa,CAACL,KAHV,0DAGJK,sBAAqByI,cAHjB;AAG+B,oBACpCjJ,KAAK,CAACgJ,QAJD;AAIS,2BACP/E,mBALF;AAKqB,uBACvBnF,IANE;AAME,0BACDyB,CAAC,CAACiD,KAAK,CAACrD,KAAP,CAPF;AAOe,qBACnBI,CAAC,CAACiD,KAAK,CAACrD,KAAP,CARG;AAQU;AARV,aAQU,IARV,CAAdH,GAWEmH,SAdgB;AAcP;AA/NvB;AAqOD,KA/OQ,CAATlI;AAiPA,WAAOpB,WAAW,CAAC;AACjB4C,eAAS,EAATA,SADiB;AAEjBC,gBAAU,EAAVA,UAFiB;AAGjByC,UAAI,EAAJA,IAHiB;AAIjB1D,YAAM,EAANA,MAJiB;AAKjBmC,mBAAa,EAAbA,aALiB;AAMjB+C;AANiB,KAAD,EAOfnE,aAPe,CAAlB;AAQF;AAxiB+C,CAzBJ,CAAtC","names":["VAvatar","VCheckboxBtn","VChip","VDefaultsProvider","VIcon","VList","VListItem","VMenu","makeSelectProps","makeVTextFieldProps","VTextField","VVirtualScroll","useScrolling","useTextColor","highlightResult","makeFilterProps","useFilter","useForm","forwardRefs","useItems","useLocale","useProxiedModel","makeTransitionProps","computed","mergeProps","nextTick","ref","shallowRef","watch","checkPrintable","deepEqual","ensureValidVNode","genericComponent","IN_BROWSER","matchesSelector","noop","omit","propsFactory","useRender","wrapInArray","makeVAutocompleteProps","autoSelectFirst","type","Boolean","String","clearOnSelect","search","filterKeys","modelValue","role","transition","VAutocomplete","name","props","emits","focused","value","setup","_ref","slots","t","vTextFieldRef","isFocused","isPristine","listHasFocus","vMenuRef","vVirtualScrollRef","selectionIndex","color","items","transformIn","transformOut","textColorClasses","textColorStyles","model","v","transformed","multiple","counterValue","length","form","filteredItems","getMatches","displayItems","hideSelected","filter","filteredItem","some","s","hasChips","chips","chip","hasSelectionSlot","selection","selectedValues","map","highlightFirst","selectFirst","title","menuDisabled","hideNoData","isReadonly","isDisabled","_menu","menu","get","set","Î¨openChildren","size","label","closeText","openText","listRef","listEvents","onClear","e","openOnClear","onMousedownControl","onMousedownMenuIcon","preventDefault","stopPropagation","onListKeydown","key","focus","onKeydown","selectionStart","includes","_ref2","select","originalSelectionIndex","prev","searchLength","setSelectionRange","next","onChange","item","find","target","onAfterEnter","eager","calculateVisibleItems","onAfterLeave","onFocusin","setTimeout","onFocusout","onUpdateModelValue","isSelecting","disabled","index","findIndex","valueComparator","add","splice","val","oldVal","at","window","requestAnimationFrame","scrollToIndex","newVal","hasList","isDirty","textFieldProps","filterProps","$event","externalValue","class","style","undefined","placeholder","default","menuProps","itemColor","listProps","_createVNode","noDataText","_ref3","itemRef","itemProps","active","onClick","prepend","_ref4","isSelected","prependAvatar","prependIcon","onChipClose","slotProps","onMousedown","hasSlot","slotContent","closableChips","closable","text","args","_key","arguments","menuIcon","fieldIconColor"],"sources":["../../../src/components/VAutocomplete/VAutocomplete.tsx"],"sourcesContent":["// Styles\nimport './VAutocomplete.sass'\n\n// Components\nimport { VAvatar } from '@/components/VAvatar'\nimport { VCheckboxBtn } from '@/components/VCheckbox'\nimport { VChip } from '@/components/VChip'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VIcon } from '@/components/VIcon'\nimport { VList, VListItem } from '@/components/VList'\nimport { VMenu } from '@/components/VMenu'\nimport { makeSelectProps } from '@/components/VSelect/VSelect'\nimport { makeVTextFieldProps, VTextField } from '@/components/VTextField/VTextField'\nimport { VVirtualScroll } from '@/components/VVirtualScroll'\n\n// Composables\nimport { useScrolling } from '../VSelect/useScrolling'\nimport { useTextColor } from '@/composables/color'\nimport { highlightResult, makeFilterProps, useFilter } from '@/composables/filter'\nimport { useForm } from '@/composables/form'\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { useItems } from '@/composables/list-items'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { makeTransitionProps } from '@/composables/transition'\n\n// Utilities\nimport { computed, mergeProps, nextTick, ref, shallowRef, watch } from 'vue'\nimport {\n  checkPrintable,\n  deepEqual,\n  ensureValidVNode,\n  genericComponent,\n  IN_BROWSER,\n  matchesSelector,\n  noop,\n  omit,\n  propsFactory,\n  useRender,\n  wrapInArray,\n} from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { VFieldSlots } from '@/components/VField/VField'\nimport type { VInputSlots } from '@/components/VInput/VInput'\nimport type { ListItem } from '@/composables/list-items'\nimport type { GenericProps, SelectItemKey } from '@/util'\n\ntype Primitive = string | number | boolean | symbol\n\ntype Val <T, ReturnObject extends boolean> = [T] extends [Primitive]\n  ? T\n  : (ReturnObject extends true ? T : any)\n\ntype Value <T, ReturnObject extends boolean, Multiple extends boolean> =\n  Multiple extends true\n    ? readonly Val<T, ReturnObject>[]\n    : Val<T, ReturnObject> | null\n\nexport const makeVAutocompleteProps = propsFactory({\n  autoSelectFirst: {\n    type: [Boolean, String] as PropType<boolean | 'exact'>,\n  },\n  clearOnSelect: Boolean,\n  search: String,\n\n  ...makeFilterProps({ filterKeys: ['title'] }),\n  ...makeSelectProps(),\n  ...omit(makeVTextFieldProps({\n    modelValue: null,\n    role: 'combobox',\n  }), ['validationValue', 'dirty', 'appendInnerIcon']),\n  ...makeTransitionProps({ transition: false }),\n}, 'VAutocomplete')\n\ntype ItemType<T> = T extends readonly (infer U)[] ? U : never\n\nexport const VAutocomplete = genericComponent<new <\n  T extends readonly any[],\n  Item = ItemType<T>,\n  ReturnObject extends boolean = false,\n  Multiple extends boolean = false,\n  V extends Value<Item, ReturnObject, Multiple> = Value<Item, ReturnObject, Multiple>\n>(\n  props: {\n    items?: T\n    itemTitle?: SelectItemKey<ItemType<T>>\n    itemValue?: SelectItemKey<ItemType<T>>\n    itemProps?: SelectItemKey<ItemType<T>>\n    returnObject?: ReturnObject\n    multiple?: Multiple\n    modelValue?: V | null\n    'onUpdate:modelValue'?: (value: V) => void\n  },\n  slots: Omit<VInputSlots & VFieldSlots, 'default'> & {\n    item: { item: ListItem<Item>, index: number, props: Record<string, unknown> }\n    chip: { item: ListItem<Item>, index: number, props: Record<string, unknown> }\n    selection: { item: ListItem<Item>, index: number }\n    'prepend-item': never\n    'append-item': never\n    'no-data': never\n  }\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VAutocomplete',\n\n  props: makeVAutocompleteProps(),\n\n  emits: {\n    'update:focused': (focused: boolean) => true,\n    'update:search': (value: any) => true,\n    'update:modelValue': (value: any) => true,\n    'update:menu': (value: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const { t } = useLocale()\n    const vTextFieldRef = ref<VTextField>()\n    const isFocused = shallowRef(false)\n    const isPristine = shallowRef(true)\n    const listHasFocus = shallowRef(false)\n    const vMenuRef = ref<VMenu>()\n    const vVirtualScrollRef = ref<VVirtualScroll>()\n    const selectionIndex = shallowRef(-1)\n    const color = computed(() => vTextFieldRef.value?.color)\n    const { items, transformIn, transformOut } = useItems(props)\n    const { textColorClasses, textColorStyles } = useTextColor(color)\n    const search = useProxiedModel(props, 'search', '')\n    const model = useProxiedModel(\n      props,\n      'modelValue',\n      [],\n      v => transformIn(v === null ? [null] : wrapInArray(v)),\n      v => {\n        const transformed = transformOut(v)\n        return props.multiple ? transformed : (transformed[0] ?? null)\n      }\n    )\n    const counterValue = computed(() => {\n      return typeof props.counterValue === 'function' ? props.counterValue(model.value)\n        : typeof props.counterValue === 'number' ? props.counterValue\n        : model.value.length\n    })\n    const form = useForm(props)\n    const { filteredItems, getMatches } = useFilter(props, items, () => isPristine.value ? '' : search.value)\n\n    const displayItems = computed(() => {\n      if (props.hideSelected) {\n        return filteredItems.value.filter(filteredItem => !model.value.some(s => s.value === filteredItem.value))\n      }\n      return filteredItems.value\n    })\n\n    const hasChips = computed(() => !!(props.chips || slots.chip))\n    const hasSelectionSlot = computed(() => hasChips.value || !!slots.selection)\n\n    const selectedValues = computed(() => model.value.map(selection => selection.props.value))\n\n    const highlightFirst = computed(() => {\n      const selectFirst = props.autoSelectFirst === true ||\n        (props.autoSelectFirst === 'exact' && search.value === displayItems.value[0]?.title)\n      return selectFirst &&\n        displayItems.value.length > 0 &&\n        !isPristine.value &&\n        !listHasFocus.value\n    })\n\n    const menuDisabled = computed(() => (\n      (props.hideNoData && !displayItems.value.length) ||\n      form.isReadonly.value || form.isDisabled.value\n    ))\n    const _menu = useProxiedModel(props, 'menu')\n    const menu = computed({\n      get: () => _menu.value,\n      set: v => {\n        if (_menu.value && !v && vMenuRef.value?.Î¨openChildren.size) return\n        if (v && menuDisabled.value) return\n        _menu.value = v\n      },\n    })\n\n    const label = computed(() => menu.value ? props.closeText : props.openText)\n\n    const listRef = ref<VList>()\n    const listEvents = useScrolling(listRef, vTextFieldRef)\n    function onClear (e: MouseEvent) {\n      if (props.openOnClear) {\n        menu.value = true\n      }\n\n      search.value = ''\n    }\n    function onMousedownControl () {\n      if (menuDisabled.value) return\n\n      menu.value = true\n    }\n    function onMousedownMenuIcon (e: MouseEvent) {\n      if (menuDisabled.value) return\n\n      if (isFocused.value) {\n        e.preventDefault()\n        e.stopPropagation()\n      }\n      menu.value = !menu.value\n    }\n    function onListKeydown (e: KeyboardEvent) {\n      if (e.key !== ' ' && checkPrintable(e)) {\n        vTextFieldRef.value?.focus()\n      }\n    }\n    function onKeydown (e: KeyboardEvent) {\n      if (form.isReadonly.value) return\n\n      const selectionStart = vTextFieldRef.value?.selectionStart\n      const length = model.value.length\n\n      if (['Enter', 'ArrowDown', 'ArrowUp'].includes(e.key)) {\n        e.preventDefault()\n      }\n\n      if (['Enter', 'ArrowDown'].includes(e.key)) {\n        menu.value = true\n      }\n\n      if (['Escape'].includes(e.key)) {\n        menu.value = false\n      }\n\n      if (\n        highlightFirst.value &&\n        ['Enter', 'Tab'].includes(e.key) &&\n        !model.value.some(({ value }) => value === displayItems.value[0].value)\n      ) {\n        select(displayItems.value[0])\n      }\n\n      if (e.key === 'ArrowDown' && highlightFirst.value) {\n        listRef.value?.focus('next')\n      }\n\n      if (['Backspace', 'Delete'].includes(e.key)) {\n        if (\n          !props.multiple &&\n          hasSelectionSlot.value &&\n          model.value.length > 0 &&\n          !search.value\n        ) return select(model.value[0], false)\n\n        if (~selectionIndex.value) {\n          e.preventDefault()\n          const originalSelectionIndex = selectionIndex.value\n          select(model.value[selectionIndex.value], false)\n\n          selectionIndex.value = originalSelectionIndex >= length - 1 ? (length - 2) : originalSelectionIndex\n        } else if (e.key === 'Backspace' && !search.value) {\n          selectionIndex.value = length - 1\n        }\n\n        return\n      }\n\n      if (!props.multiple) return\n\n      if (e.key === 'ArrowLeft') {\n        if (selectionIndex.value < 0 && selectionStart && selectionStart > 0) return\n\n        const prev = selectionIndex.value > -1\n          ? selectionIndex.value - 1\n          : length - 1\n\n        if (model.value[prev]) {\n          selectionIndex.value = prev\n        } else {\n          const searchLength = search.value?.length ?? null\n          selectionIndex.value = -1\n          vTextFieldRef.value?.setSelectionRange(searchLength, searchLength)\n        }\n      } else if (e.key === 'ArrowRight') {\n        if (selectionIndex.value < 0) return\n\n        const next = selectionIndex.value + 1\n\n        if (model.value[next]) {\n          selectionIndex.value = next\n        } else {\n          selectionIndex.value = -1\n          vTextFieldRef.value?.setSelectionRange(0, 0)\n        }\n      } else if (~selectionIndex.value && checkPrintable(e)) {\n        selectionIndex.value = -1\n      }\n    }\n\n    function onChange (e: Event) {\n      if (matchesSelector(vTextFieldRef.value, ':autofill') || matchesSelector(vTextFieldRef.value, ':-webkit-autofill')) {\n        const item = items.value.find(item => item.title === (e.target as HTMLInputElement).value)\n        if (item) {\n          select(item)\n        }\n      }\n    }\n\n    function onAfterEnter () {\n      if (props.eager) {\n        vVirtualScrollRef.value?.calculateVisibleItems()\n      }\n    }\n    function onAfterLeave () {\n      if (isFocused.value) {\n        isPristine.value = true\n        vTextFieldRef.value?.focus()\n      }\n    }\n\n    function onFocusin (e: FocusEvent) {\n      isFocused.value = true\n      setTimeout(() => {\n        listHasFocus.value = true\n      })\n    }\n    function onFocusout (e: FocusEvent) {\n      listHasFocus.value = false\n    }\n    function onUpdateModelValue (v: any) {\n      if (v == null || (v === '' && !props.multiple && !hasSelectionSlot.value)) model.value = []\n    }\n\n    const isSelecting = shallowRef(false)\n\n    /** @param set - null means toggle */\n    function select (item: ListItem | undefined, set: boolean | null = true) {\n      if (!item || item.props.disabled) return\n\n      if (props.multiple) {\n        const index = model.value.findIndex(selection => (props.valueComparator || deepEqual)(selection.value, item.value))\n        const add = set == null ? !~index : set\n\n        if (~index) {\n          const value = add ? [...model.value, item] : [...model.value]\n          value.splice(index, 1)\n          model.value = value\n        } else if (add) {\n          model.value = [...model.value, item]\n        }\n\n        if (props.clearOnSelect) {\n          search.value = ''\n        }\n      } else {\n        const add = set !== false\n        model.value = add ? [item] : []\n        search.value = add && !hasSelectionSlot.value ? item.title : ''\n\n        // watch for search watcher to trigger\n        nextTick(() => {\n          menu.value = false\n          isPristine.value = true\n        })\n      }\n    }\n\n    watch(isFocused, (val, oldVal) => {\n      if (val === oldVal) return\n\n      if (val) {\n        isSelecting.value = true\n        search.value = (props.multiple || hasSelectionSlot.value) ? '' : String(model.value.at(-1)?.props.title ?? '')\n        isPristine.value = true\n\n        nextTick(() => isSelecting.value = false)\n      } else {\n        if (!props.multiple && search.value == null) model.value = []\n        menu.value = false\n        if (props.multiple || hasSelectionSlot.value) search.value = ''\n        selectionIndex.value = -1\n      }\n    })\n\n    watch(search, val => {\n      if (!isFocused.value || isSelecting.value) return\n\n      if (val) menu.value = true\n\n      isPristine.value = !val\n    })\n\n    watch(menu, () => {\n      if (!props.hideSelected && menu.value && model.value.length) {\n        const index = displayItems.value.findIndex(\n          item => model.value.some(s => item.value === s.value)\n        )\n        IN_BROWSER && window.requestAnimationFrame(() => {\n          index >= 0 && vVirtualScrollRef.value?.scrollToIndex(index)\n        })\n      }\n    })\n\n    watch(() => props.items, (newVal, oldVal) => {\n      if (menu.value) return\n\n      if (isFocused.value && !oldVal.length && newVal.length) {\n        menu.value = true\n      }\n    })\n\n    useRender(() => {\n      const hasList = !!(\n        (!props.hideNoData || displayItems.value.length) ||\n        slots['prepend-item'] ||\n        slots['append-item'] ||\n        slots['no-data']\n      )\n      const isDirty = model.value.length > 0\n      const textFieldProps = VTextField.filterProps(props)\n\n      return (\n        <VTextField\n          ref={ vTextFieldRef }\n          { ...textFieldProps }\n          v-model={ search.value }\n          onUpdate:modelValue={ onUpdateModelValue }\n          v-model:focused={ isFocused.value }\n          validationValue={ model.externalValue }\n          counterValue={ counterValue.value }\n          dirty={ isDirty }\n          onChange={ onChange }\n          class={[\n            'v-autocomplete',\n            `v-autocomplete--${props.multiple ? 'multiple' : 'single'}`,\n            {\n              'v-autocomplete--active-menu': menu.value,\n              'v-autocomplete--chips': !!props.chips,\n              'v-autocomplete--selection-slot': !!hasSelectionSlot.value,\n              'v-autocomplete--selecting-index': selectionIndex.value > -1,\n            },\n            props.class,\n          ]}\n          style={ props.style }\n          readonly={ form.isReadonly.value }\n          placeholder={ isDirty ? undefined : props.placeholder }\n          onClick:clear={ onClear }\n          onMousedown:control={ onMousedownControl }\n          onKeydown={ onKeydown }\n        >\n          {{\n            ...slots,\n            default: () => (\n              <>\n                <VMenu\n                  ref={ vMenuRef }\n                  v-model={ menu.value }\n                  activator=\"parent\"\n                  contentClass=\"v-autocomplete__content\"\n                  disabled={ menuDisabled.value }\n                  eager={ props.eager }\n                  maxHeight={ 310 }\n                  openOnClick={ false }\n                  closeOnContentClick={ false }\n                  transition={ props.transition }\n                  onAfterEnter={ onAfterEnter }\n                  onAfterLeave={ onAfterLeave }\n                  { ...props.menuProps }\n                >\n                  { hasList && (\n                    <VList\n                      ref={ listRef }\n                      selected={ selectedValues.value }\n                      selectStrategy={ props.multiple ? 'independent' : 'single-independent' }\n                      onMousedown={ (e: MouseEvent) => e.preventDefault() }\n                      onKeydown={ onListKeydown }\n                      onFocusin={ onFocusin }\n                      onFocusout={ onFocusout }\n                      tabindex=\"-1\"\n                      aria-live=\"polite\"\n                      color={ props.itemColor ?? props.color }\n                      { ...listEvents }\n                      { ...props.listProps }\n                    >\n                      { slots['prepend-item']?.() }\n\n                      { !displayItems.value.length && !props.hideNoData && (slots['no-data']?.() ?? (\n                        <VListItem key=\"no-data\" title={ t(props.noDataText) } />\n                      ))}\n\n                      <VVirtualScroll ref={ vVirtualScrollRef } renderless items={ displayItems.value } itemKey=\"value\">\n                        { ({ item, index, itemRef }) => {\n                          const itemProps = mergeProps(item.props, {\n                            ref: itemRef,\n                            key: item.value,\n                            active: (highlightFirst.value && index === 0) ? true : undefined,\n                            onClick: () => select(item, null),\n                          })\n\n                          return slots.item?.({\n                            item,\n                            index,\n                            props: itemProps,\n                          }) ?? (\n                            <VListItem { ...itemProps } role=\"option\">\n                            {{\n                              prepend: ({ isSelected }) => (\n                                <>\n                                  { props.multiple && !props.hideSelected ? (\n                                    <VCheckboxBtn\n                                      key={ item.value }\n                                      modelValue={ isSelected }\n                                      ripple={ false }\n                                      tabindex=\"-1\"\n                                    />\n                                  ) : undefined }\n\n                                  { item.props.prependAvatar && (\n                                    <VAvatar image={ item.props.prependAvatar } />\n                                  )}\n\n                                  { item.props.prependIcon && (\n                                    <VIcon icon={ item.props.prependIcon } />\n                                  )}\n                                </>\n                              ),\n                              title: () => {\n                                return isPristine.value\n                                  ? item.title\n                                  : highlightResult('v-autocomplete', item.title, getMatches(item)?.title)\n                              },\n                            }}\n                          </VListItem>\n                          )\n                        }}\n                      </VVirtualScroll>\n\n                      { slots['append-item']?.() }\n                    </VList>\n                  )}\n                </VMenu>\n\n                { model.value.map((item, index) => {\n                  function onChipClose (e: Event) {\n                    e.stopPropagation()\n                    e.preventDefault()\n\n                    select(item, false)\n                  }\n\n                  const slotProps = {\n                    'onClick:close': onChipClose,\n                    onKeydown (e: KeyboardEvent) {\n                      if (e.key !== 'Enter' && e.key !== ' ') return\n\n                      e.preventDefault()\n                      e.stopPropagation()\n\n                      onChipClose(e)\n                    },\n                    onMousedown (e: MouseEvent) {\n                      e.preventDefault()\n                      e.stopPropagation()\n                    },\n                    modelValue: true,\n                    'onUpdate:modelValue': undefined,\n                  }\n\n                  const hasSlot = hasChips.value ? !!slots.chip : !!slots.selection\n                  const slotContent = hasSlot\n                    ? ensureValidVNode(\n                      hasChips.value\n                        ? slots.chip!({ item, index, props: slotProps })\n                        : slots.selection!({ item, index })\n                    )\n                    : undefined\n\n                  if (hasSlot && !slotContent) return undefined\n\n                  return (\n                    <div\n                      key={ item.value }\n                      class={[\n                        'v-autocomplete__selection',\n                        index === selectionIndex.value && [\n                          'v-autocomplete__selection--selected',\n                          textColorClasses.value,\n                        ],\n                      ]}\n                      style={ index === selectionIndex.value ? textColorStyles.value : {} }\n                    >\n                      { hasChips.value ? (\n                        !slots.chip ? (\n                          <VChip\n                            key=\"chip\"\n                            closable={ props.closableChips }\n                            size=\"small\"\n                            text={ item.title }\n                            disabled={ item.props.disabled }\n                            { ...slotProps }\n                          />\n                        ) : (\n                          <VDefaultsProvider\n                            key=\"chip-defaults\"\n                            defaults={{\n                              VChip: {\n                                closable: props.closableChips,\n                                size: 'small',\n                                text: item.title,\n                              },\n                            }}\n                          >\n                            { slotContent }\n                          </VDefaultsProvider>\n                        )\n                      ) : (\n                        slotContent ?? (\n                          <span class=\"v-autocomplete__selection-text\">\n                            { item.title }\n                            { props.multiple && (index < model.value.length - 1) && (\n                              <span class=\"v-autocomplete__selection-comma\">,</span>\n                            )}\n                          </span>\n                        )\n                      )}\n                    </div>\n                  )\n                })}\n              </>\n            ),\n            'append-inner': (...args) => (\n              <>\n                { slots['append-inner']?.(...args) }\n                { props.menuIcon ? (\n                  <VIcon\n                    class=\"v-autocomplete__menu-icon\"\n                    color={ vTextFieldRef.value?.fieldIconColor }\n                    icon={ props.menuIcon }\n                    onMousedown={ onMousedownMenuIcon }\n                    onClick={ noop }\n                    aria-label={ t(label.value) }\n                    title={ t(label.value) }\n                    tabindex=\"-1\"\n                  />\n                ) : undefined }\n              </>\n            ),\n          }}\n        </VTextField>\n      )\n    })\n\n    return forwardRefs({\n      isFocused,\n      isPristine,\n      menu,\n      search,\n      filteredItems,\n      select,\n    }, vTextFieldRef)\n  },\n})\n\nexport type VAutocomplete = InstanceType<typeof VAutocomplete>\n"]},"metadata":{},"sourceType":"module"}
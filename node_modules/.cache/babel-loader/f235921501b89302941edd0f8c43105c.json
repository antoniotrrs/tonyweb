{"ast":null,"code":"import _objectSpread from \"/Users/antoniotorres/Documents/tony/tonyweb/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport { vShow as _vShow, createVNode as _createVNode, withDirectives as _withDirectives } from \"vue\"; // Composables\n\nimport { makeComponentProps } from \"../../composables/component.js\";\nimport { makeGroupItemProps, useGroupItem } from \"../../composables/group.js\";\nimport { makeLazyProps, useLazy } from \"../../composables/lazy.js\";\nimport { useSsrBoot } from \"../../composables/ssrBoot.js\";\nimport { MaybeTransition } from \"../../composables/transition.js\"; // Directives\n\nimport Touch from \"../../directives/touch/index.js\"; // Utilities\n\nimport { computed, inject, nextTick, shallowRef } from 'vue';\nimport { convertToUnit, genericComponent, propsFactory, useRender } from \"../../util/index.js\"; // Types\n\nimport { VWindowGroupSymbol, VWindowSymbol } from \"./VWindow.js\";\nexport var makeVWindowItemProps = propsFactory(_objectSpread(_objectSpread(_objectSpread({\n  reverseTransition: {\n    type: [Boolean, String],\n    default: undefined\n  },\n  transition: {\n    type: [Boolean, String],\n    default: undefined\n  }\n}, makeComponentProps()), makeGroupItemProps()), makeLazyProps()), 'VWindowItem');\nexport var VWindowItem = genericComponent()({\n  name: 'VWindowItem',\n  directives: {\n    Touch: Touch\n  },\n  props: makeVWindowItemProps(),\n  emits: {\n    'group:selected': function groupSelected(val) {\n      return true;\n    }\n  },\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n    var window = inject(VWindowSymbol);\n    var groupItem = useGroupItem(props, VWindowGroupSymbol);\n\n    var _useSsrBoot = useSsrBoot(),\n        isBooted = _useSsrBoot.isBooted;\n\n    if (!window || !groupItem) throw new Error('[Vuetify] VWindowItem must be used inside VWindow');\n    var isTransitioning = shallowRef(false);\n    var hasTransition = computed(function () {\n      return isBooted.value && (window.isReversed.value ? props.reverseTransition !== false : props.transition !== false);\n    });\n\n    function onAfterTransition() {\n      if (!isTransitioning.value || !window) {\n        return;\n      } // Finalize transition state.\n\n\n      isTransitioning.value = false;\n\n      if (window.transitionCount.value > 0) {\n        window.transitionCount.value -= 1; // Remove container height if we are out of transition.\n\n        if (window.transitionCount.value === 0) {\n          window.transitionHeight.value = undefined;\n        }\n      }\n    }\n\n    function onBeforeTransition() {\n      if (isTransitioning.value || !window) {\n        return;\n      } // Initialize transition state here.\n\n\n      isTransitioning.value = true;\n\n      if (window.transitionCount.value === 0) {\n        var _window$rootRef$value;\n\n        // Set initial height for height transition.\n        window.transitionHeight.value = convertToUnit((_window$rootRef$value = window.rootRef.value) === null || _window$rootRef$value === void 0 ? void 0 : _window$rootRef$value.clientHeight);\n      }\n\n      window.transitionCount.value += 1;\n    }\n\n    function onTransitionCancelled() {\n      onAfterTransition(); // This should have the same path as normal transition end.\n    }\n\n    function onEnterTransition(el) {\n      if (!isTransitioning.value) {\n        return;\n      }\n\n      nextTick(function () {\n        // Do not set height if no transition or cancelled.\n        if (!hasTransition.value || !isTransitioning.value || !window) {\n          return;\n        } // Set transition target height.\n\n\n        window.transitionHeight.value = convertToUnit(el.clientHeight);\n      });\n    }\n\n    var transition = computed(function () {\n      var name = window.isReversed.value ? props.reverseTransition : props.transition;\n      return !hasTransition.value ? false : {\n        name: typeof name !== 'string' ? window.transition.value : name,\n        onBeforeEnter: onBeforeTransition,\n        onAfterEnter: onAfterTransition,\n        onEnterCancelled: onTransitionCancelled,\n        onBeforeLeave: onBeforeTransition,\n        onAfterLeave: onAfterTransition,\n        onLeaveCancelled: onTransitionCancelled,\n        onEnter: onEnterTransition\n      };\n    });\n\n    var _useLazy = useLazy(props, groupItem.isSelected),\n        hasContent = _useLazy.hasContent;\n\n    useRender(function () {\n      return _createVNode(MaybeTransition, {\n        \"transition\": transition.value,\n        \"disabled\": !isBooted.value\n      }, {\n        default: function _default() {\n          var _slots$default;\n\n          return [_withDirectives(_createVNode(\"div\", {\n            \"class\": ['v-window-item', groupItem.selectedClass.value, props.class],\n            \"style\": props.style\n          }, [hasContent.value && ((_slots$default = slots.default) === null || _slots$default === void 0 ? void 0 : _slots$default.call(slots))]), [[_vShow, groupItem.isSelected.value]])];\n        }\n      });\n    });\n    return {\n      groupItem: groupItem\n    };\n  }\n});","map":{"version":3,"mappings":"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","names":["makeComponentProps","makeGroupItemProps","useGroupItem","makeLazyProps","useLazy","useSsrBoot","MaybeTransition","Touch","computed","inject","nextTick","shallowRef","convertToUnit","genericComponent","propsFactory","useRender","VWindowGroupSymbol","VWindowSymbol","makeVWindowItemProps","reverseTransition","type","Boolean","String","default","undefined","transition","VWindowItem","name","directives","props","emits","val","setup","_ref","slots","window","groupItem","isBooted","Error","isTransitioning","hasTransition","value","isReversed","onAfterTransition","transitionCount","transitionHeight","onBeforeTransition","rootRef","clientHeight","onTransitionCancelled","onEnterTransition","el","onBeforeEnter","onAfterEnter","onEnterCancelled","onBeforeLeave","onAfterLeave","onLeaveCancelled","onEnter","isSelected","hasContent","selectedClass","class","style"],"sources":["../../../src/components/VWindow/VWindowItem.tsx"],"sourcesContent":["// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeGroupItemProps, useGroupItem } from '@/composables/group'\nimport { makeLazyProps, useLazy } from '@/composables/lazy'\nimport { useSsrBoot } from '@/composables/ssrBoot'\nimport { MaybeTransition } from '@/composables/transition'\n\n// Directives\nimport Touch from '@/directives/touch'\n\n// Utilities\nimport { computed, inject, nextTick, shallowRef } from 'vue'\nimport { convertToUnit, genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport { VWindowGroupSymbol, VWindowSymbol } from './VWindow'\n\nexport const makeVWindowItemProps = propsFactory({\n  reverseTransition: {\n    type: [Boolean, String],\n    default: undefined,\n  },\n  transition: {\n    type: [Boolean, String],\n    default: undefined,\n  },\n\n  ...makeComponentProps(),\n  ...makeGroupItemProps(),\n  ...makeLazyProps(),\n}, 'VWindowItem')\n\nexport const VWindowItem = genericComponent()({\n  name: 'VWindowItem',\n\n  directives: {\n    Touch,\n  },\n\n  props: makeVWindowItemProps(),\n\n  emits: {\n    'group:selected': (val: { value: boolean }) => true,\n  },\n\n  setup (props, { slots }) {\n    const window = inject(VWindowSymbol)\n    const groupItem = useGroupItem(props, VWindowGroupSymbol)\n    const { isBooted } = useSsrBoot()\n\n    if (!window || !groupItem) throw new Error('[Vuetify] VWindowItem must be used inside VWindow')\n\n    const isTransitioning = shallowRef(false)\n    const hasTransition = computed(() => isBooted.value && (\n      window.isReversed.value\n        ? props.reverseTransition !== false\n        : props.transition !== false\n    ))\n\n    function onAfterTransition () {\n      if (!isTransitioning.value || !window) {\n        return\n      }\n\n      // Finalize transition state.\n      isTransitioning.value = false\n      if (window.transitionCount.value > 0) {\n        window.transitionCount.value -= 1\n\n        // Remove container height if we are out of transition.\n        if (window.transitionCount.value === 0) {\n          window.transitionHeight.value = undefined\n        }\n      }\n    }\n\n    function onBeforeTransition () {\n      if (isTransitioning.value || !window) {\n        return\n      }\n\n      // Initialize transition state here.\n      isTransitioning.value = true\n\n      if (window.transitionCount.value === 0) {\n        // Set initial height for height transition.\n        window.transitionHeight.value = convertToUnit(window.rootRef.value?.clientHeight)\n      }\n\n      window.transitionCount.value += 1\n    }\n\n    function onTransitionCancelled () {\n      onAfterTransition() // This should have the same path as normal transition end.\n    }\n\n    function onEnterTransition (el: Element) {\n      if (!isTransitioning.value) {\n        return\n      }\n\n      nextTick(() => {\n        // Do not set height if no transition or cancelled.\n        if (!hasTransition.value || !isTransitioning.value || !window) {\n          return\n        }\n\n        // Set transition target height.\n        window.transitionHeight.value = convertToUnit(el.clientHeight)\n      })\n    }\n\n    const transition = computed(() => {\n      const name = window.isReversed.value\n        ? props.reverseTransition\n        : props.transition\n\n      return !hasTransition.value ? false : {\n        name: typeof name !== 'string' ? window.transition.value : name,\n        onBeforeEnter: onBeforeTransition,\n        onAfterEnter: onAfterTransition,\n        onEnterCancelled: onTransitionCancelled,\n        onBeforeLeave: onBeforeTransition,\n        onAfterLeave: onAfterTransition,\n        onLeaveCancelled: onTransitionCancelled,\n        onEnter: onEnterTransition,\n      }\n    })\n\n    const { hasContent } = useLazy(props, groupItem.isSelected)\n\n    useRender(() => (\n      <MaybeTransition transition={ transition.value } disabled={ !isBooted.value }>\n        <div\n          class={[\n            'v-window-item',\n            groupItem.selectedClass.value,\n            props.class,\n          ]}\n          style={ props.style }\n          v-show={ groupItem.isSelected.value }\n        >\n          { hasContent.value && slots.default?.() }\n        </div>\n      </MaybeTransition>\n    ))\n\n    return { groupItem }\n  },\n})\n\nexport type VWindowItem = InstanceType<typeof VWindowItem>\n"]},"metadata":{},"sourceType":"module"}
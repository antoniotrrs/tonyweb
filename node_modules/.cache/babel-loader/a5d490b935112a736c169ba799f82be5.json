{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\"; // Composables\n\nimport { makeComponentProps } from \"../../composables/component.js\";\nimport { createForm, makeFormProps } from \"../../composables/form.js\";\nimport { forwardRefs } from \"../../composables/forwardRefs.js\"; // Utilities\n\nimport { ref } from 'vue';\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.js\"; // Types\n\nexport const makeVFormProps = propsFactory({ ...makeComponentProps(),\n  ...makeFormProps()\n}, 'VForm');\nexport const VForm = genericComponent()({\n  name: 'VForm',\n  props: makeVFormProps(),\n  emits: {\n    'update:modelValue': val => true,\n    submit: e => true\n  },\n\n  setup(props, _ref) {\n    let {\n      slots,\n      emit\n    } = _ref;\n    const form = createForm(props);\n    const formRef = ref();\n\n    function onReset(e) {\n      e.preventDefault();\n      form.reset();\n    }\n\n    function onSubmit(_e) {\n      const e = _e;\n      const ready = form.validate();\n      e.then = ready.then.bind(ready);\n      e.catch = ready.catch.bind(ready);\n      e.finally = ready.finally.bind(ready);\n      emit('submit', e);\n\n      if (!e.defaultPrevented) {\n        ready.then(_ref2 => {\n          let {\n            valid\n          } = _ref2;\n\n          if (valid) {\n            formRef.value?.submit();\n          }\n        });\n      }\n\n      e.preventDefault();\n    }\n\n    useRender(() => _createVNode(\"form\", {\n      \"ref\": formRef,\n      \"class\": ['v-form', props.class],\n      \"style\": props.style,\n      \"novalidate\": true,\n      \"onReset\": onReset,\n      \"onSubmit\": onSubmit\n    }, [slots.default?.(form)]));\n    return forwardRefs(form, formRef);\n  }\n\n});","map":{"version":3,"mappings":"mDAAA;;AAAA,SACSA,kBADT,QAC2B,gCAD3B;AAC2B,SAClBC,UADkB,EACNC,aADM,QACO,2BADP;AACO,SACzBC,WADyB,QACd,kCADc,C,CAGlC;;AACA,SAASC,GAAT,QAAoB,KAApB;AAAyB,SAChBC,gBADgB,EACEC,YADF,EACgBC,SADhB,QACyB,qBADzB,C,CAGzB;;AAGA,OAAO,MAAMC,cAAc,GAAGF,YAAY,CAAC,EACzC,GAAGN,kBAAkB,EADoB;AAEzC,KAAGE,aAAa;AAFyB,CAAD,EAGvC,OAHuC,CAAnC;AASP,OAAO,MAAMO,KAAK,GAAGJ,gBAAgB,GAAe;AAClDK,MAAI,EAAE,OAD4C;AAGlDC,OAAK,EAAEH,cAAc,EAH6B;AAKlDI,OAAK,EAAE;AACL,yBAAsBC,GAAmB,IAAK,IADzC;AAELC,UAAM,EAAGC,CAAqB,IAAK;AAF9B,GAL2C;;AAUlDC,OAAKA,CAAEL,KAAFK,EAAOC,IAAPD,EAA0B;AAAA,QAAjB;AAAEE,WAAF;AAASC;AAAT,QAAeF,IAAE;AAC7B,UAAMG,IAAI,GAAGnB,UAAU,CAACU,KAAD,CAAvB;AACA,UAAMU,OAAO,GAAGjB,GAAG,EAAnB;;AAEA,aAASkB,OAAT,CAAkBP,CAAlB,EAA4B;AAC1BA,OAAC,CAACQ,cAAFR;AACAK,UAAI,CAACI,KAALJ;AACF;;AAEA,aAASK,QAAT,CAAmBC,EAAnB,EAA8B;AAC5B,YAAMX,CAAC,GAAGW,EAAV;AAEA,YAAMC,KAAK,GAAGP,IAAI,CAACQ,QAALR,EAAd;AACAL,OAAC,CAACc,IAAFd,GAASY,KAAK,CAACE,IAANF,CAAWG,IAAXH,CAAgBA,KAAhBA,CAATZ;AACAA,OAAC,CAACgB,KAAFhB,GAAUY,KAAK,CAACI,KAANJ,CAAYG,IAAZH,CAAiBA,KAAjBA,CAAVZ;AACAA,OAAC,CAACiB,OAAFjB,GAAYY,KAAK,CAACK,OAANL,CAAcG,IAAdH,CAAmBA,KAAnBA,CAAZZ;AAEAI,UAAI,CAAC,QAAD,EAAWJ,CAAX,CAAJI;;AAEA,UAAI,CAACJ,CAAC,CAACkB,gBAAP,EAAyB;AACvBN,aAAK,CAACE,IAANF,CAAWO,SAAe;AAAA,cAAd;AAAEC;AAAF,cAASD,KAAK;;AACxB,cAAIC,KAAJ,EAAW;AACTd,mBAAO,CAACe,KAARf,EAAeP,MAAfO;AACF;AACD,SAJDM;AAKF;;AAEAZ,OAAC,CAACQ,cAAFR;AACF;;AAEAR,aAAS,CAAC;AAAA,aAEAc,OAFA;AAEO,eACN,CACL,QADK,EAELV,KAAK,CAAC0B,KAFD,CAHD;AAML,eACO1B,KAAK,CAAC2B,KAPR;AAOa,wBAPb;AAOa,iBAEThB,OATJ;AASW,kBACNG;AAVL,OAUa,CAEjBP,KAAK,CAACqB,OAANrB,GAAgBE,IAAhBF,CAFiB,CAVb,CAAD,CAATX;AAgBA,WAAOJ,WAAW,CAACiB,IAAD,EAAOC,OAAP,CAAlB;AACF;;AAzDkD,CAAf,CAA9B","names":["makeComponentProps","createForm","makeFormProps","forwardRefs","ref","genericComponent","propsFactory","useRender","makeVFormProps","VForm","name","props","emits","val","submit","e","setup","_ref","slots","emit","form","formRef","onReset","preventDefault","reset","onSubmit","_e","ready","validate","then","bind","catch","finally","defaultPrevented","_ref2","valid","value","class","style","default"],"sources":["../../../src/components/VForm/VForm.tsx"],"sourcesContent":["// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { createForm, makeFormProps } from '@/composables/form'\nimport { forwardRefs } from '@/composables/forwardRefs'\n\n// Utilities\nimport { ref } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { SubmitEventPromise } from '@/composables/form'\n\nexport const makeVFormProps = propsFactory({\n  ...makeComponentProps(),\n  ...makeFormProps(),\n}, 'VForm')\n\ntype VFormSlots = {\n  default: ReturnType<typeof createForm>\n}\n\nexport const VForm = genericComponent<VFormSlots>()({\n  name: 'VForm',\n\n  props: makeVFormProps(),\n\n  emits: {\n    'update:modelValue': (val: boolean | null) => true,\n    submit: (e: SubmitEventPromise) => true,\n  },\n\n  setup (props, { slots, emit }) {\n    const form = createForm(props)\n    const formRef = ref<HTMLFormElement>()\n\n    function onReset (e: Event) {\n      e.preventDefault()\n      form.reset()\n    }\n\n    function onSubmit (_e: Event) {\n      const e = _e as SubmitEventPromise\n\n      const ready = form.validate()\n      e.then = ready.then.bind(ready)\n      e.catch = ready.catch.bind(ready)\n      e.finally = ready.finally.bind(ready)\n\n      emit('submit', e)\n\n      if (!e.defaultPrevented) {\n        ready.then(({ valid }) => {\n          if (valid) {\n            formRef.value?.submit()\n          }\n        })\n      }\n\n      e.preventDefault()\n    }\n\n    useRender(() => ((\n      <form\n        ref={ formRef }\n        class={[\n          'v-form',\n          props.class,\n        ]}\n        style={ props.style }\n        novalidate\n        onReset={ onReset }\n        onSubmit={ onSubmit }\n      >\n        { slots.default?.(form) }\n      </form>\n    )))\n\n    return forwardRefs(form, formRef)\n  },\n})\n\nexport type VForm = InstanceType<typeof VForm>\n"]},"metadata":{},"sourceType":"module"}
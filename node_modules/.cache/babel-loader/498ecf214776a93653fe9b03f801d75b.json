{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\"; // Styles\n\nimport \"./VParallax.css\"; // Components\n\nimport { VImg } from \"../VImg/index.js\"; // Composables\n\nimport { useDisplay } from \"../../composables/index.js\";\nimport { makeComponentProps } from \"../../composables/component.js\";\nimport { useIntersectionObserver } from \"../../composables/intersectionObserver.js\";\nimport { useResizeObserver } from \"../../composables/resizeObserver.js\"; // Utilities\n\nimport { computed, onBeforeUnmount, ref, watch, watchEffect } from 'vue';\nimport { clamp, genericComponent, getScrollParent, propsFactory, useRender } from \"../../util/index.js\"; // Types\n\nfunction floor(val) {\n  return Math.floor(Math.abs(val)) * Math.sign(val);\n}\n\nexport const makeVParallaxProps = propsFactory({\n  scale: {\n    type: [Number, String],\n    default: 0.5\n  },\n  ...makeComponentProps()\n}, 'VParallax');\nexport const VParallax = genericComponent()({\n  name: 'VParallax',\n  props: makeVParallaxProps(),\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      intersectionRef,\n      isIntersecting\n    } = useIntersectionObserver();\n    const {\n      resizeRef,\n      contentRect\n    } = useResizeObserver();\n    const {\n      height: displayHeight\n    } = useDisplay();\n    const root = ref();\n    watchEffect(() => {\n      intersectionRef.value = resizeRef.value = root.value?.$el;\n    });\n    let scrollParent;\n    watch(isIntersecting, val => {\n      if (val) {\n        scrollParent = getScrollParent(intersectionRef.value);\n        scrollParent = scrollParent === document.scrollingElement ? document : scrollParent;\n        scrollParent.addEventListener('scroll', onScroll, {\n          passive: true\n        });\n        onScroll();\n      } else {\n        scrollParent.removeEventListener('scroll', onScroll);\n      }\n    });\n    onBeforeUnmount(() => {\n      scrollParent?.removeEventListener('scroll', onScroll);\n    });\n    watch(displayHeight, onScroll);\n    watch(() => contentRect.value?.height, onScroll);\n    const scale = computed(() => {\n      return 1 - clamp(Number(props.scale));\n    });\n    let frame = -1;\n\n    function onScroll() {\n      if (!isIntersecting.value) return;\n      cancelAnimationFrame(frame);\n      frame = requestAnimationFrame(() => {\n        const el = (root.value?.$el).querySelector('.v-img__img');\n        if (!el) return;\n        const scrollHeight = scrollParent instanceof Document ? document.documentElement.clientHeight : scrollParent.clientHeight;\n        const scrollPos = scrollParent instanceof Document ? window.scrollY : scrollParent.scrollTop;\n        const top = intersectionRef.value.getBoundingClientRect().top + scrollPos;\n        const height = contentRect.value.height;\n        const center = top + (height - scrollHeight) / 2;\n        const translate = floor((scrollPos - center) * scale.value);\n        const sizeScale = Math.max(1, (scale.value * (scrollHeight - height) + height) / height);\n        el.style.setProperty('transform', `translateY(${translate}px) scale(${sizeScale})`);\n      });\n    }\n\n    useRender(() => _createVNode(VImg, {\n      \"class\": ['v-parallax', {\n        'v-parallax--active': isIntersecting.value\n      }, props.class],\n      \"style\": props.style,\n      \"ref\": root,\n      \"cover\": true,\n      \"onLoadstart\": onScroll,\n      \"onLoad\": onScroll\n    }, slots));\n    return {};\n  }\n\n});","map":{"version":3,"mappings":"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","names":["VImg","useDisplay","makeComponentProps","useIntersectionObserver","useResizeObserver","computed","onBeforeUnmount","ref","watch","watchEffect","clamp","genericComponent","getScrollParent","propsFactory","useRender","floor","val","Math","abs","sign","makeVParallaxProps","scale","type","Number","String","default","VParallax","name","props","setup","_ref","slots","intersectionRef","isIntersecting","resizeRef","contentRect","height","displayHeight","root","value","$el","scrollParent","document","scrollingElement","addEventListener","onScroll","passive","removeEventListener","frame","cancelAnimationFrame","requestAnimationFrame","el","querySelector","scrollHeight","Document","documentElement","clientHeight","scrollPos","window","scrollY","scrollTop","top","getBoundingClientRect","center","translate","sizeScale","max","style","setProperty","class"],"sources":["../../../src/components/VParallax/VParallax.tsx"],"sourcesContent":["// Styles\nimport './VParallax.sass'\n\n// Components\nimport { VImg } from '@/components/VImg'\n\n// Composables\nimport { useDisplay } from '@/composables'\nimport { makeComponentProps } from '@/composables/component'\nimport { useIntersectionObserver } from '@/composables/intersectionObserver'\nimport { useResizeObserver } from '@/composables/resizeObserver'\n\n// Utilities\nimport { computed, onBeforeUnmount, ref, watch, watchEffect } from 'vue'\nimport { clamp, genericComponent, getScrollParent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { VImgSlots } from '@/components/VImg/VImg'\n\nfunction floor (val: number) {\n  return Math.floor(Math.abs(val)) * Math.sign(val)\n}\n\nexport const makeVParallaxProps = propsFactory({\n  scale: {\n    type: [Number, String],\n    default: 0.5,\n  },\n\n  ...makeComponentProps(),\n}, 'VParallax')\n\nexport const VParallax = genericComponent<VImgSlots>()({\n  name: 'VParallax',\n\n  props: makeVParallaxProps(),\n\n  setup (props, { slots }) {\n    const { intersectionRef, isIntersecting } = useIntersectionObserver()\n    const { resizeRef, contentRect } = useResizeObserver()\n    const { height: displayHeight } = useDisplay()\n\n    const root = ref<VImg>()\n\n    watchEffect(() => {\n      intersectionRef.value = resizeRef.value = root.value?.$el\n    })\n\n    let scrollParent: Element | Document\n    watch(isIntersecting, val => {\n      if (val) {\n        scrollParent = getScrollParent(intersectionRef.value)\n        scrollParent = scrollParent === document.scrollingElement ? document : scrollParent\n        scrollParent.addEventListener('scroll', onScroll, { passive: true })\n        onScroll()\n      } else {\n        scrollParent.removeEventListener('scroll', onScroll)\n      }\n    })\n\n    onBeforeUnmount(() => {\n      scrollParent?.removeEventListener('scroll', onScroll)\n    })\n\n    watch(displayHeight, onScroll)\n    watch(() => contentRect.value?.height, onScroll)\n\n    const scale = computed(() => {\n      return 1 - clamp(Number(props.scale))\n    })\n\n    let frame = -1\n    function onScroll () {\n      if (!isIntersecting.value) return\n\n      cancelAnimationFrame(frame)\n      frame = requestAnimationFrame(() => {\n        const el: HTMLElement | null = (root.value?.$el as Element).querySelector('.v-img__img')\n        if (!el) return\n\n        const scrollHeight = scrollParent instanceof Document ? document.documentElement.clientHeight : scrollParent.clientHeight\n        const scrollPos = scrollParent instanceof Document ? window.scrollY : scrollParent.scrollTop\n        const top = intersectionRef.value!.getBoundingClientRect().top + scrollPos\n        const height = contentRect.value!.height\n\n        const center = top + (height - scrollHeight) / 2\n        const translate = floor((scrollPos - center) * scale.value)\n        const sizeScale = Math.max(1, (scale.value * (scrollHeight - height) + height) / height)\n\n        el.style.setProperty('transform', `translateY(${translate}px) scale(${sizeScale})`)\n      })\n    }\n\n    useRender(() => (\n      <VImg\n        class={[\n          'v-parallax',\n          { 'v-parallax--active': isIntersecting.value },\n          props.class,\n        ]}\n        style={ props.style }\n        ref={ root }\n        cover\n        onLoadstart={ onScroll }\n        onLoad={ onScroll }\n        v-slots={ slots }\n      />\n    ))\n\n    return {}\n  },\n})\n\nexport type VParallax = InstanceType<typeof VParallax>\n"]},"metadata":{},"sourceType":"module"}
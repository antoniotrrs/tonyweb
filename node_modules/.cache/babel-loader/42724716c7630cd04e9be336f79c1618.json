{"ast":null,"code":"export function calculateUpdatedTarget(_ref) {\n  var selectedElement = _ref.selectedElement,\n      containerElement = _ref.containerElement,\n      isRtl = _ref.isRtl,\n      isHorizontal = _ref.isHorizontal;\n  var containerSize = getOffsetSize(isHorizontal, containerElement);\n  var scrollPosition = getScrollPosition(isHorizontal, isRtl, containerElement);\n  var childrenSize = getOffsetSize(isHorizontal, selectedElement);\n  var childrenStartPosition = getOffsetPosition(isHorizontal, selectedElement);\n  var additionalOffset = childrenSize * 0.4;\n\n  if (scrollPosition > childrenStartPosition) {\n    return childrenStartPosition - additionalOffset;\n  } else if (scrollPosition + containerSize < childrenStartPosition + childrenSize) {\n    return childrenStartPosition - containerSize + childrenSize + additionalOffset;\n  }\n\n  return scrollPosition;\n}\nexport function calculateCenteredTarget(_ref2) {\n  var selectedElement = _ref2.selectedElement,\n      containerElement = _ref2.containerElement,\n      isHorizontal = _ref2.isHorizontal;\n  var containerOffsetSize = getOffsetSize(isHorizontal, containerElement);\n  var childrenOffsetPosition = getOffsetPosition(isHorizontal, selectedElement);\n  var childrenOffsetSize = getOffsetSize(isHorizontal, selectedElement);\n  return childrenOffsetPosition - containerOffsetSize / 2 + childrenOffsetSize / 2;\n}\nexport function getScrollSize(isHorizontal, element) {\n  var key = isHorizontal ? 'scrollWidth' : 'scrollHeight';\n  return (element === null || element === void 0 ? void 0 : element[key]) || 0;\n}\nexport function getClientSize(isHorizontal, element) {\n  var key = isHorizontal ? 'clientWidth' : 'clientHeight';\n  return (element === null || element === void 0 ? void 0 : element[key]) || 0;\n}\nexport function getScrollPosition(isHorizontal, rtl, element) {\n  if (!element) {\n    return 0;\n  }\n\n  var scrollLeft = element.scrollLeft,\n      offsetWidth = element.offsetWidth,\n      scrollWidth = element.scrollWidth;\n\n  if (isHorizontal) {\n    return rtl ? scrollWidth - offsetWidth + scrollLeft : scrollLeft;\n  }\n\n  return element.scrollTop;\n}\nexport function getOffsetSize(isHorizontal, element) {\n  var key = isHorizontal ? 'offsetWidth' : 'offsetHeight';\n  return (element === null || element === void 0 ? void 0 : element[key]) || 0;\n}\nexport function getOffsetPosition(isHorizontal, element) {\n  var key = isHorizontal ? 'offsetLeft' : 'offsetTop';\n  return (element === null || element === void 0 ? void 0 : element[key]) || 0;\n}","map":{"version":3,"mappings":"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","names":["calculateUpdatedTarget","_ref","selectedElement","containerElement","isRtl","isHorizontal","containerSize","getOffsetSize","scrollPosition","getScrollPosition","childrenSize","childrenStartPosition","getOffsetPosition","additionalOffset","calculateCenteredTarget","_ref2","containerOffsetSize","childrenOffsetPosition","childrenOffsetSize","getScrollSize","element","key","getClientSize","rtl","scrollLeft","offsetWidth","scrollWidth","scrollTop"],"sources":["../../../src/components/VSlideGroup/helpers.ts"],"sourcesContent":["export function calculateUpdatedTarget ({\n  selectedElement,\n  containerElement,\n  isRtl,\n  isHorizontal,\n}: {\n  selectedElement: HTMLElement\n  containerElement: HTMLElement\n  isRtl: boolean\n  isHorizontal: boolean\n}): number {\n  const containerSize = getOffsetSize(isHorizontal, containerElement)\n  const scrollPosition = getScrollPosition(isHorizontal, isRtl, containerElement)\n\n  const childrenSize = getOffsetSize(isHorizontal, selectedElement)\n  const childrenStartPosition = getOffsetPosition(isHorizontal, selectedElement)\n\n  const additionalOffset = childrenSize * 0.4\n\n  if (scrollPosition > childrenStartPosition) {\n    return childrenStartPosition - additionalOffset\n  } else if (scrollPosition + containerSize < childrenStartPosition + childrenSize) {\n    return childrenStartPosition - containerSize + childrenSize + additionalOffset\n  }\n\n  return scrollPosition\n}\n\nexport function calculateCenteredTarget ({\n  selectedElement,\n  containerElement,\n  isHorizontal,\n}: {\n  selectedElement: HTMLElement\n  containerElement: HTMLElement\n  isHorizontal: boolean\n}): number {\n  const containerOffsetSize = getOffsetSize(isHorizontal, containerElement)\n  const childrenOffsetPosition = getOffsetPosition(isHorizontal, selectedElement)\n  const childrenOffsetSize = getOffsetSize(isHorizontal, selectedElement)\n\n  return childrenOffsetPosition - (containerOffsetSize / 2) + (childrenOffsetSize / 2)\n}\n\nexport function getScrollSize (isHorizontal: boolean, element?: HTMLElement) {\n  const key = isHorizontal ? 'scrollWidth' : 'scrollHeight'\n  return element?.[key] || 0\n}\n\nexport function getClientSize (isHorizontal: boolean, element?: HTMLElement) {\n  const key = isHorizontal ? 'clientWidth' : 'clientHeight'\n  return element?.[key] || 0\n}\n\nexport function getScrollPosition (isHorizontal: boolean, rtl: boolean, element?: HTMLElement) {\n  if (!element) {\n    return 0\n  }\n\n  const {\n    scrollLeft,\n    offsetWidth,\n    scrollWidth,\n  } = element\n\n  if (isHorizontal) {\n    return rtl\n      ? scrollWidth - offsetWidth + scrollLeft\n      : scrollLeft\n  }\n\n  return element.scrollTop\n}\n\nexport function getOffsetSize (isHorizontal: boolean, element?: HTMLElement) {\n  const key = isHorizontal ? 'offsetWidth' : 'offsetHeight'\n  return element?.[key] || 0\n}\n\nexport function getOffsetPosition (isHorizontal: boolean, element?: HTMLElement) {\n  const key = isHorizontal ? 'offsetLeft' : 'offsetTop'\n  return element?.[key] || 0\n}\n"]},"metadata":{},"sourceType":"module"}
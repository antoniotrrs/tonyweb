{"ast":null,"code":"// Utilities\nimport { propsFactory } from \"../../../util/index.js\"; // Types\n\nexport const makeLineProps = propsFactory({\n  autoDraw: Boolean,\n  autoDrawDuration: [Number, String],\n  autoDrawEasing: {\n    type: String,\n    default: 'ease'\n  },\n  color: String,\n  gradient: {\n    type: Array,\n    default: () => []\n  },\n  gradientDirection: {\n    type: String,\n    validator: val => ['top', 'bottom', 'left', 'right'].includes(val),\n    default: 'top'\n  },\n  height: {\n    type: [String, Number],\n    default: 75\n  },\n  labels: {\n    type: Array,\n    default: () => []\n  },\n  labelSize: {\n    type: [Number, String],\n    default: 7\n  },\n  lineWidth: {\n    type: [String, Number],\n    default: 4\n  },\n  id: String,\n  itemValue: {\n    type: String,\n    default: 'value'\n  },\n  modelValue: {\n    type: Array,\n    default: () => []\n  },\n  min: [String, Number],\n  max: [String, Number],\n  padding: {\n    type: [String, Number],\n    default: 8\n  },\n  showLabels: Boolean,\n  smooth: [Boolean, String, Number],\n  width: {\n    type: [Number, String],\n    default: 300\n  }\n}, 'Line');","map":{"version":3,"mappings":"AAAA;AAAA,SACSA,YADT,QACqB,wBADrB,C,CAGA;;AAKA,OAAO,MAAMC,aAAa,GAAGD,YAAY,CAAC;AACxCE,UAAQ,EAAEC,OAD8B;AAExCC,kBAAgB,EAAE,CAACC,MAAD,EAASC,MAAT,CAFsB;AAGxCC,gBAAc,EAAE;AACdC,QAAI,EAAEF,MADQ;AAEdG,WAAO,EAAE;AAFK,GAHwB;AAOxCC,OAAK,EAAEJ,MAPiC;AAQxCK,UAAQ,EAAE;AACRH,QAAI,EAAEI,KADE;AAERH,WAAO,EAAEA,MAAO;AAFR,GAR8B;AAYxCI,mBAAiB,EAAE;AACjBL,QAAI,EAAEF,MADW;AAEjBQ,aAAS,EAAGC,GAAW,IAAK,CAAC,KAAD,EAAQ,QAAR,EAAkB,MAAlB,EAA0B,OAA1B,EAAmCC,QAAnC,CAA4CD,GAA5C,CAFX;AAGjBN,WAAO,EAAE;AAHQ,GAZqB;AAiBxCQ,QAAM,EAAE;AACNT,QAAI,EAAE,CAACF,MAAD,EAASD,MAAT,CADA;AAENI,WAAO,EAAE;AAFH,GAjBgC;AAqBxCS,QAAM,EAAE;AACNV,QAAI,EAAEI,KADA;AAENH,WAAO,EAAEA,MAAO;AAFV,GArBgC;AAyBxCU,WAAS,EAAE;AACTX,QAAI,EAAE,CAACH,MAAD,EAASC,MAAT,CADG;AAETG,WAAO,EAAE;AAFA,GAzB6B;AA6BxCW,WAAS,EAAE;AACTZ,QAAI,EAAE,CAACF,MAAD,EAASD,MAAT,CADG;AAETI,WAAO,EAAE;AAFA,GA7B6B;AAiCxCY,IAAE,EAAEf,MAjCoC;AAkCxCgB,WAAS,EAAE;AACTd,QAAI,EAAEF,MADG;AAETG,WAAO,EAAE;AAFA,GAlC6B;AAsCxCc,YAAU,EAAE;AACVf,QAAI,EAAEI,KADI;AAEVH,WAAO,EAAEA,MAAO;AAFN,GAtC4B;AA0CxCe,KAAG,EAAE,CAAClB,MAAD,EAASD,MAAT,CA1CmC;AA2CxCoB,KAAG,EAAE,CAACnB,MAAD,EAASD,MAAT,CA3CmC;AA4CxCqB,SAAO,EAAE;AACPlB,QAAI,EAAE,CAACF,MAAD,EAASD,MAAT,CADC;AAEPI,WAAO,EAAE;AAFF,GA5C+B;AAgDxCkB,YAAU,EAAExB,OAhD4B;AAiDxCyB,QAAM,EAAE,CAACzB,OAAD,EAAUG,MAAV,EAAkBD,MAAlB,CAjDgC;AAkDxCwB,OAAK,EAAE;AACLrB,QAAI,EAAE,CAACH,MAAD,EAASC,MAAT,CADD;AAELG,WAAO,EAAE;AAFJ;AAlDiC,CAAD,EAsDtC,MAtDsC,CAAlC","names":["propsFactory","makeLineProps","autoDraw","Boolean","autoDrawDuration","Number","String","autoDrawEasing","type","default","color","gradient","Array","gradientDirection","validator","val","includes","height","labels","labelSize","lineWidth","id","itemValue","modelValue","min","max","padding","showLabels","smooth","width"],"sources":["../../../../src/components/VSparkline/util/line.ts"],"sourcesContent":["// Utilities\nimport { propsFactory } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\nexport type SparklineItem = string | number | { value: number }\n\nexport const makeLineProps = propsFactory({\n  autoDraw: Boolean,\n  autoDrawDuration: [Number, String],\n  autoDrawEasing: {\n    type: String,\n    default: 'ease',\n  },\n  color: String,\n  gradient: {\n    type: Array as PropType<string[]>,\n    default: () => ([]),\n  },\n  gradientDirection: {\n    type: String as PropType<'top' | 'bottom' | 'left' | 'right'>,\n    validator: (val: string) => ['top', 'bottom', 'left', 'right'].includes(val),\n    default: 'top',\n  },\n  height: {\n    type: [String, Number],\n    default: 75,\n  },\n  labels: {\n    type: Array as PropType<SparklineItem[]>,\n    default: () => ([]),\n  },\n  labelSize: {\n    type: [Number, String],\n    default: 7,\n  },\n  lineWidth: {\n    type: [String, Number],\n    default: 4,\n  },\n  id: String,\n  itemValue: {\n    type: String,\n    default: 'value',\n  },\n  modelValue: {\n    type: Array as PropType<SparklineItem[]>,\n    default: () => ([]),\n  },\n  min: [String, Number],\n  max: [String, Number],\n  padding: {\n    type: [String, Number],\n    default: 8,\n  },\n  showLabels: Boolean,\n  smooth: [Boolean, String, Number],\n  width: {\n    type: [Number, String],\n    default: 300,\n  },\n}, 'Line')\n"]},"metadata":{},"sourceType":"module"}
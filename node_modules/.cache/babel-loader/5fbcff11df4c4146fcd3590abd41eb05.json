{"ast":null,"code":"import _slicedToArray from \"/Users/antoniotorres/Documents/tony/tonyweb/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectSpread from \"/Users/antoniotorres/Documents/tony/tonyweb/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport { createVNode as _createVNode, vShow as _vShow, mergeProps as _mergeProps, withDirectives as _withDirectives } from \"vue\"; // Styles\n\nimport \"./VBadge.css\"; // Components\n\nimport { VIcon } from \"../VIcon/index.js\"; // Composables\n\nimport { useBackgroundColor, useTextColor } from \"../../composables/color.js\";\nimport { makeComponentProps } from \"../../composables/component.js\";\nimport { IconValue } from \"../../composables/icons.js\";\nimport { useLocale } from \"../../composables/locale.js\";\nimport { makeLocationProps, useLocation } from \"../../composables/location.js\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.js\";\nimport { makeTagProps } from \"../../composables/tag.js\";\nimport { makeThemeProps, useTheme } from \"../../composables/theme.js\";\nimport { makeTransitionProps, MaybeTransition } from \"../../composables/transition.js\"; // Utilities\n\nimport { toRef } from 'vue';\nimport { genericComponent, pickWithRest, propsFactory, useRender } from \"../../util/index.js\";\nexport var makeVBadgeProps = propsFactory(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({\n  bordered: Boolean,\n  color: String,\n  content: [Number, String],\n  dot: Boolean,\n  floating: Boolean,\n  icon: IconValue,\n  inline: Boolean,\n  label: {\n    type: String,\n    default: '$vuetify.badge'\n  },\n  max: [Number, String],\n  modelValue: {\n    type: Boolean,\n    default: true\n  },\n  offsetX: [Number, String],\n  offsetY: [Number, String],\n  textColor: String\n}, makeComponentProps()), makeLocationProps({\n  location: 'top end'\n})), makeRoundedProps()), makeTagProps()), makeThemeProps()), makeTransitionProps({\n  transition: 'scale-rotate-transition'\n})), 'VBadge');\nexport var VBadge = genericComponent()({\n  name: 'VBadge',\n  inheritAttrs: false,\n  props: makeVBadgeProps(),\n  setup: function setup(props, ctx) {\n    var _useBackgroundColor = useBackgroundColor(toRef(props, 'color')),\n        backgroundColorClasses = _useBackgroundColor.backgroundColorClasses,\n        backgroundColorStyles = _useBackgroundColor.backgroundColorStyles;\n\n    var _useRounded = useRounded(props),\n        roundedClasses = _useRounded.roundedClasses;\n\n    var _useLocale = useLocale(),\n        t = _useLocale.t;\n\n    var _useTextColor = useTextColor(toRef(props, 'textColor')),\n        textColorClasses = _useTextColor.textColorClasses,\n        textColorStyles = _useTextColor.textColorStyles;\n\n    var _useTheme = useTheme(),\n        themeClasses = _useTheme.themeClasses;\n\n    var _useLocation = useLocation(props, true, function (side) {\n      var _props$offsetY, _props$offsetX;\n\n      var base = props.floating ? props.dot ? 2 : 4 : props.dot ? 8 : 12;\n      return base + (['top', 'bottom'].includes(side) ? Number((_props$offsetY = props.offsetY) !== null && _props$offsetY !== void 0 ? _props$offsetY : 0) : ['left', 'right'].includes(side) ? Number((_props$offsetX = props.offsetX) !== null && _props$offsetX !== void 0 ? _props$offsetX : 0) : 0);\n    }),\n        locationStyles = _useLocation.locationStyles;\n\n    useRender(function () {\n      var value = Number(props.content);\n      var content = !props.max || isNaN(value) ? props.content : value <= Number(props.max) ? value : \"\".concat(props.max, \"+\");\n\n      var _pickWithRest = pickWithRest(ctx.attrs, ['aria-atomic', 'aria-label', 'aria-live', 'role', 'title']),\n          _pickWithRest2 = _slicedToArray(_pickWithRest, 2),\n          badgeAttrs = _pickWithRest2[0],\n          attrs = _pickWithRest2[1];\n\n      return _createVNode(props.tag, _mergeProps({\n        \"class\": ['v-badge', {\n          'v-badge--bordered': props.bordered,\n          'v-badge--dot': props.dot,\n          'v-badge--floating': props.floating,\n          'v-badge--inline': props.inline\n        }, props.class]\n      }, attrs, {\n        \"style\": props.style\n      }), {\n        default: function _default() {\n          var _ctx$slots$default, _ctx$slots;\n\n          return [_createVNode(\"div\", {\n            \"class\": \"v-badge__wrapper\"\n          }, [(_ctx$slots$default = (_ctx$slots = ctx.slots).default) === null || _ctx$slots$default === void 0 ? void 0 : _ctx$slots$default.call(_ctx$slots), _createVNode(MaybeTransition, {\n            \"transition\": props.transition\n          }, {\n            default: function _default() {\n              var _ctx$slots$badge, _ctx$slots2;\n\n              return [_withDirectives(_createVNode(\"span\", _mergeProps({\n                \"class\": ['v-badge__badge', themeClasses.value, backgroundColorClasses.value, roundedClasses.value, textColorClasses.value],\n                \"style\": [backgroundColorStyles.value, textColorStyles.value, props.inline ? {} : locationStyles.value],\n                \"aria-atomic\": \"true\",\n                \"aria-label\": t(props.label, value),\n                \"aria-live\": \"polite\",\n                \"role\": \"status\"\n              }, badgeAttrs), [props.dot ? undefined : ctx.slots.badge ? (_ctx$slots$badge = (_ctx$slots2 = ctx.slots).badge) === null || _ctx$slots$badge === void 0 ? void 0 : _ctx$slots$badge.call(_ctx$slots2) : props.icon ? _createVNode(VIcon, {\n                \"icon\": props.icon\n              }, null) : content]), [[_vShow, props.modelValue]])];\n            }\n          })])];\n        }\n      });\n    });\n    return {};\n  }\n});","map":{"version":3,"mappings":"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","names":["VIcon","useBackgroundColor","useTextColor","makeComponentProps","IconValue","useLocale","makeLocationProps","useLocation","makeRoundedProps","useRounded","makeTagProps","makeThemeProps","useTheme","makeTransitionProps","MaybeTransition","toRef","genericComponent","pickWithRest","propsFactory","useRender","makeVBadgeProps","bordered","Boolean","color","String","content","Number","dot","floating","icon","inline","label","type","default","max","modelValue","offsetX","offsetY","textColor","location","transition","VBadge","name","inheritAttrs","props","setup","ctx","backgroundColorClasses","backgroundColorStyles","roundedClasses","t","textColorClasses","textColorStyles","themeClasses","side","base","includes","locationStyles","value","isNaN","attrs","badgeAttrs","class","style","slots","_createVNode","undefined","badge"],"sources":["../../../src/components/VBadge/VBadge.tsx"],"sourcesContent":["// Styles\nimport './VBadge.sass'\n\n// Components\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { useBackgroundColor, useTextColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { IconValue } from '@/composables/icons'\nimport { useLocale } from '@/composables/locale'\nimport { makeLocationProps, useLocation } from '@/composables/location'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, useTheme } from '@/composables/theme'\nimport { makeTransitionProps, MaybeTransition } from '@/composables/transition'\n\n// Utilities\nimport { toRef } from 'vue'\nimport { genericComponent, pickWithRest, propsFactory, useRender } from '@/util'\n\nexport type VBadgeSlots = {\n  default: never\n  badge: never\n}\n\nexport const makeVBadgeProps = propsFactory({\n  bordered: Boolean,\n  color: String,\n  content: [Number, String],\n  dot: Boolean,\n  floating: Boolean,\n  icon: IconValue,\n  inline: Boolean,\n  label: {\n    type: String,\n    default: '$vuetify.badge',\n  },\n  max: [Number, String],\n  modelValue: {\n    type: Boolean,\n    default: true,\n  },\n  offsetX: [Number, String],\n  offsetY: [Number, String],\n  textColor: String,\n\n  ...makeComponentProps(),\n  ...makeLocationProps({ location: 'top end' } as const),\n  ...makeRoundedProps(),\n  ...makeTagProps(),\n  ...makeThemeProps(),\n  ...makeTransitionProps({ transition: 'scale-rotate-transition' }),\n}, 'VBadge')\n\nexport const VBadge = genericComponent<VBadgeSlots>()({\n  name: 'VBadge',\n\n  inheritAttrs: false,\n\n  props: makeVBadgeProps(),\n\n  setup (props, ctx) {\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'color'))\n    const { roundedClasses } = useRounded(props)\n    const { t } = useLocale()\n    const { textColorClasses, textColorStyles } = useTextColor(toRef(props, 'textColor'))\n    const { themeClasses } = useTheme()\n\n    const { locationStyles } = useLocation(props, true, side => {\n      const base = props.floating\n        ? (props.dot ? 2 : 4)\n        : (props.dot ? 8 : 12)\n\n      return base + (\n        ['top', 'bottom'].includes(side) ? Number(props.offsetY ?? 0)\n        : ['left', 'right'].includes(side) ? Number(props.offsetX ?? 0)\n        : 0\n      )\n    })\n\n    useRender(() => {\n      const value = Number(props.content)\n      const content = (!props.max || isNaN(value)) ? props.content\n        : value <= Number(props.max) ? value\n        : `${props.max}+`\n\n      const [badgeAttrs, attrs] = pickWithRest(ctx.attrs as Record<string, any>, [\n        'aria-atomic',\n        'aria-label',\n        'aria-live',\n        'role',\n        'title',\n      ])\n\n      return (\n        <props.tag\n          class={[\n            'v-badge',\n            {\n              'v-badge--bordered': props.bordered,\n              'v-badge--dot': props.dot,\n              'v-badge--floating': props.floating,\n              'v-badge--inline': props.inline,\n            },\n            props.class,\n          ]}\n          { ...attrs }\n          style={ props.style }\n        >\n          <div class=\"v-badge__wrapper\">\n            { ctx.slots.default?.() }\n\n            <MaybeTransition transition={ props.transition }>\n              <span\n                v-show={ props.modelValue }\n                class={[\n                  'v-badge__badge',\n                  themeClasses.value,\n                  backgroundColorClasses.value,\n                  roundedClasses.value,\n                  textColorClasses.value,\n                ]}\n                style={[\n                  backgroundColorStyles.value,\n                  textColorStyles.value,\n                  props.inline ? {} : locationStyles.value,\n                ]}\n                aria-atomic=\"true\"\n                aria-label={ t(props.label, value) }\n                aria-live=\"polite\"\n                role=\"status\"\n                { ...badgeAttrs }\n              >\n                {\n                  props.dot ? undefined\n                  : ctx.slots.badge ? ctx.slots.badge?.()\n                  : props.icon ? <VIcon icon={ props.icon } />\n                  : content\n                }\n              </span>\n            </MaybeTransition>\n          </div>\n        </props.tag>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VBadge = InstanceType<typeof VBadge>\n"]},"metadata":{},"sourceType":"module"}